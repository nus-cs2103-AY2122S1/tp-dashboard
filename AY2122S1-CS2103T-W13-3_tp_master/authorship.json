[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"# Game Book","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W13-3/tp/actions) [![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W13-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-W13-3/tp)","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"## Introduction","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"* Game Book is a game tracking app for recreational gambling games players.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"* Game Book helps users track their revenues and losses across different games and generates  meaningful statistics that aid them in understanding their gaming records.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"* Game Book is designed for users who prefer Command Line Interface (CLI).","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"## Site Map","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"* [About Us](docs/AboutUs.md)  ","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"* [User Guide](docs/UserGuide.md)  ","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"* [Developer Guide](docs/DeveloperGuide.md)  ","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"-":3,"chingh20":15}},{"path":"bin/.github/check-eof-newline.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"ret\u003d0","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        ret\u003d1","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    fi","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"done","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"exit $ret","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":18}},{"path":"bin/.github/check-line-endings.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"awk \u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    BEGIN {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"        ret \u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        ret \u003d 1","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    END {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        exit ret","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":19}},{"path":"bin/.github/check-trailing-whitespace.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"awk \u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"    BEGIN {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        ret \u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"            ret \u003d 1","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    END {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"        exit ret","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":26}},{"path":"bin/.github/run-checks.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        ret\u003d1","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    fi","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"done","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"exit $ret","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":11}},{"path":"bin/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"# Game Book","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W13-3/tp/actions) [![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W13-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-W13-3/tp)","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"## Introduction","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"* Game Book is a game tracking app for recreational gambling games players.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"* Game Book helps users track their revenues and losses across different games and generates  meaningful statistics that aid them in understanding their gaming records.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"* Game Book is designed for users who prefer Command Line Interface (CLI).","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"## Site Map","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"* [About Us](docs/AboutUs.md)  ","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"* [User Guide](docs/UserGuide.md)  ","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"* [Developer Guide](docs/DeveloperGuide.md)  ","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"## Acknowledgements","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":18}},{"path":"bin/build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"plugins {","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"mainClassName \u003d \u0027seedu.gamebook.Main\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"repositories {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    mavenCentral()","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"checkstyle {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"test {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    afterEvaluate {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        })","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    reports {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        html.enabled \u003d true","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"dependencies {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"shadowJar {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":71}},{"path":"bin/config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    This configuration file enforces rules for a modified version of the module\u0027s code standard at","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    IMPORT CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"      1. STATIC: static imports","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"    An import statement is redundant if:","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"    An import statement is unused if:","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"    NAMING CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"      \u003cpre\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"        if {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"          ...","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"        } else","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"      \u003cpre\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"        if {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"          ...","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"        else","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"      \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"      else if {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"      if (true)","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"        return 1; // Not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":"    ORDER CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"      3. Constructors","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"      4. Methods","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"        --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"           by regular or curly braces.","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"dannylty"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"dannylty"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"dannylty"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"dannylty"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"dannylty"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"dannylty"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"dannylty"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"dannylty"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"dannylty"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"dannylty"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"dannylty"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":336,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"dannylty"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"dannylty"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":360,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":361,"author":{"gitId":"dannylty"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2021-10-12"},{"lineNumber":362,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"dannylty"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2021-10-12"},{"lineNumber":364,"author":{"gitId":"dannylty"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"dannylty"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"dannylty"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2021-10-12"},{"lineNumber":367,"author":{"gitId":"dannylty"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"dannylty"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":370,"author":{"gitId":"dannylty"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"dannylty"},"content":"      --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":372,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":373,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":374,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":375,"author":{"gitId":"dannylty"},"content":"    \u003c!--","lastModifiedDate":"2021-10-12"},{"lineNumber":376,"author":{"gitId":"dannylty"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2021-10-12"},{"lineNumber":377,"author":{"gitId":"dannylty"},"content":"    --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":378,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":379,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":380,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":381,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":382,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":383,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":384,"author":{"gitId":"dannylty"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":386,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":388,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":389,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":390,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":392,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":395,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"dannylty"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":397,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":398,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":399,"author":{"gitId":"dannylty"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":400,"author":{"gitId":"dannylty"},"content":"    \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":401,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":402,"author":{"gitId":"dannylty"},"content":"  \u003c/module\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":403,"author":{"gitId":"dannylty"},"content":"\u003c/module\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":403}},{"path":"bin/config/checkstyle/suppressions.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c!DOCTYPE suppressions PUBLIC","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003csuppressions\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"\u003c/suppressions\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":10}},{"path":"bin/config/travis/check-eof-newline.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"ret\u003d0","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        ret\u003d1","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    fi","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"done","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"exit $ret","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":18}},{"path":"bin/config/travis/check-line-endings.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"awk \u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    BEGIN {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"        ret \u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        ret \u003d 1","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    END {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        exit ret","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":19}},{"path":"bin/config/travis/check-trailing-whitespace.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"awk \u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"    BEGIN {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        ret \u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"            ret \u003d 1","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    END {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"        exit ret","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"\u0027","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":26}},{"path":"bin/config/travis/run-checks.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"        ret\u003d1","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    fi","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"done","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"exit $ret","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":11}},{"path":"bin/docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: About Us","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"## Project team","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"### Yeo Zhi Long","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/yzhilong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"[[github](https://github.com/yzhilong)]","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"[[portfolio](team/yzhilong.md)]","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"* Role: PLACEHOLDER","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"* Responsibilities:","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    * PLACEHOLDER.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    * PLACEHOLDER.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/dannylty.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"[[github](http://github.com/dannylty)]","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"[[portfolio](team/dannylty.md)]","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"* Role: PLACEHOLDER","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"* Responsibilities:","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  * PLACEHOLDER.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  * PLACEHOLDER.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"### Huang Ching","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/chingh20.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"[[github](http://github.com/chingh20)] [[portfolio](team/chingh20.md)]","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"* Role: PlaceHolder","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"* Responsibilities: PlaceHolder","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"### Shalini Seshadri ","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/shaliniseshadri.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"[[github](http://github.com/shaliniseshadri)]","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"[[portfolio](team/shaliniseshadri.md)]","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"* Role: Placeholder","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"* Responsibilities: Placeholder","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"### Benjamin Lee","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/benjaminlhr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"[[github](http://github.com/BenjaminLHR)]","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"[[portfolio](team/benjaminlhr.md)]","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"* Role: Placeholder","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"* Responsibilities: Placeholder","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":62}},{"path":"bin/docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Configuration guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Certain properties of the application can be controlled (e.g user preferences file location, logging level) through the configuration file (default: `config.json`).","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":6}},{"path":"bin/docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: DevOps guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"## Build automation","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"## Continuous integration (CI)","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"### Code coverage","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"### Repository-wide checks","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"**If adding new checks:**","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"## Making a release","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":79}},{"path":"bin/docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"## **Design**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"### Architecture","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"The sections below give more details of each component.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"### UI component","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"The `UI` component,","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"### Logic component","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"How the parsing works:","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"### Model component","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"The `Model` component,","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"### Storage component","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"The `Storage` component,","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"### Common classes","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"## **Implementation**","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"than attempting to perform the undo.","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"  itself.","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"### Product scope","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"**Target user profile**:","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"* has a need to track earnings/losses across various casino games","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"* can type fast","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"**Value proposition**: manage gambling earnings/losses faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"### User stories","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"| `* * *`  | new user                                   | add a new game entry         |                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"| `* * *`  | new user                                   | delete my game entries         | clear entries with erroneous data                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":"| `* * *`  | new user                                   | log my gambling statistics on a per game basis    | keep track of my spending                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"| `* * *`  | new user                                   | input any type of game         | include any game I want instead of choosing from preset list of games                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"| `* * *`  | new user                                   | save my net earnings and losses         | view data from my previous games                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"| `* * *`  | forgetful user                             | edit my previous game entries         | add details I missed out on previously                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who frequents multiple gambling locations   | input location I played at               | organize and sort my data by location                                                                       |","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who does not like scrolling                | find game entries using relevant keywords                | view my data quickly                                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"| `* *`    | expert user                | see analysis of my game statistics               | evaluate my game performance                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":"| `* *`    | expert user who gambles at different locations                | see analysis of my performance at different locations                | discern the strength of players there                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"| `* *`    | detail-oriented user                | add notes to certain game entries                | read them when reviewing my games                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who vlogs                | View an aesthetically pleasant UI                | show it to my audience in my videos                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who has tracked my previous gambling history                | see which games I have the highest win ratios in                | hone my skills in more profitable games and avoid games I am weaker at                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who is easily affected be emotions                | tag games which I made emotional decisions in                | understand how it has affected my earnings                                   |","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"| `* *`    | user who gambles frequently                | see the statistics on my expenditure                | justify my gambling habits to my family, that it is not an addiction                              |","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"| `*`      | user who gambles against friends frequently | track how good my friends are at gambling           | avoid betting large amounts when playing against stronger friends                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"| `*`      | user who switches between computers frequently | backup my data securely           | easily create copies of it to other computers                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"| `*`      | user whose hard drive is almost full | specify where the app data is stored           |                                                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":"| `*`      | user who is social gambler | add my gambling friends to my contacts           | share my statistics with them                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"| `*`      | busy user | see how much time I spend on each game           | utilize my time better                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"| `*`      | busy user | see the profit per unit time analysis of different games           | decide which game to play to maximize rate of earnings                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"dannylty"},"content":"| `*`      | expert user | see the statistics of games with specific tags           | evaluate my performance on games with the selected tags                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"dannylty"},"content":"| `*`      | expert user | compare statistics across different days of the week           | evaluate my performance on different days                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"dannylty"},"content":"| `*`      | thrillseeking user | see mean and variance calculations for different games           | choose the one with the highest variance to have fun                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"dannylty"},"content":"| `*`      | user who frequents places with an entry fee | add costs such as entry-fee into the overall calculation           | get a more accurate view of my profits                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"dannylty"},"content":"| `*`      | organized user | save different filters or sort conditions           | quickly view custom selections that are important to me                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"dannylty"},"content":"| `*`      | user who gambles with my friend | keep track of who I owed money to           | pay them back all at once                                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"dannylty"},"content":"| `*`      | user who loves alcohol | tags games that I played when I am drinking           | see how alcohols affect my performance                                                |","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"dannylty"},"content":"*{More to be added}*","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"dannylty"},"content":"### Use cases","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"dannylty"},"content":"(For all use cases below, the **System** is the `GameBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"dannylty"},"content":"**Use case: Add an entry**","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"dannylty"},"content":"**MSS**","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"dannylty"},"content":"1. User types in a new entry","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"dannylty"},"content":"2. GameBook adds in the entry","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"dannylty"},"content":"    Use case ends.","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"dannylty"},"content":"**Extensions**","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"dannylty"},"content":"* 1a. User entered the entry in an incorrect format.","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"dannylty"},"content":"    * 1a1. GameBook shows an error message.","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"dannylty"},"content":"  ","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"dannylty"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"dannylty"},"content":"**Use case: Delete an entry**","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"dannylty"},"content":"**MSS**","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"dannylty"},"content":"1.  User requests to list entries","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"dannylty"},"content":"2.  GameBook shows a list of entries","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"dannylty"},"content":"3.  User requests to delete a specific entry in the list","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"dannylty"},"content":"4.  GameBook deletes the entry","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":336,"author":{"gitId":"dannylty"},"content":"    Use case ends.","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"dannylty"},"content":"**Extensions**","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"dannylty"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"dannylty"},"content":"  Use case ends.","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"dannylty"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"dannylty"},"content":"    * 3a1. GameBook shows an error message.","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"dannylty"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"dannylty"},"content":"*{More to be added}*","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"dannylty"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"dannylty"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"dannylty"},"content":"2. Should be able to hold up to 1000 entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"dannylty"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"dannylty"},"content":"4. A novice should be able to grasp the basic functionalities of the system without too much difficulty.","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"dannylty"},"content":"5. A user should be able to easily back up data.","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":360,"author":{"gitId":"dannylty"},"content":"### Glossary","lastModifiedDate":"2021-10-12"},{"lineNumber":361,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":362,"author":{"gitId":"dannylty"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":364,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"dannylty"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2021-10-12"},{"lineNumber":367,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"dannylty"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":370,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"dannylty"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2021-10-12"},{"lineNumber":372,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":373,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":374,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":375,"author":{"gitId":"dannylty"},"content":"### Launch and shutdown","lastModifiedDate":"2021-10-12"},{"lineNumber":376,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":377,"author":{"gitId":"dannylty"},"content":"1. Initial launch","lastModifiedDate":"2021-10-12"},{"lineNumber":378,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":379,"author":{"gitId":"dannylty"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2021-10-12"},{"lineNumber":380,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":381,"author":{"gitId":"dannylty"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-10-12"},{"lineNumber":382,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":383,"author":{"gitId":"dannylty"},"content":"1. Saving window preferences","lastModifiedDate":"2021-10-12"},{"lineNumber":384,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"dannylty"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2021-10-12"},{"lineNumber":386,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"dannylty"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":388,"author":{"gitId":"dannylty"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2021-10-12"},{"lineNumber":389,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":390,"author":{"gitId":"dannylty"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":392,"author":{"gitId":"dannylty"},"content":"### Deleting a person","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"dannylty"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-10-12"},{"lineNumber":395,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"dannylty"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":397,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":398,"author":{"gitId":"dannylty"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":399,"author":{"gitId":"dannylty"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-12"},{"lineNumber":400,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":401,"author":{"gitId":"dannylty"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":402,"author":{"gitId":"dannylty"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-12"},{"lineNumber":403,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":404,"author":{"gitId":"dannylty"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":405,"author":{"gitId":"dannylty"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-12"},{"lineNumber":406,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":407,"author":{"gitId":"dannylty"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-10-12"},{"lineNumber":408,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":409,"author":{"gitId":"dannylty"},"content":"### Saving data","lastModifiedDate":"2021-10-12"},{"lineNumber":410,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":411,"author":{"gitId":"dannylty"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2021-10-12"},{"lineNumber":412,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":413,"author":{"gitId":"dannylty"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2021-10-12"},{"lineNumber":414,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":415,"author":{"gitId":"dannylty"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":415}},{"path":"bin/docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Documentation guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"**Style guidance:**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"**Diagrams:**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":29}},{"path":"bin/docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Logging guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"* We are using `java.util.logging` package for logging.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"* The `LogsCenter` class is used to manage the logging levels and logging destinations.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"*  The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"*  Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"*  The output logging level can be controlled using the `logLevel` setting in the configuration file (See the [Configuration guide](Configuration.md) section).","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"* **When choosing a level for a log message**, follow the conventions given in [_[se-edu/guides] Java: Logging conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":11}},{"path":"bin/docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Setting up and getting started","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"## Setting up the project in your computer","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"1. **Verify the setup**:","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"   1. Run the `seedu.gamebook.Main` and try a few commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"## Before writing code","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"1. **Configure the coding style**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"1. **Set up CI**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"1. **Learn the design**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"1. **Do the tutorials**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":54}},{"path":"bin/docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Testing guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"## Running tests","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"There are two ways to run tests.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"## Types of tests","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"This project has three types of tests:","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.commons.StringUtilTest`","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.storage.StorageManagerTest`","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.logic.LogicManagerTest`","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"BenjaminLHR":3,"dannylty":33}},{"path":"bin/docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: User Guide","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Game Book is a **desktop app for tracking your gambling performance, optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Game Book can log and display ","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"your gambling performance faster than with traditional GUI apps.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"## Quick start","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"1. Ensure that you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"2. Download the latest `gamebook.jar` from [here](https://github.com/AY2122S1-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"3. Copy the JAR file to the folder you want to use as the _home folder_ for GameBook.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"4. Double-click the JAR file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"   \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"5. Type the command in the command box and press “Enter” to execute it. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"   * **`add /game Poker /start 500 /end 650 /date 20/06/21 /duration 142 /location Sentosa Casino`**: \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"     Adds an entry of Poker where you started with $500 and ended with $650 (played on 20th June 2021 for 142min at ","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"     Sentosa Casino) into the Game Book.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"   ","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"   * **`delete 2`** : Deletes the 2nd entry shown in the current list","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"   * **`exit`** : Exits from Game Book.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"## Features","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"  e.g. in `add /game GAMENAME /start INITIALCASH /end FINALCASH`, `GAMENAME`, `INTIIALCASH`, and `FINALCASH` are ","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"  parameters which can be used as `add /game poker /start 0.01 /end 1.02`.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"  e.g `add /game GAMENAME /start INITIALCASH /end FINALCASH [/date DATE]` can be used as ","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"  `add /game poker /start 0.01 /end 1.02` or as `add /game poker /start 0.01 /end 1.02 /date 11/9/21 21:20`.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"### Adding a person: `add`","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"Adds a person to the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"Format: `add /game GAMENAME /start INITIALCASH /end FINALCASH [/date DATE] [/duration DURATION] [/location LOCATION] [/tag TAGS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"A game can have any number of tags (including 0)","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"* `add /game blackjack /start 12.34 /end -56.78 /date 13/9/21 /duration 1:23 /location Marina Bay Sands`","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"* `add /game poker /start 0.01 /end 1.02 /date 11/9/21 21:20 /duration 3:14 /location Home`","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"* `add /game poker /end 0.2 /tag loose run-good`","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"### Listing all games : `list`","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"Shows a list of all games in the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"Format: `list`","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"### Reads a specific game : `read`","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"Shows the details of a specific game.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"Format: `read INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"* `read 5` shows the game record at index 5 of the game list.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"### Editing a game : `edit`","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"Edits an existing game in the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"Format: `edit INDEX [/game GAMENAME] [/start INITIALCASH] [/end FINALCASH] [/date DATE] [/duration DURATION] [/location LOCATION] [/tag TAGS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"* Edits the game record at the specified `INDEX`. `INDEX` refers to the index of the game within the game list, which ","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"  **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"* Only selected properties of the game record will be edited, all other properties will remain unchanged.","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"* Edited tags will replace existing tags completely.","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"* If the selected property was initially empty, it would be updated to be the value the user gave in the flag.","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"* Updated values will be reflected in the file saved to the disk.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"*  `edit 1 /game roulette /start 1` edits the game type of the 1st game to roulette, and the amount of cash the user ","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"   started the game with to 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"*  `edit 3 /start 1 /location John’s house` edits the location where the first game was played to be “John’s house”, ","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"   regardless of whether the initial location was empty or not.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"### Deleting a game: `delete`","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"Deletes the game at the specified index.","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"* Deletes the game record at the specified `INDEX`. `INDEX` refers to the index of the game within the game list, which ","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"  **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"* Selected game will also be deleted from the file in the disk.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"* Indices of all remaining tasks will be updated.","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"  * Suppose game record `3` has been deleted, then all game records with `INDEX \u003e 3` will be decremented by 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"* `delete 2` deletes the 2nd game in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"Exits the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"Format: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"### Saving the data","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"GameBook data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"### Editing the data file","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"GameBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"If your changes to the data file makes its format invalid, GameBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"## FAQ","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains ","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"the data of your previous GameBook home folder.","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"**Q**: Can I edit the data by directly modifying the data file?\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"**A**: Technically you can if you follow the exact storage format. However, we strongly advise against it as any ","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"mistakes will cause the app to throw an exception.","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"**Q**: (Follow up from previous question) What is the storage format of the data file?\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"**A**: (To be answered)","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"## Command summary","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"--------|------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"**Add** | `add /game GAMENAME /start INITIALCASH /end FINALCASH [/date DATE] [/duration DURATION] [/location LOCATION] [/tag TAGS]` \u003cbr\u003e \u003cbr\u003e e.g., \u003cbr\u003e `add /game blackjack /start 12.34 /end -56.78 /date 13/9/21 /duration 1:23 /location Marina Bay Sands` \u003cbr\u003e `add /game poker /start 0.01 /end 1.02 /date 11/9/21 21:20 /duration 3:14 /location Home` \u003cbr\u003e `add /game poker /end 0.2 /tag loose run-good`","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"**List** | `list`","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"**Read** | `read`","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e \u003cbr\u003e e.g., `delete 1`","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"**Edit** | `edit INDEX [/game GAMENAME] [/start INITIALCASH] [/end FINALCASH] [/date DATE] [/duration DURATION] [/location LOCATION] [/tag TAGS]` \u003cbr\u003e \u003cbr\u003e e.g., \u003cbr\u003e`edit 1 /game roulette /start 1` \u003cbr\u003e `edit 3 /start 1 /location John’s house`","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":173}},{"path":"bin/docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"html {","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":" * Reset some basic elements","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"  margin: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"  padding: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":" * Basic styling","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"body {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"  color: $text-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"  background-color: $background-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"  font-kerning: normal;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"  display: flex;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  min-height: 100vh;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  flex-direction: column;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"p, blockquote, pre,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"%vertical-rhythm {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"hr {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":" * `main` element","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"main {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":" * Images","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"img {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"  max-width: 100%;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"  vertical-align: middle;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":" * Figures","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"figure \u003e img {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"  display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"figcaption {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":" * Lists","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"ul, ol {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"li {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"  \u003e ul,","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"  \u003e ol {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"    margin-bottom: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":" * Headings","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":" * Links","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"a {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"  color: $link-base-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"  text-decoration: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"  \u0026:visited {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"    color: $link-visited-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"  \u0026:hover {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"    color: $text-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"    text-decoration: underline;","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"    text-decoration: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"    .username {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"      text-decoration: underline;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":" * Blockquotes","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"blockquote {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"  color: $brand-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"  font-style: italic;","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"  \u003e :last-child {","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"    margin-bottom: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"  i, em {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"    font-style: normal;","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":" * Code formatting","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"pre,","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"code {","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"  border-radius: 3px;","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"code {","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"  padding: 1px 5px;","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"pre {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"  padding: 8px 12px;","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"  overflow-x: auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"  \u003e code {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"    border: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"    padding-right: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"    padding-left: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":".highlight {","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"  border-radius: 3px;","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"  background: $code-background-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"    background: $code-background-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":" * Wrapper","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":".wrapper {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"  margin-right: auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"  margin-left: auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"  @extend %clearfix;","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":" * Clearfix","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"%clearfix:after {","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"  content: \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"  display: table;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"  clear: both;","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":" * Icons","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":".orange {","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"  color: #f66a0a;","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":".grey {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"  color: #828282;","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":" * Tables","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"table {","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"  width: 100%;","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"  color: $table-text-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"  border-collapse: collapse;","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"  tr {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"  th, td {","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"  th {","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"  td {","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"    display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"    overflow-x: auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"@media print {","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"  /**","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":"  */","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"  body {","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"    display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"  /**","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"  */","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"    display: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"  .site-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":"    text-align: center;","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"  .site-header:before {","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"    content: \"GameBook\";","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"    font-size: 32px;","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":295}},{"path":"bin/docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":" * Site header","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":".site-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"  position: relative;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":".site-title {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"  font-weight: 300;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"  margin-bottom: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"  float: left;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    padding-right: 45px;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"  \u0026,","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"  \u0026:visited {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":".site-nav {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  position: absolute;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  top: 9px;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"  background-color: $background-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"  border-radius: 5px;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"  text-align: right;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"  .nav-trigger {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"      display: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"  .menu-icon {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    float: right;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"    width: 36px;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    height: 26px;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    line-height: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    padding-top: 10px;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    text-align: center;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    \u003e svg path {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"    float: right;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"    width: 36px;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"    height: 36px;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"    z-index: 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    cursor: pointer;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"  input ~ .trigger {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"    clear: both;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    display: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"    display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"  .page-link {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    color: $text-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"    display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    padding: 5px 10px;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"      margin-right: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"    margin-left: 20px;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"    position: static;","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"    float: right;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"    border: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"    background-color: inherit;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"      display: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"    .menu-icon {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"      display: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"    input ~ .trigger {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"      display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    .page-link {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"      display: inline;","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"      padding: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"        margin-right: 20px;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"      margin-left: auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":" * Page content","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":".page-content {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":".page-heading {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":".post-list-heading {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":".post-list {","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"  margin-left: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"  list-style: none;","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"  \u003e li {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":".post-meta {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"  color: $brand-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":".post-link {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"  display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":" * Posts","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":".post-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":".post-title,","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":".post-content h1 {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"  line-height: 1.15;","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":".post-content {","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"  h2 {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"  h3 {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"  h4 {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"  h5 {","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"  h6 {","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":".social-media-list {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"  display: table;","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"  margin: 0 auto;","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"  li {","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"    float: left;","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"    a {","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":"      display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":" * Pagination navbar","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":".pagination {","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"  @extend .social-media-list;","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"  li {","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":"    a, div {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"      min-width: 41px;","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"      text-align: center;","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"      box-sizing: border-box;","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"    div {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"      display: block;","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"        border: 1px dashed;","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":" * Grid helpers","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"  .one-half {","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":263}},{"path":"bin/docs/_sass/minima/custom-mixins.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@mixin alert-variant($background, $border, $color) {","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"  color: $color;","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"  @include gradient-bg($background);","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"  border-color: $border;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"  .alert-link {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    color: darken($color, 10%);","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"@mixin gradient-bg($color, $foreground: null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"  @if $enable-gradients {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    @if $foreground {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"      background-image: $foreground, linear-gradient(180deg, mix($body-bg, $color, 15%), $color);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    } @else {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"      background-image: linear-gradient(180deg, mix($body-bg, $color, 15%), $color);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"  } @else {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    background-color: $color;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":21}},{"path":"bin/docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"  color: #e46c0a;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"// Bootstrap style alerts","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":".alert {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"  position: relative;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"  order-radius : $alert-border-radius;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"// Headings for larger alerts","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":".alert-heading {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"  color: inherit;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":".alert-link {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"  .alert-#{$color} {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":34}},{"path":"bin/docs/_sass/minima/custom-variables.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"// Placeholder to allow overriding predefined variables smoothly.","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"//Bootstrap\u0027s default","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"$white:    #fff !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"$gray-100: #f8f9fa !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"$gray-200: #e9ecef !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"$gray-300: #dee2e6 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"$gray-400: #ced4da !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"$gray-500: #adb5bd !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"$gray-600: #6c757d !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"$gray-700: #495057 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"$gray-800: #343a40 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"$gray-900: #212529 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"$black:    #000 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"$blue:    #0d6efd !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"$indigo:  #6610f2 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"$purple:  #6f42c1 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"$pink:    #d63384 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"$red:     #dc3545 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"$orange:  #fd7e14 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"$yellow:  #ffc107 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"$green:   #28a745 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"$teal:    #20c997 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"$cyan:    #17a2b8 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"$primary:       $blue !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"$secondary:     $gray-600 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"$success:       $green !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"$info:          $cyan !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"$warning:       $yellow !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"$danger:        $red !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"$light:         $gray-100 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"$dark:          $gray-800 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"$theme-colors: (","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"  \"primary\":    $primary,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"  \"secondary\":  $secondary,","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"  \"success\":    $success,","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"  \"info\":       $info,","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"  \"warning\":    $warning,","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"  \"danger\":     $danger,","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"  \"light\":      $light,","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"  \"dark\":       $dark","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":") !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"$theme-color-interval: 8% !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"$body-bg:                   $white !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"$body-color:                $gray-900 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"$body-text-align:           null !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"$enable-gradients: true;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"// Define alert colors, border radius, and padding.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"$border-radius:               .25rem !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"$border-width:                1px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"$font-weight-bold:            700 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"$alert-padding-y:                   .75rem !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"$alert-padding-x:                   1.25rem !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"$alert-margin-bottom:               1rem !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"$alert-border-radius:               $border-radius !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"$alert-link-font-weight:            $font-weight-bold !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"$alert-border-width:                $border-width !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"$alert-bg-level:                    -10 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"$alert-border-level:                -9 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"$alert-color-level:                 6 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"// Request a color level","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"// scss-docs-start color-level","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"@function color-level($color: $primary, $level: 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"  $color-base: if($level \u003e 0, $black, $white);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"  $level: abs($level);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"  @return mix($color-base, $color, $level * $theme-color-interval);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":76}},{"path":"bin/docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"// Define defaults for each variable.","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"$table-text-align: left !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"// Width of the content area","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"$content-width:    800px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"// Use media queries like this:","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"//   .wrapper {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"//   }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"// }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"@mixin media-query($device) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    @content;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"@import","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":";","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":51}},{"path":"bin/docs/_sass/minima/skins/classic.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"$brand-color:           #828282 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"$brand-color-light:     lighten($brand-color, 40%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"$brand-color-dark:      darken($brand-color, 25%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"$text-color:            #111 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"$background-color:      #fdfdfd !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"$code-background-color: #eef !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"$link-base-color:       #2a7ae2 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"$link-visited-color:    darken($link-base-color, 15%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"$table-text-color:      lighten($text-color, 18%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"$table-zebra-color:     lighten($brand-color, 46%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"$table-header-bg-color: lighten($brand-color, 43%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"$table-header-border:   lighten($brand-color, 36%) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"$table-border-color:    $brand-color-light !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"// Syntax highlighting styles should be adjusted appropriately for every \"skin\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"// ----------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":".highlight {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"  .c     { color: #998; font-style: italic } // Comment","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"  .err   { color: #a61717; background-color: #e3d2d2 } // Error","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"  .k     { font-weight: bold } // Keyword","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"  .o     { font-weight: bold } // Operator","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"  .cm    { color: #998; font-style: italic } // Comment.Multiline","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"  .cp    { color: #999; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"  .c1    { color: #998; font-style: italic } // Comment.Single","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  .gd    { color: #000; background-color: #fdd } // Generic.Deleted","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"  .ge    { font-style: italic } // Generic.Emph","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"  .gr    { color: #a00 } // Generic.Error","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"  .gh    { color: #999 } // Generic.Heading","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"  .gi    { color: #000; background-color: #dfd } // Generic.Inserted","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"  .go    { color: #888 } // Generic.Output","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"  .gp    { color: #555 } // Generic.Prompt","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"  .gs    { font-weight: bold } // Generic.Strong","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"  .gu    { color: #aaa } // Generic.Subheading","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"  .gt    { color: #a00 } // Generic.Traceback","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"  .kc    { font-weight: bold } // Keyword.Constant","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"  .kd    { font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"  .kp    { font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"  .kr    { font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"  .kt    { color: #458; font-weight: bold } // Keyword.Type","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"  .m     { color: #099 } // Literal.Number","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"  .s     { color: #d14 } // Literal.String","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"  .na    { color: #008080 } // Name.Attribute","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"  .nb    { color: #0086B3 } // Name.Builtin","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"  .nc    { color: #458; font-weight: bold } // Name.Class","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"  .no    { color: #008080 } // Name.Constant","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"  .ni    { color: #800080 } // Name.Entity","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"  .ne    { color: #900; font-weight: bold } // Name.Exception","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"  .nf    { color: #900; font-weight: bold } // Name.Function","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"  .nn    { color: #555 } // Name.Namespace","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"  .nt    { color: #000080 } // Name.Tag","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"  .nv    { color: #008080 } // Name.Variable","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"  .ow    { font-weight: bold } // Operator.Word","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"  .w     { color: #bbb } // Text.Whitespace","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"  .mf    { color: #099 } // Literal.Number.Float","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"  .mh    { color: #099 } // Literal.Number.Hex","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"  .mi    { color: #099 } // Literal.Number.Integer","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"  .mo    { color: #099 } // Literal.Number.Oct","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"  .sb    { color: #d14 } // Literal.String.Backtick","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"  .sc    { color: #d14 } // Literal.String.Char","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"  .sd    { color: #d14 } // Literal.String.Doc","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"  .s2    { color: #d14 } // Literal.String.Double","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"  .se    { color: #d14 } // Literal.String.Escape","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"  .sh    { color: #d14 } // Literal.String.Heredoc","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"  .si    { color: #d14 } // Literal.String.Interpol","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"  .sx    { color: #d14 } // Literal.String.Other","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"  .sr    { color: #009926 } // Literal.String.Regex","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"  .s1    { color: #d14 } // Literal.String.Single","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"  .ss    { color: #990073 } // Literal.String.Symbol","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"  .bp    { color: #999 } // Name.Builtin.Pseudo","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"  .vc    { color: #008080 } // Name.Variable.Class","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"  .vg    { color: #008080 } // Name.Variable.Global","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"  .vi    { color: #008080 } // Name.Variable.Instance","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"  .il    { color: #099 } // Literal.Number.Integer.Long","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":84}},{"path":"bin/docs/_sass/minima/skins/solarized-dark.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"$sol-is-dark: true;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"@import \"minima/skins/solarized\";","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":4}},{"path":"bin/docs/_sass/minima/skins/solarized.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"// Solarized skin","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"// Created by Sander Voerman \u003cmailto:sander@savoerman.nl\u003e using the Solarized","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"// color scheme by Ethan Schoonover \u003chttps://ethanschoonover.com/solarized\u003e.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"// This style sheet implements two options for the minima.skin setting:","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"// \"solarized\" for light mode and \"solarized-dark\" for dark mode.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"$sol-is-dark: false !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"// Color scheme","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"// ------------","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"// The inline comments show the canonical L*a*b values for each color.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"$sol-base03:   #002b36;  // 15 -12 -12","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"$sol-base02:   #073642;  // 20 -12 -12","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"$sol-base01:   #586e75;  // 45 -07 -07","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"$sol-base00:   #657b83;  // 50 -07 -07","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"$sol-base0:    #839496;  // 60 -06 -03","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"$sol-base1:    #93a1a1;  // 65 -05 -02","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"$sol-base2:    #eee8d5;  // 92 -00  10","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"$sol-base3:    #fdf6e3;  // 97  00  10","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"$sol-yellow:   #b58900;  // 60  10  65","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"$sol-orange:   #cb4b16;  // 50  50  55","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"$sol-red:      #dc322f;  // 50  65  45","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"$sol-magenta:  #d33682;  // 50  65 -05","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"$sol-violet:   #6c71c4;  // 50  15 -45","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"$sol-blue:     #268bd2;  // 55 -10 -45","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"$sol-cyan:     #2aa198;  // 60 -35 -05","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"$sol-green:    #859900;  // 60 -20  65","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"$sol-mono3:    $sol-base3;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"$sol-mono2:    $sol-base2;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"$sol-mono1:    $sol-base1;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"$sol-mono00:   $sol-base00;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"$sol-mono01:   $sol-base01;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"@if $sol-is-dark {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"  $sol-mono3:  $sol-base03;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"  $sol-mono2:  $sol-base02;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"  $sol-mono1:  $sol-base01;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"  $sol-mono00: $sol-base0;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"  $sol-mono01: $sol-base1;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"// Minima color variables","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"// ----------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"$brand-color:           $sol-mono1 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"$brand-color-light:     mix($sol-mono1, $sol-mono3) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"$brand-color-dark:      $sol-mono00 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"$text-color:            $sol-mono01 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"$background-color:      $sol-mono3 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"$code-background-color: $sol-mono2 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"$link-base-color:       $sol-blue !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"$link-visited-color:    mix($sol-blue, $sol-mono00) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"$table-text-color:      $sol-mono00 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"$table-zebra-color:     mix($sol-mono2, $sol-mono3) !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"$table-header-bg-color: $sol-mono2 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"$table-header-border:   $sol-mono1 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"$table-border-color:    $sol-mono1 !default;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"// Syntax highlighting styles","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"// --------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":".highlight {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"  .c     { color: $sol-mono1; font-style: italic } // Comment","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"  .err   { color: $sol-red } // Error","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"  .k     { color: $sol-mono01; font-weight: bold } // Keyword","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"  .o     { color: $sol-mono01; font-weight: bold } // Operator","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"  .cm    { color: $sol-mono1; font-style: italic } // Comment.Multiline","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"  .cp    { color: $sol-mono1; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"  .c1    { color: $sol-mono1; font-style: italic } // Comment.Single","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"  .cs    { color: $sol-mono1; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"  .gd    { color: $sol-red } // Generic.Deleted","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"  .gd .x { color: $sol-red } // Generic.Deleted.Specific","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"  .ge    { color: $sol-mono00; font-style: italic } // Generic.Emph","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"  .gr    { color: $sol-red } // Generic.Error","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"  .gh    { color: $sol-mono1 } // Generic.Heading","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"  .gi    { color: $sol-green } // Generic.Inserted","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"  .gi .x { color: $sol-green } // Generic.Inserted.Specific","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"  .go    { color: $sol-mono00 } // Generic.Output","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"  .gp    { color: $sol-mono00 } // Generic.Prompt","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"  .gs    { color: $sol-mono01; font-weight: bold } // Generic.Strong","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"  .gu    { color: $sol-mono1 } // Generic.Subheading","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"  .gt    { color: $sol-red } // Generic.Traceback","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"  .kc    { color: $sol-mono01; font-weight: bold } // Keyword.Constant","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"  .kd    { color: $sol-mono01; font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"  .kp    { color: $sol-mono01; font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"  .kr    { color: $sol-mono01; font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"  .kt    { color: $sol-violet; font-weight: bold } // Keyword.Type","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"  .m     { color: $sol-cyan } // Literal.Number","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"  .s     { color: $sol-magenta } // Literal.String","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"  .na    { color: $sol-cyan } // Name.Attribute","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"  .nb    { color: $sol-blue } // Name.Builtin","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"  .nc    { color: $sol-violet; font-weight: bold } // Name.Class","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"  .no    { color: $sol-cyan } // Name.Constant","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"  .ni    { color: $sol-violet } // Name.Entity","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"  .ne    { color: $sol-violet; font-weight: bold } // Name.Exception","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"  .nf    { color: $sol-blue; font-weight: bold } // Name.Function","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"  .nn    { color: $sol-mono00 } // Name.Namespace","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"  .nt    { color: $sol-blue } // Name.Tag","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"  .nv    { color: $sol-cyan } // Name.Variable","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"  .ow    { color: $sol-mono01; font-weight: bold } // Operator.Word","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"  .w     { color: $sol-mono1 } // Text.Whitespace","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"  .mf    { color: $sol-cyan } // Literal.Number.Float","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"  .mh    { color: $sol-cyan } // Literal.Number.Hex","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"  .mi    { color: $sol-cyan } // Literal.Number.Integer","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"  .mo    { color: $sol-cyan } // Literal.Number.Oct","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"  .sb    { color: $sol-magenta } // Literal.String.Backtick","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"  .sc    { color: $sol-magenta } // Literal.String.Char","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"  .sd    { color: $sol-magenta } // Literal.String.Doc","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"  .s2    { color: $sol-magenta } // Literal.String.Double","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"  .se    { color: $sol-magenta } // Literal.String.Escape","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"  .sh    { color: $sol-magenta } // Literal.String.Heredoc","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"  .si    { color: $sol-magenta } // Literal.String.Interpol","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"  .sx    { color: $sol-magenta } // Literal.String.Other","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"  .sr    { color: $sol-green } // Literal.String.Regex","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"  .s1    { color: $sol-magenta } // Literal.String.Single","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"  .ss    { color: $sol-magenta } // Literal.String.Symbol","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"  .bp    { color: $sol-mono1 } // Name.Builtin.Pseudo","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"  .vc    { color: $sol-cyan } // Name.Variable.Class","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"  .vg    { color: $sol-cyan } // Name.Variable.Global","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"  .vi    { color: $sol-cyan } // Name.Variable.Instance","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"  .il    { color: $sol-cyan } // Literal.Number.Integer.Long","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":133}},{"path":"bin/docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"@import","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"  \"minima/initialize\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":".icon {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    height: 21px;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    width: 21px","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":12}},{"path":"bin/docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    Class Model MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    Class Main #grey","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"UI -right[#green]-\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"Logic -down[#blue]-\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"Main -up[#grey]-\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"Storage -up[STORAGE_COLOR].\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"User ..\u003e UI","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":33}},{"path":"bin/docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"deactivate model","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"deactivate storage","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"deactivate storage","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"deactivate logic","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"deactivate ui","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":38}},{"path":"bin/docs/diagrams/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"package Logic {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class LogicManager","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"package Model{","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class ModelManager","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"package Storage{","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"Class StorageManager","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":31}},{"path":"bin/docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"end box","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"end box","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"activate LogicManager","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"create DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"activate Model","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"deactivate Model","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"create CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"activate CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":69}},{"path":"bin/docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"package Logic {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Class XYZCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Class LogicManager","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"package Model{","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"package Storage{","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"Command .right.\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":46}},{"path":"bin/docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class AddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"Class Model","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class ModelManager","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"Class UserPrefs","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"Class UniquePersonList","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"Class Person","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"Class Address","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"Class Email","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"Class Name","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"Class Phone","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"Class Tag","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"Person *--\u003e Name","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"Person *--\u003e Phone","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"Person *--\u003e Email","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"Person *--\u003e Address","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":54}},{"path":"bin/docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Class XYZCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class CliSyntax","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"Class ParserUtil","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"Class Prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":38}},{"path":"bin/docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"package Storage{","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"Class StorageManager","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":43}},{"path":"bin/docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Class UiManager","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class MainWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class HelpWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"Class ResultDisplay","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class PersonListPanel","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"Class PersonCard","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Class StatusBarFooter","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Class CommandBox","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":60}},{"path":"bin/docs/diagrams/plantuml/AbeforeC.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class C UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class D UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"A --\u003e B","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"C --\u003e D","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":11}},{"path":"bin/docs/diagrams/plantuml/AllDown.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class C LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class D LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class 1 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Class 2 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class 3 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class 4 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class Z UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"A --\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"B --\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"C --\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"D --\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"A --\u003e 1","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"B --\u003e 2","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"C --\u003e 3","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"D --\u003e 4","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":25}},{"path":"bin/docs/diagrams/plantuml/ArrowLength.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Package \"Short\\n-\u003e\" {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T1","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"A -\u003e B","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Package \"Long\\n--\u003e\" {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class C LOGIC_COLOR_T2","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class D LOGIC_COLOR_T2","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"C --\u003e D","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"Package \"Longer\\n---\u003e\" {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Class E LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"Class F LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"E ---\u003e F","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"Package \"Even Longer\\n----\u003e\" {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"Class G LOGIC_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"Class H LOGIC_COLOR_T4","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"G ----\u003e H","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":27}},{"path":"bin/docs/diagrams/plantuml/CbeforeA.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Class C UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class D UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"A --\u003e B","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"C --\u003e D","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":11}},{"path":"bin/docs/diagrams/plantuml/HiddenArrows.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class C LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class D LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class 1 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Class 2 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class 3 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class 4 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class Z UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"A -up-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"B -up-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"C -up-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"D -up-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"A --\u003e 1","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"B --\u003e 2","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"C --\u003e 3","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"D --\u003e 4","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"\u0027Force A B C D","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"A -right[hidden]- B","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"B -right[hidden]- C","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"C -right[hidden]- D","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":30}},{"path":"bin/docs/diagrams/plantuml/PackagesAndConsistency.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"package \"Rule Of Thumb\"{","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"    Class C UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"    Class D UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    A --\u003e B","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    C --\u003e D","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":14}},{"path":"bin/docs/diagrams/plantuml/UpAndDown.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Class A LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Class B LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Class C LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Class D LOGIC_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"Class 1 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Class 2 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"Class 3 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"Class 4 MODEL_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"Class Z UI_COLOR_T3","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"\u0027default is down","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"A --\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"\u0027specify down","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"B -down-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"\u0027shorthand for down","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"C -d-\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"\u0027arrow lengths take priority","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"D -down\u003e Z","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"A -up-\u003e 1","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"B -up-\u003e 2","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"C -up-\u003e 3","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"D -up-\u003e 4","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":29}},{"path":"bin/docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"/\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":" \u0027/","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"skinparam Class {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    FontName Arial","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"skinparam Actor {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    FontName Arial","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"skinparam Sequence {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"    MessageAlign center","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"    BoxPadding 0","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"    FontName Arial","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"skinparam Participant {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"    Padding 20","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"hide footbox","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"hide members","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"hide circle","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":75}},{"path":"bin/docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@startuml","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"[-\u003e logic : execute","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"activate logic","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"create ecp","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"abp -\u003e ecp","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"create ec","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"ec --\u003e ecp --","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"@enduml","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":21}},{"path":"bin/docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: GameBook","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"**Acknowledgements**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":19}},{"path":"bin/docs/team/benjaminlhr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"### Project: Game Book","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Game Book is a ...","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":10}},{"path":"bin/docs/team/chingh20.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"#Huang Ching\u0027s Project Portfolio Page ","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":1}},{"path":"bin/docs/team/dannylty.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"Tianyi\u0027s Project Portfolio Page ","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":1}},{"path":"bin/docs/team/shaliniseshadri.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Shalini Seshadri\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"### Project: Game Book ","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Game Book is a ... ","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"* **New Feature**: ","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"* **New Feature**: ","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"* **Project management**:","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":" ","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"  * User Guide:","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"   ","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"  * Developer Guide:","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"* **Community**:","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"  ","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"* **Tools**:","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":33}},{"path":"bin/docs/team/yzhilong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: Zhi Long\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"### Project: Game Book","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"Game Book is a ...","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":10}},{"path":"bin/docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"## Create a new `remark` command","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"### Run the application","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"### Make the command accept parameters","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"//...","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"    //...","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"    private final Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"    private final String remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"        throw new CommandException(","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"### Parse user input","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"BenjaminLHR"},"content":"Create a `RemarkCommandParser` class in the `seedu.gamebook.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":" * arguments","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"    requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"    Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"    try {","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"## Add `Remark` to the model","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"### Add a new `Remark` class","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"BenjaminLHR"},"content":"Create a new `Remark` in `seedu.gamebook.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"validation.","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"### Make use of `Remark`","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"BenjaminLHR"},"content":"Simply add the following to [`seedu.gamebook.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"@FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"private Label remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"``` xml","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":"### Modify `Person`","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":"### Update other usages of `Person`","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"## Updating Storage","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"dannylty"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"dannylty"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"dannylty"},"content":"to see what the changes entail.","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"dannylty"},"content":"## Finalizing the UI","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"dannylty"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"dannylty"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"dannylty"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"dannylty"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"dannylty"},"content":"    //...","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"dannylty"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"dannylty"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"dannylty"},"content":"## Putting everything together","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"dannylty"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"dannylty"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"dannylty"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"dannylty"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"dannylty"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"dannylty"},"content":"//...","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":336,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"dannylty"},"content":"//...","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"dannylty"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"dannylty"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"dannylty"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"dannylty"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"dannylty"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"dannylty"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"dannylty"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"dannylty"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"dannylty"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"dannylty"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"dannylty"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"dannylty"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-10-12"},{"lineNumber":360,"author":{"gitId":"dannylty"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-12"},{"lineNumber":361,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":362,"author":{"gitId":"dannylty"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"dannylty"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":364,"author":{"gitId":"dannylty"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":367,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"dannylty"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":370,"author":{"gitId":"dannylty"},"content":"## Writing tests","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":372,"author":{"gitId":"dannylty"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2021-10-12"},{"lineNumber":373,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":374,"author":{"gitId":"dannylty"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2021-10-12"},{"lineNumber":375,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":376,"author":{"gitId":"dannylty"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-10-12"},{"lineNumber":377,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":378,"author":{"gitId":"dannylty"},"content":"### Automatically generating tests","lastModifiedDate":"2021-10-12"},{"lineNumber":379,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":380,"author":{"gitId":"dannylty"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2021-10-12"},{"lineNumber":381,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":382,"author":{"gitId":"dannylty"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2021-10-12"},{"lineNumber":383,"author":{"gitId":"dannylty"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2021-10-12"},{"lineNumber":384,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"dannylty"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2021-10-12"},{"lineNumber":386,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"dannylty"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":388,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":389,"author":{"gitId":"dannylty"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2021-10-12"},{"lineNumber":390,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"dannylty"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":392,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"dannylty"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":395,"author":{"gitId":"dannylty"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":397,"author":{"gitId":"dannylty"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2021-10-12"},{"lineNumber":398,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":399,"author":{"gitId":"dannylty"},"content":"## Conclusion","lastModifiedDate":"2021-10-12"},{"lineNumber":400,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":401,"author":{"gitId":"dannylty"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":6,"dannylty":395}},{"path":"bin/docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"## Safely deleting `Address`","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"### Assisted refactoring","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"The `address` field in `Person` is actually an instance of the `seedu.gamebook.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"### Manual refactoring","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"**`PersonCard.java`**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"...","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"@FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"private Label address;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"...","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"``` xml","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"...","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"...","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"## Tidying up","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"```json","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"  \"persons\": [ {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"  } ]","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":111}},{"path":"bin/docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"layout: page","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"* Table of Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"{:toc}","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"## Before we start","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"## Setting a breakpoint","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.gamebook.logic.Logic`.","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"A quick look at the `seedu.gamebook.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"```java","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"public interface Logic {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"...","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"## Tracing the execution path","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"   ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"   @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"        return commandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"   ```","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"   ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"       ...","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"       ...","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"   ```","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"    ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"    ...","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"    ...","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"    ```","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"   ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"   @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"       ...","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"       }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"   }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"   ```","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"    ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"        persons.addAll(","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"            source.getPersonList()","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":"                  .stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"    ```","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"    ``` java","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"    ```","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"## Conclusion","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"    4.  `edit 1`","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"    enhancements to the application?","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"dannylty"},"content":"    4.  Add a new command","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"dannylty"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"dannylty"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":2,"dannylty":299}},{"path":"bin/gradle.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"org.gradle.parallel\u003dfalse","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"org.gradle.jvmargs\u003d-XX:MaxMetaspaceSize\u003d512m -XX:+HeapDumpOnOutOfMemoryError -Xmx1024m -Dfile.encoding\u003dutf-8","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"# TODO: This is a workaround for a JDK11 bug which causes test coverage upload to fail.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"# Remove it when https://bugs.openjdk.java.net/browse/JDK-8221253 is fixed.","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"systemProp.jdk.tls.client.protocols\u003d\"TLSv1,TLSv1.1,TLSv1.2\"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":6}},{"path":"bin/gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.2.1-bin.zip","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":5}},{"path":"bin/gradlew.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"@rem","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"@rem","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"@rem Find java.exe","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"echo.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"echo.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"goto fail","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"echo.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"echo.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"goto fail","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":":init","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":":win9xME_args","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"set _SKIP\u003d2","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":":win9xME_args_slurp","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":":execute","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"@rem Setup the command line","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":":end","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":":fail","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"exit /b 1","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":":mainEnd","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":":omega","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":84}},{"path":"bin/src/main/resources/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":9}},{"path":"bin/src/main/resources/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":".background {","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":".label {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":".label-bright {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":".label-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":".text-field {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":".tab-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":".table-view {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"    -fx-border-color:","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        transparent","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"        transparent","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":".split-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":".list-view {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":".list-cell {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":".list-cell .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":".cell_big_label {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":".cell_small_label {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":".stack-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":".pane-with-border {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":".status-bar {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":".result-display {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":".result-display .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":".status-bar .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":".status-bar-with-border {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":".grid-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"dannylty"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":".context-menu {","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":".context-menu .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":".menu-bar {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":".menu .left-container {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"/*","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":" * Metro style Push Button","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":".button {","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"dannylty"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":".button:hover {","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"dannylty"},"content":".button:focused {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"dannylty"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"dannylty"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"dannylty"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"dannylty"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"dannylty"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"dannylty"},"content":".button:default {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":".button:default:hover {","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":".dialog-pane {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"dannylty"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"dannylty"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"dannylty"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"dannylty"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"dannylty"},"content":".scroll-bar {","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"dannylty"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"dannylty"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"dannylty"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"dannylty"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"dannylty"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"dannylty"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"dannylty"},"content":"#cardPane {","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"dannylty"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"dannylty"},"content":"#commandTextField {","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"dannylty"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"dannylty"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"dannylty"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"dannylty"},"content":"#filterField, #gameEntryListPanel, #gameEntryWebpage {","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"dannylty"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"dannylty"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-12"},{"lineNumber":336,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"dannylty"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"dannylty"},"content":"#tags {","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"dannylty"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"dannylty"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"dannylty"},"content":"#tags .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"dannylty"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"dannylty"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"dannylty"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"dannylty"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"dannylty"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":352}},{"path":"bin/src/main/resources/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":".error {","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":".list-cell:empty {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    -fx-background: #383838;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":".tag-selector {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":".tooltip-text {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":20}},{"path":"bin/src/main/resources/view/Fonts.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"@font-face {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":44}},{"path":"bin/src/main/resources/view/GameEntryListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        \u003cLabel fx:id\u003d\"gameType\" text\u003d\"\\$gameType\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"      \u003cLabel fx:id\u003d\"startAmount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startAmount\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"      \u003cLabel fx:id\u003d\"endAmount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endAmount\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"      \u003cLabel fx:id\u003d\"durationMinutes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$durationMinutes\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"      \u003cLabel fx:id\u003d\"gameLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gameLocation\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":39}},{"path":"bin/src/main/resources/view/GameEntryListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"  \u003cListView fx:id\u003d\"gameEntryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":1,"-":7}},{"path":"bin/src/main/resources/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"         title\u003d\"GameBook\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    \u003cImage url\u003d\"@/images/gamebook_icon.png.png\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"        \u003cVBox fx:id\u003d\"gameEntryList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"          \u003cStackPane fx:id\u003d\"gameEntryListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":2,"dannylty":59}},{"path":"bin/src/main/resources/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":9}},{"path":"bin/src/main/resources/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":12}},{"path":"bin/src/test/resources/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"Not a valid FXML file","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":1}},{"path":"bin/src/test/resources/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":4}},{"path":"bin/src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"dannylty":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"mainClassName \u003d \u0027seedu.gamebook.Main\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"    archiveName \u003d \u0027gamebook.jar\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BenjaminLHR":2,"dannylty":4,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"### Yeo Zhi Long","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"\u003cimg src\u003d\"images/yzhilong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"[[github](https://github.com/yzhilong)]","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"[[portfolio](team/yzhilong.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"* Role: PLACEHOLDER","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    * PLACEHOLDER.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    * PLACEHOLDER.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"\u003cimg src\u003d\"images/dannylty.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"[[github](http://github.com/dannylty)]","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"[[portfolio](team/dannylty.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"* Role: PLACEHOLDER","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"  * PLACEHOLDER.","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"  * PLACEHOLDER.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"### Huang Ching","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"\u003cimg src\u003d\"images/chingh20.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"[[github](http://github.com/chingh20)] [[portfolio](team/chingh20.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"* Role: PlaceHolder","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"* Responsibilities: PlaceHolder","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"shaliniseshadri"},"content":"### Shalini Seshadri ","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"\u003cimg src\u003d\"images/shaliniseshadri.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"shaliniseshadri"},"content":"[[github](http://github.com/shaliniseshadri)]","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"[[portfolio](team/shaliniseshadri.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"* Role: Placeholder","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"shaliniseshadri"},"content":"* Responsibilities: Placeholder","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"### Benjamin Lee","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"\u003cimg src\u003d\"images/benjaminlhr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"[[github](http://github.com/BenjaminLHR)]","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"[[portfolio](team/benjaminlhr.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"* Role: Placeholder","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"* Responsibilities: Placeholder","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BenjaminLHR":8,"shaliniseshadri":7,"yzhilong":8,"dannylty":4,"-":30,"chingh20":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W13-3/tp/tree/master/docs/diagrams) folder. Refer to the","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"[_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"and edit diagrams.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/Main.java) and","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"[`MainApp`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/MainApp.java). It is responsible for,","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"  `interface` mentioned in the previous point.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/ui/Ui.java)","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `GameEntryListPanel`,","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"that are in the `src/main/resources/view` folder. For example, the layout of the","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"[`MainWindow`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/ui/MainWindow.java)","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"BenjaminLHR"},"content":"* depends on some classes in the `Model` component, as it displays `GameEntry` object residing in the `Model`. The graph","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"BenjaminLHR"},"content":"and statistics displays also depend on `GameEntryList`.","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/logic/Logic.java)","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"chingh20"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"chingh20"},"content":"1. When `Logic` is called upon to execute a command, it uses the `GameBookParser` class to parse the user command.","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a game entry).","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the ","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"* When called upon to parse a user command, the `GameBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `GameBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/model/Model.java)","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"BenjaminLHR"},"content":"* stores the game book data i.e., all `GameEntry` objects (which are contained in a `GameEntryList` object).","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"* stores the currently \u0027selected\u0027 `GameEntry` objects (e.g., results of a search query) as a separate _filtered_ list","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"yzhilong"},"content":"  which is exposed to outsiders as an unmodifiable `ObservableList\u003cGameEntry\u003e` that can be \u0027observed\u0027 e.g. the UI can","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"  be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"yzhilong"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"yzhilong"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/gamebook/storage/Storage.java)","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"yzhilong"},"content":"The `Storage` component helps save Game Book data and User Preferences to a json file after every use, and read them from a json file while restarting the app.","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"yzhilong"},"content":"* The `Storage` component also plays a key role in supporting other functions such as the analysis of average profits.","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"yzhilong"},"content":"* It inherits from both `GameBookStorage` and `UserPrefsStorage`, which means it can be treated as either one.","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"* It depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"BenjaminLHR"},"content":"Classes used by multiple components are in the `seedu.gamebook.commons` package.","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"yzhilong"},"content":"### Add feature","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"BenjaminLHR"},"content":"The below provides a step-by-step break down of the mechanism for adding a game entry. Assume that the user has already","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"BenjaminLHR"},"content":"launched `GameBook` and the app has loaded data from storage.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"yzhilong"},"content":"1. The user inputs a command, such as `add /g Poker /s 50 /e 85 /dur 40m /loc Resort World Sentosa Casino","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"yzhilong"},"content":"  /dur 50m /date 21/10/2021 15:10` which calls upon `LogicManager#execute()`","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"yzhilong"},"content":"2. `GameBookParser` and `AddCommandParser` parses the command. If it is valid, a new `GameEntry` object is created,","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"yzhilong"},"content":"  followed by an `AddCommand` object containing the `GameEntry`.","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"yzhilong"},"content":"3. `LogicManager#execute()` calls upon `AddCommand#execute()`. Within `AddCommand#execute()`, `ModelManager#addGameEntry()`","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"yzhilong"},"content":"  is called, which in turn calls `GameBook#addGameEntry()`. This then calls `GameEntryList#add()`, which adds the new game","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"yzhilong"},"content":"  entry to a `List` and sorts it by date.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"yzhilong"},"content":"4. `AddCommand#execute()` then encapsulates the result of the command execution in a new `CommandResult` object","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"yzhilong"},"content":"  to its caller. The caller, we recall from Step 3, is `LogicManager#execute()`.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"yzhilong"},"content":"5. To update the storage list, `LogicManager#execute()` then calls `StorageManager#saveGameBook(ReadOnlyGameBook)`,","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"yzhilong"},"content":"  which then calls its overloaded method `StorageManager#saveGameBook(ReadOnlyGameBook, Path)`, which calls","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"yzhilong"},"content":"  `JsonGameBookStorage#saveGameBook(ReadOnlyGameBook, Path)`","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"yzhilong"},"content":"6. Abstracting away the remaining storage details, the new list of game entries is saved in local storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"yzhilong"},"content":"7. The updated list, graph and statistics are reflected in GUI, together with feedback to the user retrieved from","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"BenjaminLHR"},"content":"  the `CommandResult` object from Step 4.","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"yzhilong"},"content":"### Edit feature","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"yzhilong"},"content":"Editing a game entry requires user input from the CLI. The `GameBook` parser will check the validity of the input. It","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"yzhilong"},"content":"is valid if","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"yzhilong"},"content":"* The list of games currently displayed is not empty, and the chosen index is a valid index.","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"yzhilong"},"content":"* At least one field is chosen to be edited.","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"yzhilong"},"content":"* The formats of all fields entered, such as game type, start amount, end amount, location etc must be in the correct format.","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"yzhilong"},"content":"Assume that the user has already launched `GameBook` and the app currently displays this:","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"yzhilong"},"content":"![GameBook UI](images/GameBook.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"yzhilong"},"content":"The below provides a step-by-step break down of the mechanism for adding a game entry.","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"yzhilong"},"content":"1. The user inputs `edit 1 /g Mahjong` which calls upon which calls upon `MainWindow#executeCommand()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"yzhilong"},"content":"2. `MainWindow#executeCommand()` passes the user\u0027s input to `LogicManager#execute()` to process.","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"yzhilong"},"content":"3. `LogicManager#execute()` calls `GameBookParser#parse()` to parse the input.","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"yzhilong"},"content":"4. `GameBookParser#parse()` parses the input and returns a `EditCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"yzhilong"},"content":"5. `GameBookParser` parses the command and returns an `EditCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"yzhilong"},"content":"6. `LogicManger#execute()` executes `EditCommand` by calling `EditCommand#execute()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"yzhilong"},"content":"7. `LogicManager#execute()` selects the `GameEntry` to be edited, creates an edited copy of it, and calls `ModelManager#setGameEntry()`","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"yzhilong"},"content":"   to replace the original `GameEntry` with the edited one. It then returns a `CommandResult` to `LogicManager#execute()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"yzhilong"},"content":"8. `LogicManager#execute()` calls `Storage` to store the new game entry list and returns `CommandResult` to `MainWindow#executeCommand()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"yzhilong"},"content":"9. `MainWindow#executeCommand()` executes `resultDisplay#setFeedbackToUser()` to display the message from `CommandResult` to the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"yzhilong"},"content":"The following diagrams illustrates the process of executing an `edit` command.","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"yzhilong"},"content":"![Activity diagram of an edit command](images/EditActivityDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"yzhilong"},"content":"![Sequence diagram of an edit command](images/EditSequenceDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"chingh20"},"content":"### Deleting a Game Entry","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"yzhilong"},"content":"Deleting a game entry requires user input from the CLI. The user should obtain the index of the game entry to be deleted","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"yzhilong"},"content":"from `GameEntryListPanel`, which will show a list of game entries previously added by the user. The format of input should","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"yzhilong"},"content":"be `delete [INDEX]`. `GameBookParser` will check for the validity of the input. It is valid if","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"chingh20"},"content":"* The index specified by the user is bigger than 0 and smaller or equal to the number of game entries in the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"chingh20"},"content":"The below provides a step-by-step break down of the mechanism for deleting a game entry. Assume that the user has already","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"chingh20"},"content":"launched `GameBook` and the app has loaded data from storage. Assume also that the current game entry list contains more than 1 game entry.","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"yzhilong"},"content":"1. The user inputs `delete 1` which calls upon `MainWindow#executeCommand()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"yzhilong"},"content":"2. `MainWindow#executeCommand()` passes the user\u0027s input to `LogicManager#execute()` to process.","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"yzhilong"},"content":"3. `LogicManager#execute()` calls `GameBookParser#parse()` to parse the input.","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"yzhilong"},"content":"4. `GameBookParser#parse()` parses the input and returns a `DeleteCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"yzhilong"},"content":"5. `LogicManger#execute()` executes `DeleteCommand` by calling `DeleteCommand#execute()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"yzhilong"},"content":"6. `DeleteCommand#execute()` calls `ModelManager#deleteGameEntry()` to delete the game entry from the game entry","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"yzhilong"},"content":"   list and returns a `CommandResult`to `LogicManager#execute()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"yzhilong"},"content":"7. `LogicManager#execute()` calls `Storage` to store the new game entry list and returns `CommandResult` to `MainWindow#executeCommand()`.","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"yzhilong"},"content":"8. `MainWindow#executeCommand()` executes `resultDisplay#setFeedbackToUser()` to display the message from `CommandResult` to the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"yzhilong"},"content":"### Graphical Analysis of Average Profits by Date","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"shaliniseshadri"},"content":"The graphical feature is facilitated by the `GraphPanel` and `Average` classes along with the `MainWindow` class. ","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"yzhilong"},"content":"It is implemented using the JavaFX `LineChart` and `XYSeries` Classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"shaliniseshadri"},"content":"`GraphPanel` currently supports two methods:","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"shaliniseshadri"},"content":"* `drawGraphOfLatestKDates(int)` - gets the TreeMap with the specified number of latest dates and average profits and adds them to the series and ","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"shaliniseshadri"},"content":"  the line chart.","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"shaliniseshadri"},"content":"* `updateGameEntryList()` - reassigns the value of the new GameEntry list to the current GameEntry list","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"shaliniseshadri"},"content":"In addition, the following method from `Average` is also used:","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"shaliniseshadri"},"content":"* `Average#getAverageData()` - returns a TreeMap with the dates as values and average profit as keys","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"shaliniseshadri"},"content":"Found below is a step-by-step break down of the mechanism of creating and updating the graph: ","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"shaliniseshadri"},"content":"1. Upon initialising the `MainWindow`, a new `GraphPanel` is created with the game entry list from `logic`.","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"shaliniseshadri"},"content":"   During this, a new `XYChart.Series` is also initialised.","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"shaliniseshadri"},"content":"2. This new `GraphPanel` is then added to the `graphPanelPlaceholder` in the main window after which ","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"shaliniseshadri"},"content":"   `GraphPanel#drawGraphOfLatestKDates(int)` is called with the k value of `ModelManager.NUMBER_OF_DATES_TO_PLOT` which is set to 20.","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"shaliniseshadri"},"content":"3. When `GraphPanel#drawGraphOfLatestKDates(int)` is called, the data for average profits is added to the `averageProfits` TreeMap by ","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"shaliniseshadri"},"content":"   calling `Average#getAverageDate()`on the game entry list.","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"shaliniseshadri"},"content":"4. Then, the line chart is cleared and the series is added to the line chart","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"shaliniseshadri"},"content":"5. The series is then cleared and then the data from the latest k dates from `averageProfits` is added to the series, after which the ","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"shaliniseshadri"},"content":"   graph is plotted.","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"shaliniseshadri"},"content":"6. After executing a command, the graph panel is updated by calling the `GraphPanel#updateGameEntryList()` method","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"shaliniseshadri"},"content":"    on the graph panel with the updated game entry list. ","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"shaliniseshadri"},"content":"7. This resets the value of the current game entry list in the graph panel to the updated game entry list and the graph ","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"shaliniseshadri"},"content":"   is drawn again by calling the `GraphPanel#drawGraph()` method.","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"yzhilong"},"content":"   ","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"yzhilong"},"content":"#### Mechanism:","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"yzhilong"},"content":"* A `GraphPanel` object is created and initialised in the main window using the filtered list from `Storage`","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"yzhilong"},"content":"  `drawGraph()` is called on the graph panel to draw the graph based on existing entries as the user starts the app.","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"yzhilong"},"content":"* When the user enters a command, `executeCommand(String commandText)` in MainWindow is run during which","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"yzhilong"},"content":"  `clearList()` is called on the graphPanel object","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"yzhilong"},"content":"  to clear the existing series after which the command is executed.","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"yzhilong"},"content":"* Before returning the result, `updateList()` is called on the graphPanel object to update the value of the","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"yzhilong"},"content":"  modified list of game entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"yzhilong"},"content":"* This results in a new series being created with `StatsByDate#getStats()`, when it is called on the updated list","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"yzhilong"},"content":"  value to generate a new graph.","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"yzhilong"},"content":"* These steps repeat for every command entered by the user until the user exits the app.","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"BenjaminLHR"},"content":"* has a need to track earnings/losses across various casino games","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"BenjaminLHR"},"content":"**Value proposition**: manage gambling earnings/losses faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | new user                                   | add a new game entry         |                  |","lastModifiedDate":"2021-09-21"},{"lineNumber":314,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | new user                                   | delete my game entries         | clear entries with erroneous data                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":315,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | new user                                   | log my gambling statistics on a per game basis    | keep track of my spending                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":316,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | new user                                   | input any type of game         | include any game I want instead of choosing from preset list of games                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":317,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | new user                                   | save my net earnings and losses         | view data from my previous games                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":318,"author":{"gitId":"yzhilong"},"content":"| `* * *`  | forgetful user                             | edit my previous game entries         | add details I missed out on previously                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":319,"author":{"gitId":"yzhilong"},"content":"| `* *`    | user who frequents multiple gambling locations   | input location I played at               | organize and sort my data by location                                                                       |","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"yzhilong"},"content":"| `* *`    | user who does not like scrolling                | find game entries using relevant keywords                | view my data quickly                                  |","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"yzhilong"},"content":"| `* *`    | expert user                | see analysis of my game statistics               | evaluate my game performance                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"yzhilong"},"content":"| `* *`    | user who vlogs                | View an aesthetically pleasant UI                | show it to my audience in my videos                                   |","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"yzhilong"},"content":"| `* *`    | user who is easily affected by emotions                | tag games which I made emotional decisions in                | understand how it has affected my earnings                                   |","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"yzhilong"},"content":"| `* *`    | user who gambles frequently                | see the statistics on my expenditure                | justify my gambling habits to my family, that it is not an addiction                              |","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"yzhilong"},"content":"| `*`      | user who switches between computers frequently | backup my data securely           | easily create copies of it to other computers                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"yzhilong"},"content":"| `*`      | user whose hard drive is almost full | specify where the app data is stored           |                                                  |","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"yzhilong"},"content":"| `*`      | user who gambles against friends frequently | analyze my performance when playing against specific friends           | avoid betting large amounts when playing against stronger friends                                                 |","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"yzhilong"},"content":"| `*`      | busy user | see how much time I spend on each game           | utilize my time better                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":329,"author":{"gitId":"yzhilong"},"content":"| `*`      | busy user | see the profit per unit time analysis of different games           | decide which game to play to maximize rate of earnings                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":330,"author":{"gitId":"yzhilong"},"content":"| `*`      | expert user | see the statistics of games with specific tags           | evaluate my performance on games with the selected tags                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"yzhilong"},"content":"| `*`      | expert user | compare statistics across different days of the week           | evaluate my performance on different days                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":332,"author":{"gitId":"yzhilong"},"content":"| `*`      | thrillseeking user | see mean and variance calculations for different games           | choose the one with the highest variance to have fun                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"yzhilong"},"content":"| `*`      | user who frequents places with an entry fee | add costs such as entry-fee into the overall calculation           | get a more accurate view of my profits                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":334,"author":{"gitId":"yzhilong"},"content":"| `*`      | organized user | save different filters or sort conditions           | quickly view custom selections that are important to me                                                 |","lastModifiedDate":"2021-09-21"},{"lineNumber":335,"author":{"gitId":"yzhilong"},"content":"| `*`      | user who loves alcohol | tags games that I played when I am drinking           | see how alcohols affect my performance                                                |","lastModifiedDate":"2021-09-21"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"BenjaminLHR"},"content":"(For all use cases below, the **System** is the `GameBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"BenjaminLHR"},"content":"**Use case: Add an entry**","lastModifiedDate":"2021-09-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"BenjaminLHR"},"content":"1. User enters a new entry","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"BenjaminLHR"},"content":"2. GameBook adds in the entry","lastModifiedDate":"2021-09-22"},{"lineNumber":348,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":349,"author":{"gitId":"BenjaminLHR"},"content":"   Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":350,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":351,"author":{"gitId":"BenjaminLHR"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":353,"author":{"gitId":"BenjaminLHR"},"content":"* 1a. User entered the entry in an incorrect format.","lastModifiedDate":"2021-09-22"},{"lineNumber":354,"author":{"gitId":"BenjaminLHR"},"content":"    * 1a1. GameBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":355,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":356,"author":{"gitId":"BenjaminLHR"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":357,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":358,"author":{"gitId":"yzhilong"},"content":"**Use case: Edit an entry**","lastModifiedDate":"2021-11-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-11-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"yzhilong"},"content":"1. User enters an edit command.","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"yzhilong"},"content":"2. GameBook updates itself with the edited entry.","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":365,"author":{"gitId":"yzhilong"},"content":"   Use case ends.","lastModifiedDate":"2021-11-05"},{"lineNumber":366,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":367,"author":{"gitId":"yzhilong"},"content":"**Extensions**","lastModifiedDate":"2021-11-05"},{"lineNumber":368,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":369,"author":{"gitId":"yzhilong"},"content":"* 1a. User entered the edit command in an incorrect format.","lastModifiedDate":"2021-11-05"},{"lineNumber":370,"author":{"gitId":"yzhilong"},"content":"    * 1a1. GameBook shows an error message, telling the user the correct command format.","lastModifiedDate":"2021-11-05"},{"lineNumber":371,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":372,"author":{"gitId":"yzhilong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-11-05"},{"lineNumber":373,"author":{"gitId":"yzhilong"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":374,"author":{"gitId":"yzhilong"},"content":"* 1b. User does not choose any field to edit","lastModifiedDate":"2021-11-05"},{"lineNumber":375,"author":{"gitId":"yzhilong"},"content":"    * 1b1. GameBook shows an error message, telling the user to select at least 1 field to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":376,"author":{"gitId":"yzhilong"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":377,"author":{"gitId":"yzhilong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-11-05"},{"lineNumber":378,"author":{"gitId":"yzhilong"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":379,"author":{"gitId":"yzhilong"},"content":"* 1c. User\u0027s edit does not change at least one field of the selected game entry.","lastModifiedDate":"2021-11-05"},{"lineNumber":380,"author":{"gitId":"yzhilong"},"content":"    * 1c1. GameBook shows an error message, telling the user that the selected edit does not change the selected game entry.","lastModifiedDate":"2021-11-05"},{"lineNumber":381,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":382,"author":{"gitId":"yzhilong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-11-05"},{"lineNumber":383,"author":{"gitId":"yzhilong"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":384,"author":{"gitId":"BenjaminLHR"},"content":"**Use case: Delete an entry**","lastModifiedDate":"2021-09-22"},{"lineNumber":385,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":386,"author":{"gitId":"BenjaminLHR"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":387,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":388,"author":{"gitId":"BenjaminLHR"},"content":"1.  User requests to list entries","lastModifiedDate":"2021-09-22"},{"lineNumber":389,"author":{"gitId":"BenjaminLHR"},"content":"2.  GameBook shows a list of entries","lastModifiedDate":"2021-09-22"},{"lineNumber":390,"author":{"gitId":"BenjaminLHR"},"content":"3.  User requests to delete a specific entry in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":391,"author":{"gitId":"BenjaminLHR"},"content":"4.  GameBook deletes the entry","lastModifiedDate":"2021-09-22"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"BenjaminLHR"},"content":"    * 3a1. GameBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"BenjaminLHR"},"content":"2. Should be able to hold up to 1000 entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":413,"author":{"gitId":"BenjaminLHR"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"BenjaminLHR"},"content":"4. A novice should be able to grasp the basic functionalities of the system without too much difficulty.","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"BenjaminLHR"},"content":"5. A user should be able to easily back up data.","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"yzhilong"},"content":"### Editing a game entry","lastModifiedDate":"2021-11-05"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":451,"author":{"gitId":"yzhilong"},"content":"Suppose GameBook currently displays this:\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":452,"author":{"gitId":"yzhilong"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":454,"author":{"gitId":"yzhilong"},"content":"1. Editing a game entry when the list of games displayed is not empty.","lastModifiedDate":"2021-11-05"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":456,"author":{"gitId":"yzhilong"},"content":"    1. Prerequisites: The list of games shown is non-empty.","lastModifiedDate":"2021-11-05"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":458,"author":{"gitId":"yzhilong"},"content":"    1. Test case: `edit 1 /g mahjong`\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":459,"author":{"gitId":"yzhilong"},"content":"       Expected: First game entry has its name change from `Poker` to `Mahjong`. No other changes are observed.","lastModifiedDate":"2021-11-05"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"yzhilong"},"content":"    1. Test case: `edit 1 /date 2021-09-22 12:40`\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":462,"author":{"gitId":"yzhilong"},"content":"       Expected: First game is now at index 2, while the game originally at index 2 is now at index 1. The list of games shown are still sorted by date.","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":464,"author":{"gitId":"yzhilong"},"content":"    1. Test case: `edit 0 ...`\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":465,"author":{"gitId":"yzhilong"},"content":"       Expected: No game entry is edited. Error details shown in the status message.","lastModifiedDate":"2021-11-05"},{"lineNumber":466,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":467,"author":{"gitId":"yzhilong"},"content":"    1. Other incorrect edit commands to try: `edit x`, `edit y /s 10`, `edit y /someWrongFlag`, `...` (where x is larger than list size, and y is a valid index)\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":468,"author":{"gitId":"yzhilong"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-11-05"},{"lineNumber":469,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":470,"author":{"gitId":"yzhilong"},"content":"_{ more test cases …​ }_","lastModifiedDate":"2021-11-05"},{"lineNumber":471,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":472,"author":{"gitId":"chingh20"},"content":"### Deleting a game entry","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"chingh20"},"content":"1. Deleting a game entry while all game entries are being shown","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"chingh20"},"content":"    1. Prerequisites: The list of game entries is shown by default, or the `list` command is used to list all game entries.","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"yzhilong"},"content":"       Expected: First game entry is deleted from the list. Details of the deleted game shown in the status message.","lastModifiedDate":"2021-11-05"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"chingh20"},"content":"       Expected: No game entry is deleted. Error details shown in the status message.","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"chingh20"},"content":"_{ more test cases …​ }_","lastModifiedDate":"2021-10-22"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BenjaminLHR":39,"shaliniseshadri":24,"yzhilong":173,"dannylty":1,"-":245,"chingh20":13}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"   1. Run the `seedu.gamebook.Main` and try a few commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"BenjaminLHR":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.commons.StringUtilTest`","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.storage.StorageManagerTest`","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"   e.g. `seedu.gamebook.logic.LogicManagerTest`","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"BenjaminLHR":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"Welcome to **GameBook**!","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"**GameBook** is a desktop app designed for you to track your gambling performance.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"With simple commands, you will be able to add your gambling sessions into **GameBook**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"and view instant analysis of your gambling records.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"If you enjoy casual gambling sessions with your friends and family or love going to the casinos, do try out **GameBook**!","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"1. Ensure that you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"  * To check if you have Java 11 or above installed, open command prompt (search \"cmd\" on your computer) and type `java -version`.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    The command prompt will tell you if you have Java and which version you have. Proceed to step 2 if you have Java 11 or above installed.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"  * If you do not have Java 11 or above installed, please visit the [Java installation guide](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A)","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    and install Java 11 or above.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"2. Download the latest `gamebook.jar` from [here](https://github.com/AY2122S1-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"3. Copy the JAR file to the folder you want to use as the home folder for **GameBook**. Your gambling records will later be saved in your home folder.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"4. Double-click the JAR file to start the app. The GUI similar to below should appear in a few seconds.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"   \u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"   ![GUI](images/Ui.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"5. Type the command in the command box and press “Enter” on your keyboard to execute it. \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"   Here are some example commands that you can try:","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"   * **`add /g Poker /s 500 /e 650 /date 2021-06-21 /dur 142 /loc Sentosa Casino`**: \u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"     Adds an entry of Poker where you started with $500 and ended with $650 (played on 20th June 2021 for 142min at ","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"     Sentosa Casino) into the **GameBook**.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"   * **`delete 2`** : Deletes the 2nd entry shown in the current list","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"  * **`help`** : Shows a list of commands available to use in **GameBook**.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"6. Refer to the [Features](#features) section for more details of each command.","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"## Terminology","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"shaliniseshadri"},"content":"### Syntax and Symbols used in the User Guide:","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"Format | Description","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"--------|------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"**`command`** | Used to denote an input command","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"shaliniseshadri"},"content":"**:information_source:** | Used to signify important information/notes to the user","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"shaliniseshadri"},"content":"**:bulb:** | Used to indicate tips to the user","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"shaliniseshadri"},"content":"**:warning:** | Used to warn the user before proceeding with a potentially risky action","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"### Technical Terms:","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"Term | Description","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"--------|------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"shaliniseshadri"},"content":"**parameter** | A parameter is a piece of information that the user needs to supply in a command.","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"shaliniseshadri"},"content":"**JSON** | Abbreviation of JavaScript Object Notation. Format in which the user\u0027s data is stored.","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"### GameEntry Fields:","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"Parameter | Description","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"shaliniseshadri"},"content":"--------|------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"**GAME_TYPE** | Refers to the type of the game you wish to record. Eg: Poker, Roulette, Blackjack, etc.","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"shaliniseshadri"},"content":"**INITIAL_CASH** | The amount of cash you have at the beginning of a game","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"shaliniseshadri"},"content":"**FINAL_CASH** | The amount of cash you have at the end of a game","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"**PROFIT** | The overall gain/loss from the game. Effectively, the difference between `FINAL_CASH` and `INITIAL_CASH`","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"shaliniseshadri"},"content":"**DATE** | The date on which the game was played","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"**DURATION** | The amount of time for which the game was played","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"shaliniseshadri"},"content":"**LOCATION** | The place where the game was played","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"**TAG** | A single word (or dash-separated word) attribute assigned to the game which can be used to categorize the game. \u003cbr\u003e Eg: birthday, very-lucky, etc.","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"  e.g. In `add /g GAME_TYPE /s INITIAL_CASH /e FINAL_CASH`, GAME_TYPE, INTIIAL_CASH, and FINAL_CASH are","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"  parameters the user needs to supply. An example is `add /g poker /s 0.01 /e 1.02`.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"chingh20"},"content":"  \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"  e.g. In `add /g GAME_TYPE /p PROFIT [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]`, DATE, DURATION,","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"BenjaminLHR"},"content":"  LOCATION and TAGS are optional fields. `add /g poker /p 10.40` and `add /g poker /p 10.40 /date 2021-09-11 21:20 /dur 40` are both deemed","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"BenjaminLHR"},"content":"  as correct usages.","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"### Adding a game entry: `add`","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"Adds a game entry to **GameBook**.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"Parameters:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"`GAME_TYPE`, `[INITIAL_CASH]`, `[FINAL_CASH]`, `[PROFIT]`, `[DATE]`, `[DURATION]`, `[LOCATION]`, `[TAGS]` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"chingh20"},"content":"`add /g GAME_TYPE [/s INITIAL_CASH] [/e FINAL_CASH] [/p PROFIT] [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]` \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"You must specify the amount of money you won or lost in the game. You can choose to input the INITIAL_CASH with the FINAL_CASH or only input the PROFIT. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"chingh20"},"content":"* To simplify typing, for GAME_TYPE and LOCATION, the input will be automatically converted such that the first","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"BenjaminLHR"},"content":"  character of each word is upper-case and subsequent characters are lower-case. For example, \"poker\" and \"genting casino\"","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"BenjaminLHR"},"content":"  will be stored within **GameBook** as \"Poker\" and \"Genting Casino\" respectively.","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"chingh20"},"content":"* A game entry can have any number of TAGS (including 0). To add multiple tags, follow the format of `/tag TAG_1, TAG_2, TAG_3, ...`.","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"chingh20"},"content":"  * eg. `/tag drunk,lucky`","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"chingh20"},"content":"  * Take note that there should be no whitespace within a tag. Use hyphens `-` to separate words within a tag. Tags should be separated by a comma.","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"chingh20"},"content":"* DATE has two valid input formats:","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"chingh20"},"content":"  * To specify date only:","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"    * `/date yyyy-MM-dd` ","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"      * eg. `/date 2021-10-01` - Oct 1, 2021","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"chingh20"},"content":"  * To specify date with time:","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"    * `/date yyyy-MM-dd HH:mm` ","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"      * eg. `/date 2021-10-01 10:21` - Oct 1, 2021 10:21am","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"chingh20"},"content":"* DURATION has four valid input formats:","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"chingh20"},"content":"  * To specify hours with minutes:","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"chingh20"},"content":"    * `/dur HH:mm`","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"chingh20"},"content":"      * eg.`/dur 12:20` - 12 hrs 20 min","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"chingh20"},"content":"    * `/dur INT_h INT_m`","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"chingh20"},"content":"      * eg. `/dur 12h 20m` - 12hrs 20 min","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"chingh20"},"content":"  * To specify hours only:","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"chingh20"},"content":"    * `/dur INT_h`","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"chingh20"},"content":"      * eg. `/dur 12h` - 12 hrs","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"chingh20"},"content":"  * To specify minutes only:","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"chingh20"},"content":"    * `/dur INT_m`","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"chingh20"},"content":"      * eg. `/dur 20m` - 20 min","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"chingh20"},"content":"    * `/dur INT`","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"chingh20"},"content":"      * eg. `/dur 20` - 20 min","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"chingh20"},"content":"  * Numbers longer than 13 digits (in decimal representation) may be rounded or slightly inaccurate.","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"* `add /g blackjack /s 12.34 /e -56.78 /date 2021-09-13 /dur 1:23 /loc Marina Bay Sands`\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"Adds an entry of blackjack where you started with $12.34 and ended with -$56.78 (played on 13th Sept. 2021 for 1hr 23 min","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"chingh20"},"content":"at Marina Bay Sands) to **GameBook**.","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"* `add /g poker /s 0.01 /e 1.02 /date 2021-09-11 21:20 /dur 3:14 /loc Home`\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"chingh20"},"content":"Adds an entry of poker where you started with $0.01 and ended with $1.02 (played on 11th Sept. 2021 21:20  for 3hr 14 min","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"chingh20"},"content":"at Home) to **GameBook**.","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"chingh20"},"content":"* `add /g poker /p 0.2 /tag run-good`\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"chingh20"},"content":"  Adds an entry of poker where you gained a profit of $0.20 to **GameBook** and tags the entry as \"run-good\".","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"chingh20"},"content":"### Listing all game entries : `list`","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"chingh20"},"content":"Shows a list of all game entries in **GameBook**.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"chingh20"},"content":"`list`","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"BenjaminLHR"},"content":"![GUI](images/ListCommand.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"chingh20"},"content":"### Editing a game entry : `edit`","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"chingh20"},"content":"Edits an existing game entry in **GameBook**. \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"chingh20"},"content":"Parameters:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"`INDEX`, `[GAME_TYPE]`, `[PROFIT]`, `[DATE]`, `[DURATION]`, `[LOCATION]`, `[TAGS]`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"chingh20"},"content":"`edit INDEX [/g GAME_TYPE] [/p PROFIT] [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]`","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"yzhilong"},"content":"* Edits the game record at the specified `INDEX`. `INDEX` refers to the index of the game within the game list, which","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"yzhilong"},"content":"  **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"chingh20"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"yzhilong"},"content":"* Only selected properties of the game record will be edited, all other properties will remain unchanged.","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"yzhilong"},"content":"* Edited tags will replace existing tags completely.","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"yzhilong"},"content":"* If the selected property was initially empty, it would be updated to be the value the user gave in the flag.","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"yzhilong"},"content":"* Updated values will be reflected in the file saved to the disk.","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"chingh20"},"content":"* Please refer to \"Adding a game entry\" section for specific notes on the formats of DATE, DURATION, and TAGS","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"chingh20"},"content":"* Numbers longer than 13 digits (in decimal representation) may be rounded or slightly inaccurate.","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"chingh20"},"content":"*  `edit 1 /g roulette /p 1`\u003cbr\u003eChanges the type of the 1st game in the list to roulette and the profit to $1.","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"yzhilong"},"content":"*  `edit 3 /p 1 /loc John’s house`\u003cbr\u003eChanges the location where the 3rd game in the list was played to “John’s house”,","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"yzhilong"},"content":"   regardless of whether the initial location was empty or not.","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"chingh20"},"content":"### Deleting a game: `delete`","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"chingh20"},"content":"Deletes the game at the specified index.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"chingh20"},"content":"Parameter: \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"`INDEX`","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"chingh20"},"content":"`delete INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"yzhilong"},"content":"* Deletes the game record at the specified `INDEX`. `INDEX` refers to the index of the game within the game list, which","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"yzhilong"},"content":"  **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"yzhilong"},"content":"* Selected game will also be deleted from the file in the disk.","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"yzhilong"},"content":"* Indices of all remaining tasks will be updated.","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"yzhilong"},"content":"  * Suppose game record `3` has been deleted, then all game records with `INDEX \u003e 3` will be decremented by 1.","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"chingh20"},"content":"* `delete 2`","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"chingh20"},"content":"  \u003cbr\u003edeletes the 2nd game in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"chingh20"},"content":"### Finding game entries: `find`","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"chingh20"},"content":"Lists all the game entries that contain the specified keyword.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"chingh20"},"content":"Parameter:","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"`KEYWORD`","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"chingh20"},"content":"`find KEYWORD` \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"chingh20"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"chingh20"},"content":"* `find poker`\u003cbr\u003eshows a list of game entries that contains the keyword \"poker\" (keyword may be found in the game entry\u0027s TAGS, LOCATION, or GAME_TYPE)","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"BenjaminLHR"},"content":"![GUI](images/FindCommand.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"chingh20"},"content":"### Clearing all data: `clear`","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"chingh20"},"content":"Clears all game entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"chingh20"},"content":"`clear`","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"chingh20"},"content":"* After `clear` is entered as a command, a popup window that looks like the following will appear.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"chingh20"},"content":"  ![Clear Command Image](images/ClearConfirmationWindow.png)\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"chingh20"},"content":"* To confirm clearing all game entries from **GameBook**, you must click on the button [Clear]. Once you click on [Clear],","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"chingh20"},"content":"  all your game entries will be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"chingh20"},"content":"* If you decided","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"chingh20"},"content":"  not to clear your data, please click on the [X] to close the window.","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"chingh20"},"content":"### Getting help : `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"chingh20"},"content":"Shows a list of commands available or the format of a specific command.","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"chingh20"},"content":"`help` - shows a list of commands available.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"chingh20"},"content":"`help add` - shows the format of the command to add a game entry.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"chingh20"},"content":"`help delete` - shows the format of the command to delete a game entry.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"chingh20"},"content":"`help edit` - shows the format of the command to edit a game entry.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"chingh20"},"content":"`help find` - shows the format of the command to find specific game entries. \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"chingh20"},"content":"Format:\u003cbr\u003e `exit`","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"yzhilong"},"content":"### Notes about flags","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"yzhilong"},"content":"* the `[/dur DURATION]` flag accepts multiple input formats","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"yzhilong"},"content":"  *  `... /dur 123` indicates a duration of 123 minutes.","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"yzhilong"},"content":"  *  `... /dur 1:23` indicates a duration of 1 hour, 23 minutes.","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"yzhilong"},"content":"  *  `... /dur 1h` indicates a duration of 1 hour.","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"yzhilong"},"content":"  *  `... /dur 1h 23m` indicates a duration of 1 hour, 23 minutes.","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"yzhilong"},"content":"  *  `... /dur 23m` indicates a duration of 23 minutes.","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"yzhilong"},"content":"* Different tags should be separated by `, `.","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"yzhilong"},"content":"  *  `... /tag some-tag` tags a game with `some-tag`.","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"yzhilong"},"content":"  *  `... /tag some-tag, some-other-tag` tags a game with `some-tag` and `some-other-tag`.","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"chingh20"},"content":"**GameBook** data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":268,"author":{"gitId":"chingh20"},"content":"**GameBook** data are saved as a JSON file `[JAR file location]/data/gamebook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"If your changes to the data file makes its format invalid, GameBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"yzhilong"},"content":"**A**: Install the app in the other computer (refer to Quick Start) and replace the empty gamebook.json file it creates within the data folder with your `gamebook.json` file in your original computer.","lastModifiedDate":"2021-11-05"},{"lineNumber":284,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"BenjaminLHR"},"content":"**Q**: Can I edit the data by directly modifying the data file?\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"shaliniseshadri"},"content":"**A**: Technically, you can if you follow the exact storage format. However, we strongly advise against it as any","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"shaliniseshadri"},"content":"mistakes will cause errors in the app.","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"BenjaminLHR"},"content":"**Q**: (Follow up from previous question) What is the storage format of the data file?\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"yzhilong"},"content":"**A**: Data is stored in JSON format, with each entry being stored as a JSON object with the keys being `gameEntries`, `startAmount`, `endAmount`, `date`, `durationMinutes`, `location` and `tagged`.","lastModifiedDate":"2021-11-05"},{"lineNumber":291,"author":{"gitId":"yzhilong"},"content":"The exact format can be explored by checking out the format of the sample data that GameBook is initialized with. The data file is stored at `/data/gamebook.json`, and the","lastModifiedDate":"2021-11-05"},{"lineNumber":292,"author":{"gitId":"yzhilong"},"content":"`data` directory is located in the same directory where you placed the JAR file at.","lastModifiedDate":"2021-11-05"},{"lineNumber":293,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"chingh20"},"content":"**Add** | Format 1:\u003cbr\u003e`add /g GAME_TYPE /s INITIAL_CASH /e FINAL_CASH [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]` \u003cbr\u003e \u003cbr\u003e e.g., \u003cbr\u003e `add /g blackjack /s 12.34 /e -56.78 /date 2021-09-13 /dur 1:23 /loc Marina Bay Sands /tag loose,run-good` \u003cbr\u003e\u003cbr\u003eFormat 2:\u003cbr\u003e `add /g GAME_TYPE /p PROFIT [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]` \u003cbr\u003e \u003cbr\u003e e.g.,\u003cbr\u003e `add /g poker /p 200`","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2021-10-08"},{"lineNumber":303,"author":{"gitId":"chingh20"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e \u003cbr\u003e e.g., `delete 1`","lastModifiedDate":"2021-10-08"},{"lineNumber":304,"author":{"gitId":"chingh20"},"content":"**Edit** | `edit INDEX [/g GAME_TYPE] [/p PROFIT] [/date DATE] [/dur DURATION] [/loc LOCATION] [/tag TAGS]` \u003cbr\u003e \u003cbr\u003e e.g., \u003cbr\u003e`edit 1 /g roulette /p 20` \u003cbr\u003e `edit 3  /loc John’s house`","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"chingh20"},"content":"**Find** | `find [KEYWORDS]`\u003cbr\u003e\u003cbr\u003e e.g., `find tag1 tag2`","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"chingh20"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"chingh20"},"content":"**Help** | `help`\u003cbr\u003e `help add` `help delete` `help edit` `help find`","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"chingh20"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"BenjaminLHR":17,"shaliniseshadri":27,"yzhilong":38,"dannylty":6,"-":104,"chingh20":116}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"    content: \"GameBook\";","lastModifiedDate":"2021-09-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"dannylty":1,"-":294}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"participant \":GameBookParser\" as GameBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"LogicManager -\u003e GameBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"activate GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"GameBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser --\u003e GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"GameBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser --\u003e GameBookParser : d","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"DeleteCommandParser -[hidden]-\u003e GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"GameBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"deactivate GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"DeleteCommand -\u003e Model : deleteGameEntry(1)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dannylty":11,"-":58}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"start","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":":User enters input;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":":Parser parses input;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"if (valid edit command) then ([command parsed as","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"EditCommand])","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":":EditCommand is executed;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":":Copy of selected GameEntry","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"created with edited fields;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":":Edited GameEntry replaces","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"selected GameEntry;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":":Updated GameEntry list is shown;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"else ([Error message is shown])","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"endif","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"stop","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"yzhilong":17}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"!include style.puml","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"participant \":GameBookParser\" as GameBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"participant \"d:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"end box","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"end box","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"[-\u003e LogicManager : execute(\"edit 1 /g Mahjong\")","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"LogicManager -\u003e GameBookParser : parseCommand(\"edit 1 /g Mahjong\")","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"activate GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"create EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"GameBookParser -\u003e EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"EditCommandParser --\u003e GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"GameBookParser -\u003e EditCommandParser : parse(\"1 /g Mahjong\")","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"create EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"activate EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"EditCommandParser --\u003e GameBookParser : e","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"EditCommandParser -[hidden]-\u003e GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"destroy EditCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"GameBookParser --\u003e LogicManager : e","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"deactivate GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"activate EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"EditCommand -\u003e Model : setGameEntry(targetGameEntry, editedGameEntry)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"activate Model","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"deactivate Model","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"create CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yzhilong":69}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"Class GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"LogicManager -right-\u003e\"1\" GameBookParser","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"GameBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"chingh20":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"Interface ReadOnlyGameBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"Class GameBook","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"Class ReadOnlyGameBook","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"Class GameEntryList","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"Class GameEntry","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"Class GameType","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"Class Amount","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"Class StartAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"Class EndAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"Class DatePlayed","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"Class Duration","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"Class Location","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"Class Average","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"Class Median","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"Class Ui #1D8900","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"GameBook .up.|\u003e ReadOnlyGameBook","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"Ui .right.\u003e Average","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"Ui .right.\u003e Median","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"Average .right-\u003e GameEntryList","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"Median .right-\u003e GameEntryList","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"Model .left.\u003e ReadOnlyGameBook","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"ModelManager -left-\u003e \"1\" GameBook","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"StartAmount -up-|\u003e Amount","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"EndAmount -up-|\u003e Amount","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"GameBook *--\u003e \"1\" GameEntryList","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"GameEntryList --\u003e \"~* all\" GameEntry","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e GameType","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e StartAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e EndAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e DatePlayed","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e Duration","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e Location","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"GameEntry *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"GameType -[hidden]right-\u003e StartAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"StartAmount -[hidden]right-\u003e EndAmount","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"EndAmount -[hidden]right-\u003e DatePlayed","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"ModelManager --\u003e\"~* filtered\" GameEntry","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"BenjaminLHR":3,"yzhilong":35,"-":33}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"package \"GameBook Storage\" #F4F6F6{","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"Interface GameBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"Class JsonGameBookStorage","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"Class JsonSerializableGameBook","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"Class JsonAdaptedGameEntry","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"StorageManager -up-\u003e \"1\" GameBookStorage","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"Storage -right-|\u003e GameBookStorage","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"JsonGameBookStorage .up.|\u003e GameBookStorage","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"JsonGameBookStorage ..\u003e JsonSerializableGameBook","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"JsonSerializableGameBook --\u003e \"*\" JsonAdaptedGameEntry","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"JsonAdaptedGameEntry --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"shaliniseshadri":11,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"skinparam classFontSize 17","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"skinparam nodesep 10","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"Class ClearWindow","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"Class CommandNoteListPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"Class CommandNoteCard","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"Class GameEntryListPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"Class GameEntryCard","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"Class StatsPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"Class GraphPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"HiddenOutside .right.\u003e Ui","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow *-down-\u003e \"1\" ClearWindow","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow *-down-\u003e \"1\" GameEntryListPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow *-down-\u003e \"1\" CommandNoteListPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow *-down-\u003e \"1\" StatsPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow *-down-\u003e \"1\" GraphPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"GameEntryListPanel -down-\u003e \"*\" GameEntryCard","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"ClearWindow --|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"GameEntryListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"GameEntryCard --left|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"CommandNoteListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"CommandNoteCard -|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"StatsPanel --|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"GraphPanel --|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"CommandNoteListPanel -- CommandNoteCard","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"GameEntryCard ..\u003e Model","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"StatsPanel ..\u003e Model","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"GraphPanel ..\u003e Model","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"UiManager -up-\u003e Logic","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"MainWindow -up-\u003e Logic","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"BenjaminLHR":30,"-":43}},{"path":"docs/team/benjaminlhr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"### Project: Game Book","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"GameBook is a desktop app designed for gamblers to track their gambling games. It is optimized for use via a Command","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"Line Interface (CLI), but still possesses the benefit of a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"* **New Feature**: Added functionality to sort the game entries after `add` or `edit`","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"  * What it does: Automatically sorts the list of game entries by date, with the latest dates appearing at the top.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"  * Justification: This feature is very important to the user as it places the most recent games (which users would be","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    more interested in) at the top. It also provides a sense of ordering to the app.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"  * Highlights: Implementing this feature required an in-depth understanding of the execution pipeline for adding and","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    editing game entries, as well as the internal representation of the game entries list in order to figure out the ","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    ideal place to implement sorting.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dbenjaminlhr\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026tabAuthor\u003dBenjaminLHR\u0026tabRepo\u003dAY2122S1-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zA\u003dBenjaminLHR\u0026zR\u003dAY2122S1-CS2103T-W13-3%2Ftp%5Bmaster%5D\u0026zACS\u003d220.43386537126995\u0026zS\u003d2021-09-17\u0026zFS\u003d\u0026zU\u003d2021-11-04\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"* **Modifications to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"  * Refactored Ui components and MainApp (renaming variables and classes and calling the correct new classes/methods) ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    to suit the purpose of GameBook in v1.2 (Pull request [\\#47](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/47))","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"  * Refactored \"test/data\" files to suit the purpose of GameBook in v1.2 (Pull request [\\#71](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/71))","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"  * Modify behaviour of duplicate entries handling. Instead of throwing an exception when entries with the same","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"    GAME_NAME and DATE or DATETIME are present, I changed it to only display an alert to user as it is certainly possible to play","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    several games with the same GAME_NAME on the same day, and some users may also log several game entries at the same time.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"    (Pull request [\\#112](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/112))","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"  * Added unit tests for Average and Median (Pull request [\\#215](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/215))","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"  * Styled the graph (Pull request [\\#137](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/137), [\\#142](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/142))","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"  * Fixed miscellaneous bugs in existing features (Pull request [\\#147](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/147),","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    [\\#212](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/212), [\\#213](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/213))","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"  * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"    * Made an initial modification of Quick Start \u0026 FAQ to suit the purpose of GameBook in v1.1 (Pull request [\\#12](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/12))","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"    * Modified miscellaneous explanations to improve clarity (Pull request [\\#212](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/212))","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"    * Added explanation about auto-capitalization feature of GAME_NAME and LOCATION (Pull request [\\#212](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/212))","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"    * Added several screenshots to illustrate the usage of the app (Pull request [\\#212](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/212))","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"  * Developers\u0027 Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"    * Updated product scope, NFR and glossary (Pull request [\\#29](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/29), [\\#34](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/34))","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"    * Added description of implementation details for adding a game entry. (Pull request [\\#145](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/145))","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"    * Updated UiClassDiagram (Pull request [\\#145](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/145))","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"* **Project management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"  * Managed release `v1.3(final)` on GitHub.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#113](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/113), [\\#114](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/114), [\\#136](https://github.com/AY2122S1-CS2103T-W13-3/tp/pull/136)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"  * Reported 18 bugs and suggestions for another team during PE-D.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"BenjaminLHR":52}},{"path":"docs/team/chingh20.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"#Huang Ching\u0027s Project Portfolio Page ","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"chingh20":1}},{"path":"docs/team/dannylty.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"Tianyi\u0027s Project Portfolio Page ","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"dannylty":1}},{"path":"docs/team/shaliniseshadri.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shaliniseshadri"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"title: Shalini Seshadri\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"### Project: Game Book ","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"Game Book is a ... ","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"* **New Feature**: ","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"* **New Feature**: ","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":" ","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"  * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"   ","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"* **Community**:","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"  ","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"* **Tools**:","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"shaliniseshadri":33}},{"path":"docs/team/yzhilong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"layout: page","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"title: Zhi Long\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"### Project: Game Book","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"Game Book is a ...","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"yzhilong":10}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"BenjaminLHR"},"content":"Create a `RemarkCommandParser` class in the `seedu.gamebook.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"BenjaminLHR"},"content":"Create a new `Remark` in `seedu.gamebook.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"BenjaminLHR"},"content":"Simply add the following to [`seedu.gamebook.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"BenjaminLHR":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"The `address` field in `Person` is actually an instance of the `seedu.gamebook.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BenjaminLHR":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.gamebook.logic.Logic`.","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"A quick look at the `seedu.gamebook.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BenjaminLHR":2,"-":299}},{"path":"src/main/java/seedu/gamebook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.FileUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"BenjaminLHR":3,"-":61}},{"path":"src/main/java/seedu/gamebook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":24}},{"path":"src/main/java/seedu/gamebook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.Config;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.Version;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.Logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.LogicManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.GameBookStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.JsonGameBookStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.Storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.StorageManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.ui.Ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.ui.UiManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing GameBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"        GameBookStorage gameBookStorage \u003d new JsonGameBookStorage(userPrefs.getGameBookFilePath());","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        storage \u003d new StorageManager(gameBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s gamebook book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"     * The data from the sample game book will be used instead if {@code storage}\u0027s game book is not found,","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"     * or an empty game book will be used instead if errors occur when reading {@code storage}\u0027s game book.","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        Optional\u003cReadOnlyGameBook\u003e gameBookOptional;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"        ReadOnlyGameBook initialData;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"            gameBookOptional \u003d storage.readGameBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"            if (!gameBookOptional.isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"                logger.info(\"Data file not found. Will be starting with a sample GameBook\");","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"            initialData \u003d gameBookOptional.orElseGet(SampleDataUtil::getSampleGameBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty GameBook\");","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"BenjaminLHR"},"content":"            initialData \u003d new GameBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"BenjaminLHR"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty GameBook\");","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"BenjaminLHR"},"content":"            initialData \u003d new GameBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"BenjaminLHR"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty GameBook\");","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"BenjaminLHR"},"content":"        logger.info(\"Starting GameBook \" + MainApp.VERSION);","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"BenjaminLHR"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping GameBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":43,"-":140}},{"path":"src/main/java/seedu/gamebook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":62}},{"path":"src/main/java/seedu/gamebook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":78}},{"path":"src/main/java/seedu/gamebook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String LOG_FILE \u003d \"gamebook.log\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":2,"-":110}},{"path":"src/main/java/seedu/gamebook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_INVALID_GAMEENTRY_DISPLAYED_INDEX \u003d \"The game index provided is invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_GAME_ENTRIES_LISTED_OVERVIEW \u003d \"%1$d game entries listed!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":2,"-":10}},{"path":"src/main/java/seedu/gamebook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":115}},{"path":"src/main/java/seedu/gamebook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core.index;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"%d\", zeroBasedIndex + 1);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":5,"-":53}},{"path":"src/main/java/seedu/gamebook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":10}},{"path":"src/main/java/seedu/gamebook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":1,"-":20}},{"path":"src/main/java/seedu/gamebook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.MainApp;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BenjaminLHR":2,"-":40}},{"path":"src/main/java/seedu/gamebook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":1,"-":34}},{"path":"src/main/java/seedu/gamebook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.Config;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BenjaminLHR":3,"-":20}},{"path":"src/main/java/seedu/gamebook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":82}},{"path":"src/main/java/seedu/gamebook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":3,"-":140}},{"path":"src/main/java/seedu/gamebook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":2,"-":66}},{"path":"src/main/java/seedu/gamebook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns the GameBook.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"     * @see seedu.gamebook.model.Model#getGameBook()","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"    ReadOnlyGameBook getGameBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    /** Returns an unmodifiable view of the filtered list of game entries */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    ObservableList\u003cGameEntry\u003e getFilteredGameEntryList();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns the user prefs\u0027 game book file path.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"    Path getGameBookFilePath();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BenjaminLHR":14,"-":36,"chingh20":1}},{"path":"src/main/java/seedu/gamebook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.GameBookParser;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.Storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"    private final GameBookParser gameBookParser;","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"        gameBookParser \u003d new GameBookParser();","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"        Command command \u003d gameBookParser.parseCommand(commandText);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"            storage.saveGameBook(model.getGameBook());","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    public ReadOnlyGameBook getGameBook() {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"        return model.getGameBook();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"    public ObservableList\u003cGameEntry\u003e getFilteredGameEntryList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"        return model.getFilteredGameEntryList();","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"    public Path getGameBookFilePath() {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"        return model.getGameBookFilePath();","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BenjaminLHR":13,"-":59,"chingh20":10}},{"path":"src/main/java/seedu/gamebook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":" * Adds a game to the game book.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    public static final AddCommand DUMMY \u003d new AddCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_WITH_START_AND_END_AMOUNT_EXAMPLE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        + PREFIX_GAMETYPE + \"blackjack \"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        + PREFIX_STARTAMOUNT + \"200 \"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        + PREFIX_ENDAMOUNT + \"250 \"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        + PREFIX_DATE + \"03/10/21 \"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        + PREFIX_DURATION + \"50 \"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"        + PREFIX_LOCATION + \"Sentosa\"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"        + PREFIX_TAG + \"friends\";","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_WITH_PROFIT_EXAMPLE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"        + PREFIX_GAMETYPE + \"blackjack \"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"        + PREFIX_PROFIT + \"10.0\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    public static final String COMMAND_FORMAT \u003d String.format(","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"            \"add %sGAME_TYPE [%sINITIAL_CASH] [%sFINAL_CASH] [%sPROFIT] [%sDATE] [%sDURATION] [%sLOCATION] [%sTAGS]\",","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"            PREFIX_GAMETYPE, PREFIX_STARTAMOUNT, PREFIX_ENDAMOUNT, PREFIX_PROFIT, PREFIX_DATE, PREFIX_DURATION,","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"            PREFIX_LOCATION, PREFIX_TAG","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SPECIFICATION \u003d String.format(\"Either INITIAL_CASH and FINAL_CASH\"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        + \" or PROFIT must be specified.\", PREFIX_STARTAMOUNT, PREFIX_ENDAMOUNT, PREFIX_PROFIT);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_NOTE \u003d \"Multiple tags are allowed. Each tag should be separated by a comma. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"        + \"Whitespaces are not allowed within a tag. Use \\\"-\\\" instead.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Adds a game to the game book. \\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        + \"Format:\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"        + COMMAND_FORMAT + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"        + COMMAND_SPECIFICATION + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"        + COMMAND_NOTE + \"\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"        + \"Examples:\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WITH_START_AND_END_AMOUNT_EXAMPLE + \"\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WITH_PROFIT_EXAMPLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FORMAT + \"\\n\" + COMMAND_SPECIFICATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New game added: \\n%1$s\\n%2$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"    public static final String MESSAGE_DUPLICATE_GAME_ENTRY \u003d \"Alert: A game entry with the same \"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        + \"game type and date/datetime already exists.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_GAME_OCCURS_IN_FUTURE \u003d \"Alert: The date for this game entry is in the future.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    public final GameEntry toAdd;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"     * Creates an AddCommand dummy object.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"    private AddCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"        toAdd \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"     * Creates an AddCommand to add the specified {@code GameEntry}","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    public AddCommand(GameEntry gameEntry) {","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"        requireNonNull(gameEntry);","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        toAdd \u003d gameEntry;","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"        String sameEntryAlert \u003d model.hasGameEntry(toAdd)","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"BenjaminLHR"},"content":"                ? MESSAGE_DUPLICATE_GAME_ENTRY","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"BenjaminLHR"},"content":"                : \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        String inFutureAlert \u003d toAdd.getDate().isInFuture() ? MESSAGE_GAME_OCCURS_IN_FUTURE : \"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"        model.addGameEntry(toAdd);","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"                MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"                toAdd,","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"                Command.joinAlerts(sameEntryAlert, inFutureAlert)","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"chingh20"},"content":"        return AddCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"        return AddCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":16,"yzhilong":12,"dannylty":12,"-":29,"chingh20":45}},{"path":"src/main/java/seedu/gamebook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":" * Clears the game entries in GameBook.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"    public static final ClearCommand DUMMY \u003d new ClearCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_CONFIRMATION \u003d \"CONFIRM-CLEAR-ALL-ENTRIES\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Game entries have been cleared!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_FORMAT \u003d \"clear\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Clears all game entries.\\n\\nFormat:\\n\" + COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_REQUEST_CONFIRMATION \u003d \"Clear data?\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    private final boolean isConfirmation;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"     * Creates a ClearCommand to clear data based on {@code confirmation}.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    public ClearCommand(String confirmation) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"        if (confirmation \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"            isConfirmation \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"        } else if (confirmation.equals(COMMAND_CONFIRMATION)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"            isConfirmation \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"            isConfirmation \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"     * Creates a ClearCommand that asks for user\u0027s confirmation before clearing data.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"        isConfirmation \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        return ClearCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        return ClearCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        if (isConfirmation) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"            model.setGameBook(new GameBook());","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"            return new CommandResult(MESSAGE_SUCCESS, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"            return new CommandResult(MESSAGE_REQUEST_CONFIRMATION, false, false, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":3,"dannylty":2,"-":17,"chingh20":42}},{"path":"src/main/java/seedu/gamebook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    private static final List\u003cCommand\u003e COMMANDS \u003d new ArrayList\u003cCommand\u003e(","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"        Arrays.asList(AddCommand.DUMMY, EditCommand.DUMMY, DeleteCommand.DUMMY, FindCommand.DUMMY, HelpCommand.DUMMY,","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"            ClearCommand.DUMMY, ExitCommand.DUMMY)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"    );","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final ObservableList\u003cCommand\u003e COMMAND_OBSERVABLE_LIST \u003d FXCollections.observableArrayList(COMMANDS);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    protected static String joinAlerts(String ... strings) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        String joinedAlert \u003d \"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        for (String alert : strings) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"            if (alert.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"                continue;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"            if (joinedAlert.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"                joinedAlert +\u003d alert;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"                joinedAlert +\u003d String.format(\"\\n%s\", alert);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        return joinedAlert;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"    public abstract String getCommandSummary();","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":3,"yzhilong":16,"-":17,"chingh20":17}},{"path":"src/main/java/seedu/gamebook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"    /** The application should ask user to confirm clearing data. */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    private final boolean clear;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"     * * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean clear) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"        this.clear \u003d clear;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"    public boolean isClear() {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"        return clear;","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"            \u0026\u0026 clear \u003d\u003d otherCommandResult.clear;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, clear);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"Feedback: %s, ShowHelp: %s, IsExit: %s, IsClear: %s\",","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"                feedbackToUser, showHelp, exit, clear);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":4,"-":67,"chingh20":14}},{"path":"src/main/java/seedu/gamebook/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":" * Deletes a game entry identified using it\u0027s displayed index from the game book.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    public static final DeleteCommand DUMMY \u003d new DeleteCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SPECIFICATION \u003d \"INDEX must be a positive integer and cannot be bigger than the \"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"        + \"number of entries in your game list.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_EXAMPLE \u003d \"Assume that there is at least one game entry in GameBook now.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" INDEX\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Deletes the game entry identified by the given index number. (Index \"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"        + \"number is obtained from the displayed game list.)\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"        + \"Format: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"        + COMMAND_FORMAT + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"        + \"Example:\\n\" + COMMAND_EXAMPLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FORMAT + \"\\n\" + COMMAND_SPECIFICATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_DELETE_GAME_ENTRY_SUCCESS \u003d \"Deleted game entry: \\n%1$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"    private DeleteCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"        targetIndex \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        List\u003cGameEntry\u003e lastShownList \u003d model.getFilteredGameEntryList();","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        model.deleteGameEntry(gameEntryToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GAME_ENTRY_SUCCESS, gameEntryToDelete));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"        return DeleteCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"        return DeleteCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":5,"dannylty":6,"-":34,"chingh20":32}},{"path":"src/main/java/seedu/gamebook/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":" * Edits the details of an existing game entry in the game book.","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    public static final EditCommand DUMMY \u003d new EditCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" INDEX \"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"        + \"[\" + PREFIX_GAMETYPE + \"GAME_TYPE] \"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"        + \"[\" + PREFIX_PROFIT + \"PROFIT]\"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"        + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"        + \"[\" + PREFIX_TAG + \"TAGS]\";","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SPECIFICATION \u003d \"INDEX must be a positive integer and cannot be bigger than the \"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        + \"number of entries in your game list.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_NOTE \u003d \"Multiple tags are allowed. Each tag should be separated by a comma. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"        + \"Whitespaces are not allowed within a tag. Use \\\"-\\\" instead.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_EXAMPLE \u003d \"Assume that there is at least one game entry in GameBook now.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        + PREFIX_GAMETYPE + \"poker \"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"        + PREFIX_PROFIT + \"150\";","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Edits the details of the game entry identified \"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"        + \"by the given index number. (Index number is obtained from the displayed game list.) \"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"        + \"Existing values will be overwritten by the input values.\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        + \"Format:\\n\" + COMMAND_FORMAT + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        + COMMAND_NOTE + \"\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        + \"Example:\\n\" + COMMAND_EXAMPLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FORMAT + \"\\n\" + COMMAND_SPECIFICATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_EDIT_GAME_SUCCESS \u003d \"Edited game entry: \\n%1$s\\n%2$s\";","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_FIELDS_ARE_IDENTICAL \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"            \"At least one field must be different from original game entry.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_DUPLICATE_GAME_ENTRY \u003d \"Alert: A game entry with the same \"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"            + \"game type and date/datetime already exists.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_GAME_OCCURS_IN_FUTURE \u003d \"Alert: The date for this game entry is in the future.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"    private final EditGameEntryDescriptor editGameEntryDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"    private EditCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"        index \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"        editGameEntryDescriptor \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"     * @param index              of the game in the filtered game list to edit","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"     * @param editGameDescriptor details to edit the game with","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"    public EditCommand(Index index, EditGameEntryDescriptor editGameDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"        requireNonNull(editGameDescriptor);","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"        this.editGameEntryDescriptor \u003d new EditGameEntryDescriptor(editGameDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"        List\u003cGameEntry\u003e lastShownList \u003d model.getFilteredGameEntryList();","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"            throw new CommandException(MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"        if (editGameEntryDescriptor.isAnyInvalidParameterFound()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"chingh20"},"content":"            throw new CommandException(editGameEntryDescriptor.errorMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"        if (!editGameEntryDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"            throw new CommandException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"        GameEntry editedGameEntry \u003d createEditedGameEntry(gameEntryToEdit, editGameEntryDescriptor);","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        if (gameEntryToEdit.equals(editedGameEntry)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"            throw new CommandException(MESSAGE_FIELDS_ARE_IDENTICAL);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"        String sameEntryAlert \u003d model.hasGameEntry(editedGameEntry) \u0026\u0026 !gameEntryToEdit.isSameGameEntry(editedGameEntry)","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"            ? MESSAGE_DUPLICATE_GAME_ENTRY","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"            : \"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        String inFutureAlert \u003d editedGameEntry.getDate().isInFuture()","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"            ? MESSAGE_GAME_OCCURS_IN_FUTURE","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"            : \"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"        model.setGameEntry(gameEntryToEdit, editedGameEntry);","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"                MESSAGE_EDIT_GAME_SUCCESS,","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"                editedGameEntry,","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"                Command.joinAlerts(sameEntryAlert, inFutureAlert)","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"        ));","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"     * Creates and returns a {@code GameEntry} with the details of {@code gameEntryToEdit}","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"     * edited with {@code editGameEntryDescriptor}.","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"BenjaminLHR"},"content":"    private static GameEntry createEditedGameEntry(GameEntry gameEntryToEdit,","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"                                                   EditGameEntryDescriptor editGameEntryDescriptor) {","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"        assert gameEntryToEdit !\u003d null;","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"        GameType updatedGameType \u003d editGameEntryDescriptor.getGameType()","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"                .orElse(gameEntryToEdit.getGameType());","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"        StartAmount updatedStartAmount \u003d editGameEntryDescriptor.getStartAmount()","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"                .orElse(gameEntryToEdit.getStartAmount());","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"        EndAmount updatedEndAmount \u003d editGameEntryDescriptor.getEndAmount().orElse(gameEntryToEdit.getEndAmount());","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"BenjaminLHR"},"content":"        DatePlayed date \u003d editGameEntryDescriptor.getDate().orElse(gameEntryToEdit.getDate());","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"        Duration updatedDuration \u003d editGameEntryDescriptor.getDuration().orElse(gameEntryToEdit.getDuration());","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"        Location updatedLocation \u003d editGameEntryDescriptor.getLocation()","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"                .orElse(gameEntryToEdit.getLocation());","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"BenjaminLHR"},"content":"        Set\u003cTag\u003e updatedTags \u003d editGameEntryDescriptor.getTags().orElse(gameEntryToEdit.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"        return new GameEntry(updatedGameType, updatedStartAmount, updatedEndAmount, date,","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"                updatedDuration, updatedLocation, updatedTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"chingh20"},"content":"        return EditCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"chingh20"},"content":"        return EditCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"                \u0026\u0026 editGameEntryDescriptor.equals(e.editGameEntryDescriptor);","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"Index: %s, New data: {%s}\", index, editGameEntryDescriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"dannylty"},"content":"     * Stores the details to edit the game entry with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"dannylty"},"content":"     * corresponding field value of the game entry.","lastModifiedDate":"2021-10-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"    public static class EditGameEntryDescriptor {","lastModifiedDate":"2021-10-03"},{"lineNumber":189,"author":{"gitId":"yzhilong"},"content":"        private GameType gameType;","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"yzhilong"},"content":"        private StartAmount startAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"yzhilong"},"content":"        private EndAmount endAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"dannylty"},"content":"        private DatePlayed date;","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"yzhilong"},"content":"        private Duration durationMinutes;","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"        private Location location;","lastModifiedDate":"2021-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"chingh20"},"content":"        private boolean containsInvalidParameter;","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"chingh20"},"content":"        private String errorMessage;","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"chingh20"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"chingh20"},"content":"         * Creates an empty EditGameEntryDescriptor.","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"chingh20"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"chingh20"},"content":"        public EditGameEntryDescriptor() {","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"chingh20"},"content":"            containsInvalidParameter \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"chingh20"},"content":"            errorMessage \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"dannylty"},"content":"        public EditGameEntryDescriptor(EditGameEntryDescriptor toCopy) {","lastModifiedDate":"2021-10-03"},{"lineNumber":212,"author":{"gitId":"dannylty"},"content":"            setGameType(toCopy.gameType);","lastModifiedDate":"2021-10-03"},{"lineNumber":213,"author":{"gitId":"dannylty"},"content":"            setStartAmount(toCopy.startAmount);","lastModifiedDate":"2021-10-03"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"            setEndAmount(toCopy.endAmount);","lastModifiedDate":"2021-10-03"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-10-03"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"            setDuration(toCopy.durationMinutes);","lastModifiedDate":"2021-10-03"},{"lineNumber":217,"author":{"gitId":"dannylty"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"chingh20"},"content":"            setContainsInvalidParameter(toCopy.containsInvalidParameter);","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"chingh20"},"content":"            setErrorMessage(toCopy.errorMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"            return CollectionUtil.isAnyNonNull(gameType, startAmount, endAmount, date, durationMinutes, location, tags);","lastModifiedDate":"2021-10-03"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":230,"author":{"gitId":"chingh20"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"chingh20"},"content":"         * Returns true if any parameter is found to be invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"chingh20"},"content":"         * (e.g. If profit is not given as a double)","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"chingh20"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"chingh20"},"content":"        public boolean isAnyInvalidParameterFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"chingh20"},"content":"            return containsInvalidParameter;","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"chingh20"},"content":"        public void setErrorMessage(String err) {","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"chingh20"},"content":"            this.errorMessage \u003d err;","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"chingh20"},"content":"        public void setContainsInvalidParameter(boolean containsInvalidParameter) {","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"chingh20"},"content":"            this.containsInvalidParameter \u003d containsInvalidParameter;","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"yzhilong"},"content":"        public void setGameType(GameType gameType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"dannylty"},"content":"            this.gameType \u003d gameType;","lastModifiedDate":"2021-10-03"},{"lineNumber":248,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":249,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":250,"author":{"gitId":"yzhilong"},"content":"        public Optional\u003cGameType\u003e getGameType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(gameType);","lastModifiedDate":"2021-10-03"},{"lineNumber":252,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":253,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":254,"author":{"gitId":"yzhilong"},"content":"        public void setStartAmount(StartAmount startAmount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"dannylty"},"content":"            this.startAmount \u003d startAmount;","lastModifiedDate":"2021-10-03"},{"lineNumber":256,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":257,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":258,"author":{"gitId":"yzhilong"},"content":"        public Optional\u003cStartAmount\u003e getStartAmount() {","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(startAmount);","lastModifiedDate":"2021-10-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"yzhilong"},"content":"        public void setEndAmount(EndAmount endAmount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"dannylty"},"content":"            this.endAmount \u003d endAmount;","lastModifiedDate":"2021-10-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"yzhilong"},"content":"        public Optional\u003cEndAmount\u003e getEndAmount() {","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(endAmount);","lastModifiedDate":"2021-10-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"dannylty"},"content":"        public void setDate(DatePlayed date) {","lastModifiedDate":"2021-10-03"},{"lineNumber":271,"author":{"gitId":"dannylty"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-10-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"dannylty"},"content":"        public Optional\u003cDatePlayed\u003e getDate() {","lastModifiedDate":"2021-10-03"},{"lineNumber":275,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-10-03"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"yzhilong"},"content":"        public void setDuration(Duration durationMinutes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"dannylty"},"content":"            this.durationMinutes \u003d durationMinutes;","lastModifiedDate":"2021-10-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"yzhilong"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(durationMinutes);","lastModifiedDate":"2021-10-03"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"dannylty"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-03"},{"lineNumber":287,"author":{"gitId":"dannylty"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"dannylty"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-03"},{"lineNumber":291,"author":{"gitId":"dannylty"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"dannylty"},"content":"            if (!(other instanceof EditGameEntryDescriptor)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"dannylty"},"content":"            EditGameEntryDescriptor e \u003d (EditGameEntryDescriptor) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":326,"author":{"gitId":"dannylty"},"content":"            // assume different game entries must be unique in their fields","lastModifiedDate":"2021-10-03"},{"lineNumber":327,"author":{"gitId":"yzhilong"},"content":"            boolean isTagsSame \u003d getTags().equals(e.getTags())","lastModifiedDate":"2021-11-05"},{"lineNumber":328,"author":{"gitId":"yzhilong"},"content":"                    || getTags().equals(Optional.empty()) \u0026\u0026 e.getTags().get().size() \u003d\u003d 0","lastModifiedDate":"2021-11-05"},{"lineNumber":329,"author":{"gitId":"yzhilong"},"content":"                    || e.getTags().equals(Optional.empty()) \u0026\u0026 getTags().get().size() \u003d\u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":330,"author":{"gitId":"dannylty"},"content":"            return getGameType().equals(e.getGameType())","lastModifiedDate":"2021-10-03"},{"lineNumber":331,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getStartAmount().equals(e.getStartAmount())","lastModifiedDate":"2021-10-03"},{"lineNumber":332,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getEndAmount().equals(e.getEndAmount())","lastModifiedDate":"2021-10-03"},{"lineNumber":333,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-10-03"},{"lineNumber":334,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getDuration().equals(e.getDuration())","lastModifiedDate":"2021-10-03"},{"lineNumber":335,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-10-03"},{"lineNumber":336,"author":{"gitId":"yzhilong"},"content":"                    \u0026\u0026 isTagsSame;","lastModifiedDate":"2021-11-05"},{"lineNumber":337,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":338,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":339,"author":{"gitId":"yzhilong"},"content":"        @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":340,"author":{"gitId":"yzhilong"},"content":"        public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":341,"author":{"gitId":"yzhilong"},"content":"            return String.format(\"GameType: %s, StartAmount: %s, EndAmount: %s, Date: %s, Duration: %s, Location: %s,\"","lastModifiedDate":"2021-11-05"},{"lineNumber":342,"author":{"gitId":"yzhilong"},"content":"                            + \" Tags: %s\", getGameType(), getStartAmount(), getEndAmount(), getDate(), getDuration(),","lastModifiedDate":"2021-11-05"},{"lineNumber":343,"author":{"gitId":"yzhilong"},"content":"                    getLocation(), getTags());","lastModifiedDate":"2021-11-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"BenjaminLHR":25,"yzhilong":52,"dannylty":74,"-":125,"chingh20":70}},{"path":"src/main/java/seedu/gamebook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"    public static final ExitCommand DUMMY \u003d new ExitCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Game Book as requested ...\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Exits GameBook.\\n\\nFormat:\\n exit\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"        return ExitCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"        return ExitCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"BenjaminLHR":2,"dannylty":2,"-":14,"chingh20":13}},{"path":"src/main/java/seedu/gamebook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntryContainsKeywordPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Finds and lists all game entries in game book whose contents matches","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":" * any given argument keyword. Matches game type, location, or tags.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    public static final FindCommand DUMMY \u003d new FindCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD + \" [KEYWORDS]\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_NOTE \u003d \"Multiple keywords are allowed. Each keyword should be separated by a \"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"        + \"whitespace.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FORMAT + \"\\n\" + COMMAND_NOTE;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_EXAMPLE \u003d COMMAND_WORD + \" friends mbs\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Finds all game entries whose contents contain any of \"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"        + \"Format:\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"        + COMMAND_FORMAT + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"        + COMMAND_NOTE + \"\\n\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"        + \"Example:\\n\" + COMMAND_EXAMPLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    private final GameEntryContainsKeywordPredicate predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    private FindCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"        this.predicate \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    public FindCommand(GameEntryContainsKeywordPredicate predicate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"        return FindCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        return FindCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredGameEntryList(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"                String.format(Messages.MESSAGE_GAME_ENTRIES_LISTED_OVERVIEW, model.getFilteredGameEntryList().size()));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"BenjaminLHR":4,"dannylty":41,"chingh20":19}},{"path":"src/main/java/seedu/gamebook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ADD;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DELETE;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_EDIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_EXIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_FIND;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"    public static final HelpCommand DUMMY \u003d new HelpCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Shows program usage instructions.\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"        + \"Format for general help:\\n\" + COMMAND_WORD + \"\\n\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"        + \"Format for specific command usage help:\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" add\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" edit\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" delete\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"        + COMMAND_WORD + \" find\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"For more information \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"        + \"visit \" + USERGUIDE_URL + \"\\n\\n\" + \"To view game list, enter \\\"list\\\" or a new command\";","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"    public static final String ADD_HELP_MESSAGE \u003d \"Format for add command:\\n\" + AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    public static final String EDIT_HELP_MESSAGE \u003d \"Format for edit command:\\n\" + EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"    public static final String DELETE_HELP_MESSAGE \u003d \"Format for delete command:\\n\" + DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    public static final String FIND_HELP_MESSAGE \u003d \"Format for find command: \\n\" + FindCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    public static final String EXIT_HELP_MESSAGE \u003d \"Format for exit command: \\n\" + EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d \"Invalid command. Try the command \\\"help\\\".\\n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    private final String helpMessage;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"    private boolean hasKeyword;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"     * Creates a HelpCommand object with a general message for the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"        helpMessage \u003d SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        hasKeyword \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"     * Creates a HelpCommand object with specific help message based on keyword.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"    public HelpCommand(String keyword) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"        assert keyword !\u003d null : \"Keyword must be a string\";","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"        hasKeyword \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"        if (keyword.equals(PREFIX_ADD.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d ADD_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        } else if (keyword.equals(PREFIX_EDIT.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d EDIT_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"        } else if (keyword.equals(PREFIX_DELETE.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d DELETE_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"        } else if (keyword.equals(PREFIX_FIND.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d FIND_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"        } else if (keyword.equals(PREFIX_EXIT.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d EXIT_HELP_MESSAGE;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"            helpMessage \u003d \"\\\"\" + keyword + \"\\\"\" + INVALID_COMMAND_MESSAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"            hasKeyword \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"        return HelpCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"        return HelpCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"        if (hasKeyword) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"            return new CommandResult(helpMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":7,"dannylty":1,"-":15,"chingh20":66}},{"path":"src/main/java/seedu/gamebook/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.model.Model.PREDICATE_SHOW_ALL_GAME_ENTRIES;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" * Lists all game entries in the game book to the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all games\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_FORMAT \u003d COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    public static final String COMMAND_SUMMARY \u003d \"Lists all game entries.\\n\\nFormat:\\n\" + COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"        return ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"    public String getCommandSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"        return ListCommand.COMMAND_SUMMARY;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"        model.updateFilteredGameEntryList(PREDICATE_SHOW_ALL_GAME_ENTRIES);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":4,"dannylty":3,"-":15,"chingh20":13}},{"path":"src/main/java/seedu/gamebook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"BenjaminLHR":1,"-":16}},{"path":"src/main/java/seedu/gamebook/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.TokenizerException;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        ArgumentMultimap argMultimap;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntry;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"            argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_GAMETYPE, PREFIX_STARTAMOUNT, PREFIX_ENDAMOUNT, PREFIX_DATE,","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"                            PREFIX_PROFIT, PREFIX_DURATION, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        } catch (TokenizerException te) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"            throw new ParseException(te.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"            GameType gameType \u003d argMultimap.getValue(PREFIX_GAMETYPE)","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"                    .map(ParserUtil::parseGameType)","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"                    .orElse(GameType.empty());","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"            StartAmount startAmount;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"            EndAmount endAmount;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"            boolean hasStart \u003d argMultimap.getValue(PREFIX_STARTAMOUNT).isPresent();","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"            boolean hasEnd \u003d argMultimap.getValue(PREFIX_ENDAMOUNT).isPresent();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"            boolean hasProfit \u003d argMultimap.getValue(PREFIX_PROFIT).isPresent();","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"            if (hasStart \u0026\u0026 hasEnd \u0026\u0026 !hasProfit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"                startAmount \u003d argMultimap.getValue(PREFIX_STARTAMOUNT)","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"                        .map(ParserUtil::parseStartAmount)","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"                        .get();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"                endAmount \u003d argMultimap.getValue(PREFIX_ENDAMOUNT)","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"                        .map(ParserUtil::parseEndAmount)","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"                        .get();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"            } else if (!hasStart \u0026\u0026 !hasEnd \u0026\u0026 hasProfit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"                startAmount \u003d new StartAmount(\"0\");","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"                endAmount \u003d argMultimap.getValue(PREFIX_PROFIT)","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"                        .map(ParserUtil::parseEndAmount)","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"                        .get();","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"            DatePlayed date \u003d argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"                    .map(ParserUtil::parseDate)","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"                    .orElse(new DatePlayed());","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"            Duration durationMinutes \u003d argMultimap.getValue(PREFIX_DURATION)","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"                    .map(ParserUtil::parseDuration)","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"                    .orElse(Duration.empty());","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"            Location location \u003d argMultimap.getValue(PREFIX_LOCATION)","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"                    .map(ParserUtil::parseLocation)","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"                    .orElse(Location.empty());","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"            Set\u003cTag\u003e tagList \u003d argMultimap.getValue(PREFIX_TAG)","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"                    .map(ParserUtil::parseTags)","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"                    .orElse(Tag.empty());","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"            gameEntry \u003d new GameEntry(gameType, startAmount, endAmount, date, durationMinutes, location, tagList);","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"        return new AddCommand(gameEntry);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"BenjaminLHR":21,"yzhilong":19,"dannylty":39,"-":34,"chingh20":3}},{"path":"src/main/java/seedu/gamebook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":59}},{"path":"src/main/java/seedu/gamebook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.TokenizerException;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_DUPLICATE_FLAGS \u003d \"Duplicate argument flags found.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_BOGUS_FLAGS \u003d \"Unidentified or empty argument flag found: \";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    private static List\u003cPrefixPosition\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"            findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        // Disallow duplicate flags.","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"        if (positions.size() \u003e 1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"            throw new TokenizerException(MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix + \" \", fromIndex);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"     * @throws TokenizerException If bogus argument flags detected.","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"        if (value.matches(\"(.* )?/.+\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"            throw new TokenizerException(MESSAGE_BOGUS_FLAGS + value.substring(value.lastIndexOf(\"/\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":2,"dannylty":16,"-":145}},{"path":"src/main/java/seedu/gamebook/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.ClearCommand.COMMAND_CONFIRMATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":" * Parses input arguments and creates a new ClearCommandParser object","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"     * and returns a ClearCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"    public ClearCommand parse(String args) {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"        if (trimmedArgs.equals(COMMAND_CONFIRMATION)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"            return new ClearCommand(trimmedArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"        return new ClearCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminLHR":3,"chingh20":22}},{"path":"src/main/java/seedu/gamebook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public static final Prefix PREFIX_GAMETYPE \u003d new Prefix(\"/g\");","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    public static final Prefix PREFIX_STARTAMOUNT \u003d new Prefix(\"/s\");","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    public static final Prefix PREFIX_ENDAMOUNT \u003d new Prefix(\"/e\");","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_PROFIT \u003d new Prefix(\"/p\");","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"/date\");","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"/dur\");","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"/loc\");","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/tag\");","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_ADD \u003d new Prefix(\"add\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_EDIT \u003d new Prefix(\"edit\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_FIND \u003d new Prefix(\"find\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_DELETE \u003d new Prefix(\"delete\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    public static final Prefix PREFIX_EXIT \u003d new Prefix(\"exit\");","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":5,"-":9,"chingh20":11}},{"path":"src/main/java/seedu/gamebook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"BenjaminLHR":5,"dannylty":2,"-":22}},{"path":"src/main/java/seedu/gamebook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditGameEntryDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.TokenizerException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        ArgumentMultimap argMultimap \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"            argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_GAMETYPE, PREFIX_STARTAMOUNT, PREFIX_ENDAMOUNT,","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"                            PREFIX_PROFIT, PREFIX_DATE, PREFIX_DURATION, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        } catch (TokenizerException te) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"            // TODO - add warning","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"            throw new ParseException(te.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        if (argMultimap.getValue(PREFIX_STARTAMOUNT).isPresent()","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"            || argMultimap.getValue(PREFIX_ENDAMOUNT).isPresent()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor editGameEntryDescriptor \u003d new EditGameEntryDescriptor();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"        setEditGameEntryDescriptor(argMultimap, editGameEntryDescriptor);","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"        return new EditCommand(index, editGameEntryDescriptor);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    private void setEditGameEntryDescriptor(ArgumentMultimap argMultimap,","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"                                            EditGameEntryDescriptor editGameEntryDescriptor) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"            if (argMultimap.getValue(PREFIX_GAMETYPE).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"                editGameEntryDescriptor.setGameType(","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"                    ParserUtil.parseGameType(argMultimap.getValue(PREFIX_GAMETYPE).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"            if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"                editGameEntryDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"            if (argMultimap.getValue(PREFIX_DURATION).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"                editGameEntryDescriptor","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"                    .setDuration(ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get()));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"            if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"                editGameEntryDescriptor","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"                    .setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"            if (argMultimap.getValue(PREFIX_PROFIT).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"                editGameEntryDescriptor","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"                    .setEndAmount(ParserUtil.parseEndAmount(argMultimap.getValue(PREFIX_PROFIT).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"                editGameEntryDescriptor","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"                    .setStartAmount(new StartAmount(\"0\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"            if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"                editGameEntryDescriptor.setTags(ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"            editGameEntryDescriptor.setContainsInvalidParameter(true);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"            editGameEntryDescriptor.setErrorMessage(e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"BenjaminLHR":16,"yzhilong":9,"dannylty":13,"-":24,"chingh20":36}},{"path":"src/main/java/seedu/gamebook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntryContainsKeywordPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"        return new FindCommand(new GameEntryContainsKeywordPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"BenjaminLHR":5,"dannylty":3,"-":27}},{"path":"src/main/java/seedu/gamebook/logic/parser/GameBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"public class GameBookParser {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"                HelpCommand.INVALID_COMMAND_MESSAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":13,"dannylty":2,"-":57,"chingh20":5}},{"path":"src/main/java/seedu/gamebook/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"public class HelpCommandParser {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"    public HelpCommand parse(String args) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"        assert args !\u003d null : \"args must be a string\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"        if (trimmedArgs.equals(\"\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"        return new HelpCommand(trimmedArgs);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"BenjaminLHR":3,"chingh20":20}},{"path":"src/main/java/seedu/gamebook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"BenjaminLHR":3,"-":13}},{"path":"src/main/java/seedu/gamebook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Amount;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_INVALID_START_AMOUNT \u003d Amount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_INVALID_END_AMOUNT \u003d Amount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_INVALID_PROFIT \u003d Amount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d DatePlayed.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_INVALID_DURATION \u003d Duration.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"     * @throws IllegalArgumentException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    public static Index parseIndex(String oneBasedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String gameType} by trimming the white spaces around it.","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    public static GameType parseGameType(String gameType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        requireNonNull(gameType);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        if (!GameType.isValidGameType(gameType)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(GameType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        return new GameType(gameType);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String startAmount} into a Double.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code startAmount} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"    public static StartAmount parseStartAmount(String startAmount) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"        requireNonNull(startAmount);","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        if (!StartAmount.isValidAmount(startAmount)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(StartAmount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"        return new StartAmount(startAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String endAmount} or {@code String profit} into a Double.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code endAmount} or {@code profit} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    public static EndAmount parseEndAmount(String endAmount) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"        requireNonNull(endAmount);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        if (!EndAmount.isValidAmount(endAmount)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(EndAmount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"        return new EndAmount(endAmount);","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String datePlayed} into a {@code DatePlayed}.","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code datePlayed} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"    public static DatePlayed parseDate(String datePlayed) {","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"        requireNonNull(datePlayed);","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        if (!DatePlayed.isValidDatePlayed(datePlayed)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        return new DatePlayed(datePlayed);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String duration} into an Integer.","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code duration} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"    public static Duration parseDuration(String duration) {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"chingh20"},"content":"        requireNonNull(duration);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        if (!Duration.isValidDuration(duration)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        return new Duration(duration);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"BenjaminLHR"},"content":"     * Throws IllegalValueException if fieldValue is negative.","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"BenjaminLHR"},"content":"     * @param field Name of the field to be used for generating the IllegalValueException message","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"BenjaminLHR"},"content":"     * @param fieldValue The Integer to check for","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if fieldValue is negative","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"    private static void requireIntegerNonNegative(String field, Integer fieldValue) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"BenjaminLHR"},"content":"        if (fieldValue \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(field + \" must be a non-negative integer\");","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"chingh20"},"content":"     * Parses a {@code String location} and trim the whitespaces around it.","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code location} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"    public static Location parseLocation(String location) {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"chingh20"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"        return new Location(location);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"    public static Tag parseTag(String tag) {","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) {","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"        for (String tag : tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"dannylty"},"content":"            tagSet.add(parseTag(tag));","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"     * Parses {@code String tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"    public static Set\u003cTag\u003e parseTags(String tags) {","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"dannylty"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"dannylty"},"content":"        return Tag.parseTagList(tags);","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"BenjaminLHR":20,"yzhilong":17,"dannylty":41,"-":69,"chingh20":29}},{"path":"src/main/java/seedu/gamebook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        return getPrefix() + \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":1,"-":37}},{"path":"src/main/java/seedu/gamebook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"BenjaminLHR":2,"-":15}},{"path":"src/main/java/seedu/gamebook/logic/parser/exceptions/TokenizerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":" * Represents a parse error encountered by the tokenizer.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"public class TokenizerException extends IllegalArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    public TokenizerException(String message) {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        super(message);","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    public TokenizerException(String message, Throwable cause) {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"BenjaminLHR":1,"dannylty":14}},{"path":"src/main/java/seedu/gamebook/model/GameBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntryList;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"public class GameBook implements ReadOnlyGameBook {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    private final GameEntryList gameEntries \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    public GameBook() {}","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * Creates a {@code GameBook} with a {@code ReadOnlyGameBook}.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    public GameBook(ReadOnlyGameBook toBeCopied) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        this();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * Replaces the contents of the game entries list with {@code gameEntries}.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * {@code gameEntries} must not contain duplicate game entries.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    public void setGameEntries(List\u003cGameEntry\u003e gameEntries) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        this.gameEntries.setGameEntries(gameEntries);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"     * Resets the existing data of this {@code GameBook} with {@code newData}.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    public void resetData(ReadOnlyGameBook newData) {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        setGameEntries(newData.getGameEntryList());","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns true if a game entry with the same identity as {@code gameEntry} exists in the game book. Game entries","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"     * have the same identity if they have the same game type and date.","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    public boolean hasGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(gameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        return gameEntries.contains(gameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"     * Adds a game entry to the game book and sorts the game entries by date.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    public void addGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        gameEntries.add(gameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"     * Replaces the given game entry {@code target} in the list with {@code editedGameEntry} and sorts the list by date","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"     * to ensure it remains in sorted order.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     * {@code target} must exist in the game book.","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    public void setGameEntry(GameEntry target, GameEntry editedGameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        gameEntries.setGameEntry(target, editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"     * Removes {@code key} from this {@code GameBook}.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"     * {@code key} must exist in the game book.","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    public void removeGameEntry(GameEntry key) {","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        gameEntries.remove(key);","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"        return gameEntries.asUnmodifiableObservableList().size() + \" game entries\" + gameEntries;","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        // TODO: refine later","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"    public ObservableList\u003cGameEntry\u003e getGameEntryList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        return gameEntries.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        } else if (other instanceof GameBook) {","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"            GameBook tmp \u003d (GameBook) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"            return gameEntries.equals(tmp.gameEntries);","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        return gameEntries.hashCode();","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BenjaminLHR":9,"yzhilong":89,"dannylty":4}},{"path":"src/main/java/seedu/gamebook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    Predicate\u003cGameEntry\u003e PREDICATE_SHOW_ALL_GAME_ENTRIES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns the user prefs\u0027 gamebook book file path.","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    Path getGameBookFilePath();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"     * Sets the user prefs\u0027 gamebook book file path.","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    void setGameBookFilePath(Path gameBookFilePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"     * Replaces game book data with the data in {@code gameBook}.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"    void setGameBook(ReadOnlyGameBook gameBook);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    ReadOnlyGameBook getGameBook();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"     * Returns true if a game entry with the same identity as {@code gameEntry} exists in the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"    boolean hasGameEntry(GameEntry gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"     * Deletes the given game entry.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"     * The game entry must exist in the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"    void deleteGameEntry(GameEntry target);","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"     * Adds the given game entry and sorts the list of game entries by date.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"    void addGameEntry(GameEntry gameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"     * Replaces the given game entry {@code target} with {@code editedGameEntry} and sorts the list of game entries by","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"     * date.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"     * {@code target} must exist in the game book.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    void setGameEntry(GameEntry target, GameEntry editedGameEntry);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    /** Returns an unmodifiable view of the filtered game entry list */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"    ObservableList\u003cGameEntry\u003e getFilteredGameEntryList();","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"     * Updates the filter of the filtered game entry list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"    void updateFilteredGameEntryList(Predicate\u003cGameEntry\u003e predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BenjaminLHR":8,"yzhilong":9,"dannylty":9,"-":60}},{"path":"src/main/java/seedu/gamebook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":" * Represents the in-memory model of the gamebook book data.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    public static final int NUMBER_OF_DATES_TO_PLOT \u003d 20;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    private final GameBook gameBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    private final FilteredList\u003cGameEntry\u003e filteredGameEntries;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    public ModelManager(ReadOnlyGameBook gameBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        requireAllNonNull(gameBook, userPrefs);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"        logger.fine(\"Initializing with gamebook book: \" + gameBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        this.gameBook \u003d new GameBook(gameBook);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        filteredGameEntries \u003d new FilteredList\u003c\u003e(this.gameBook.getGameEntryList());","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        this(new GameBook(), new UserPrefs());","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"    public Path getGameBookFilePath() {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        return userPrefs.getGameBookFilePath();","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    public void setGameBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        userPrefs.setGameBookFilePath(addressBookFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"    public void setGameBook(ReadOnlyGameBook gameBook) {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        this.gameBook.resetData(gameBook);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    public ReadOnlyGameBook getGameBook() {","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        return gameBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"    public boolean hasGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(gameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        return gameBook.hasGameEntry(gameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"    public void deleteGameEntry(GameEntry target) {","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        gameBook.removeGameEntry(target);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"    public void addGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(gameEntry);","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"        updateFilteredGameEntryList(PREDICATE_SHOW_ALL_GAME_ENTRIES);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"    public void setGameEntry(GameEntry target, GameEntry editedGameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"        requireAllNonNull(target, editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        gameBook.setGameEntry(target, editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"    public ObservableList\u003cGameEntry\u003e getFilteredGameEntryList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"        return filteredGameEntries;","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"    public void updateFilteredGameEntryList(Predicate\u003cGameEntry\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"        filteredGameEntries.setPredicate(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"        return gameBook.equals(other.gameBook)","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"                \u0026\u0026 filteredGameEntries.equals(other.filteredGameEntries);","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"        return gameBook.toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":9,"yzhilong":31,"dannylty":7,"-":109}},{"path":"src/main/java/seedu/gamebook/model/ReadOnlyGameBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":" * Unmodifiable view of an gamebook book","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public interface ReadOnlyGameBook {","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns an unmodifiable view of the game entries list.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    ObservableList\u003cGameEntry\u003e getGameEntryList();","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BenjaminLHR":4,"yzhilong":12}},{"path":"src/main/java/seedu/gamebook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    Path getGameBookFilePath();","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":1,"-":13}},{"path":"src/main/java/seedu/gamebook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private Path gameBookFilePath \u003d Paths.get(\"data\" , \"gamebook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        setGameBookFilePath(newUserPrefs.getGameBookFilePath());","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"    public Path getGameBookFilePath() {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        return gameBookFilePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    public void setGameBookFilePath(Path gameBookFilePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(gameBookFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        this.gameBookFilePath \u003d gameBookFilePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"                \u0026\u0026 gameBookFilePath.equals(o.gameBookFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        return Objects.hash(guiSettings, gameBookFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"        sb.append(\"\\nLocal data file location : \" + gameBookFilePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":10,"-":75}},{"path":"src/main/java/seedu/gamebook/model/gameentry/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class Amount {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"            \"Cash values should be valid floating point numbers between -1,000,000,000.00 and 1,000,000,000.00 with at\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"                + \" most 2 decimal places\";","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"    private static final double UPPER_BOUND \u003d 1000000000;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"    private static final double LOWER_BOUND \u003d -1000000000;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    private static final String CASH_VALUE_FORMAT \u003d \"(?\u003c!.)-?[0-9]*(\\\\.[0-9]{0,2})?(?!.)\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    private static final Amount EMPTY \u003d new Amount();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private static DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    private double amount;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    protected Amount() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        amount \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * Constructs Amount.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @param amount Should be a string representing a double up to 2 decimal places.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    public Amount(String amount) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        checkArgument(isValidAmount(amount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        double parsedAmount \u003d Double.parseDouble(amount.strip());","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        // Ensures that amount is never -0","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        this.amount \u003d parsedAmount \u003d\u003d 0 ? 0 : parsedAmount;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"     * Constructs Amount.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     * @param amount","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    public Amount(Double amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     * Checks whether input string is valid amount.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"     * @param cashAmount","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     * @return Whether input string is valid amount.","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidAmount(String cashAmount) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        if (cashAmount.equals(\".\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"        return cashAmount.strip().matches(CASH_VALUE_FORMAT)","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"            \u0026\u0026 Double.parseDouble(cashAmount.strip()) \u003c\u003d UPPER_BOUND","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"            \u0026\u0026 Double.parseDouble(cashAmount.strip()) \u003e\u003d LOWER_BOUND;","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"    public double getAmount() {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        return amount;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"     * Calculates the difference between this and another {@code Amount}.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"     * @param otherAmount","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"     * @return Difference between this and other {@code Amount}.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    public Amount minus(Amount otherAmount) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(otherAmount);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        return new Amount(amount - otherAmount.amount);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"     * Calculates the sum of this and another {@code Amount}.","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"     * @param otherAmount","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"     * @return Sum of this and other {@code Amount}.","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"    public Amount plus(Amount otherAmount) {","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(otherAmount);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"        return new Amount(amount + otherAmount.amount);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"     * Creates a string representing this with added prefix.","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"     * @param prefix","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"     * @return","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    public String addCurrencySymbol(String prefix) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        String sign \u003d amount \u003e\u003d 0 ? \"+\" : \"-\";","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        String value \u003d String.format(\"%.2f\", amount \u003e\u003d 0 ? amount : -amount);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"%s %s%s\", sign, prefix, value);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"%.2f\", amount);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"     * Formats it the way it was received for testing purposes.","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"    public String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"        return String.format(\"%.2f\", amount);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"        if (obj instanceof Amount) {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"            Amount tmp \u003d (Amount) obj;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"            return amount \u003d\u003d tmp.amount;","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":2,"shaliniseshadri":8,"yzhilong":103,"dannylty":13}},{"path":"src/main/java/seedu/gamebook/model/gameentry/DatePlayed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"public class DatePlayed implements Comparable\u003cDatePlayed\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"            \"Date should a valid date and be in \\\"yyyy-MM-dd HH:mm\\\" or \\\"yyyy-MM-dd\\\" format.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public static final DateFormat DATETIME_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public static final DateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    private static final DatePlayed EMPTY \u003d new DatePlayed(new Date(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private final Date datePlayed;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    private boolean isTimeIndicated \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * Constructs DatePlayed object with minutes timestamp indicated.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    public DatePlayed() {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        this.datePlayed \u003d new Date();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     * Constructs DatePlayed object from a String.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"     * @param datePlayedString String representing DatePlayed.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    public DatePlayed(String datePlayedString) throws IllegalArgumentException {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(datePlayedString);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        checkArgument(isValidDatePlayed(datePlayedString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        String trimmedString \u003d datePlayedString.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        Date date;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"            date \u003d trimmedString.equals(\"\")","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"                    ? new Date()","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"                    : DATETIME_FORMAT.parse(trimmedString);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"                date \u003d DATE_FORMAT.parse(trimmedString);","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"                this.isTimeIndicated \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"            } catch (ParseException parseException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"                // Will never happen","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"                date \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        datePlayed \u003d date;","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"     * Constructs DatePlayed.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"     * @param date","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    public DatePlayed(Date date) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        datePlayed \u003d date;","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"    public static DatePlayed empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"     * Checks if given string is valid input string for DatePlayed constructor.","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"     * @param datePlayedString Given input string.","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"     * @return Whether input string is valid DatePlayed constructor string.","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidDatePlayed(String datePlayedString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        String trimmedString \u003d datePlayedString.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        if (trimmedString.equals(\"\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        Date date;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"            date \u003d DATETIME_FORMAT.parse(trimmedString);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"            date \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"            date \u003d date \u003d\u003d null","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"                    ? DATE_FORMAT.parse(trimmedString)","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"                    : date;","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"            date \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        return date !\u003d null","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"                \u0026\u0026 (trimmedString.equals(DATETIME_FORMAT.format(date))","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"                || trimmedString.equals(DATE_FORMAT.format(date)));","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"     * Gets isMinuteIndicated field of DatePlayed object.","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"     * @return Whether minute field is indicated.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"    public boolean getIsTimeIndicated() {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        return isTimeIndicated;","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"     * Checks if this {@code DatePlayed} occurs in the future.","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"     * @return Whether this {@code DatePlayed} occurs in the future.","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"    public boolean isInFuture() {","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"        return datePlayed.compareTo(new Date()) \u003e 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"    private boolean sameMinute(DatePlayed other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"chingh20"},"content":"        Calendar otherCalendar \u003d new GregorianCalendar();","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"chingh20"},"content":"        otherCalendar.setTime(other.datePlayed);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"chingh20"},"content":"        Calendar thisCalendar \u003d new GregorianCalendar();","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"chingh20"},"content":"        thisCalendar.setTime(datePlayed);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"        return sameDay(other)","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"chingh20"},"content":"                \u0026\u0026 thisCalendar.get(Calendar.HOUR_OF_DAY) \u003d\u003d otherCalendar.get(Calendar.HOUR_OF_DAY)","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"chingh20"},"content":"                \u0026\u0026 thisCalendar.get(Calendar.MINUTE) \u003d\u003d otherCalendar.get(Calendar.MINUTE);","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"    private boolean sameDay(DatePlayed other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"chingh20"},"content":"        Calendar otherCalendar \u003d new GregorianCalendar();","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"chingh20"},"content":"        otherCalendar.setTime(other.datePlayed);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"chingh20"},"content":"        Calendar thisCalendar \u003d new GregorianCalendar();","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"chingh20"},"content":"        thisCalendar.setTime(datePlayed);","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"BenjaminLHR"},"content":"        return thisCalendar.get(Calendar.DAY_OF_YEAR) \u003d\u003d otherCalendar.get(Calendar.DAY_OF_YEAR)","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"BenjaminLHR"},"content":"                \u0026\u0026 thisCalendar.get(Calendar.YEAR) \u003d\u003d otherCalendar.get(Calendar.YEAR);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"     * Checks if another object is equal to this DatePlayed.","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"     * @param other Object to check if is equal.","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"yzhilong"},"content":"     * @return Whether the other object is equal.","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"yzhilong"},"content":"        } else if (other instanceof DatePlayed) {","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"yzhilong"},"content":"            DatePlayed tmp \u003d (DatePlayed) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"yzhilong"},"content":"            if (isTimeIndicated \u0026\u0026 !tmp.isTimeIndicated || !isTimeIndicated \u0026\u0026 tmp.isTimeIndicated) {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"yzhilong"},"content":"                return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"yzhilong"},"content":"            return isTimeIndicated \u0026\u0026 tmp.isTimeIndicated","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"yzhilong"},"content":"                    ? sameMinute(tmp)","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"                    : sameDay(tmp);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"BenjaminLHR"},"content":"     * Compares this DatePlayed object with another DatePlayed object.","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"BenjaminLHR"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"BenjaminLHR"},"content":"     * @param other Other DatePlayed to be compared to","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"BenjaminLHR"},"content":"     * @return A negative integer, zero, or a positive integer if the date of this DatePlayed is earlier than, same as,","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"BenjaminLHR"},"content":"     * or later than date of otherGameEntry respectively. Note that if a DatePlayed does not have a time, the time will","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"BenjaminLHR"},"content":"     * be defaulted to 12am.","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"yzhilong"},"content":"    public int compareTo(DatePlayed other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"BenjaminLHR"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"yzhilong"},"content":"            return 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"yzhilong"},"content":"            return datePlayed.compareTo(other.datePlayed);","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"yzhilong"},"content":"        return isTimeIndicated","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"yzhilong"},"content":"                ? DATETIME_FORMAT.format(datePlayed)","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"yzhilong"},"content":"                : DATE_FORMAT.format(datePlayed);","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"dannylty"},"content":"     * Formats it the way it was received for testing purposes.","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"    public String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"        if (isTimeIndicated) {","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"yzhilong"},"content":"            return DATETIME_FORMAT.format(datePlayed);","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"yzhilong"},"content":"            return DATE_FORMAT.format(datePlayed);","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"yzhilong"},"content":"        return toString().hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"BenjaminLHR":13,"yzhilong":157,"dannylty":20,"chingh20":12}},{"path":"src/main/java/seedu/gamebook/model/gameentry/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"public class Duration {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"            \"Input format should be \\\"12:34\\\", \\\"12h\\\", \\\"34m\\\", \\\"12h 34m\\\" or \\\"12345\\\"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    private static final String[] VALID_FORMATS \u003d new String[] {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"        \"[0-9]*\",","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        \"[0-9]{1,}:[0-5][0-9]\",","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"        \"[0-9]{1,}h\",","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        \"[0-9]{1,}h [0-5][0-9]m\",","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"        \"[1-9][0-9]*m\"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    };","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"    private static final String INVALID_DURATION \u003d \"Please enter a valid duration value between -2,147,483,648 and\"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"        + \" 2,147,483,647\";","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    private static final Duration EMPTY \u003d new Duration();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private final int durationMinutes;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * Constructs Duration.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     * @param durationString","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public Duration(String durationString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(durationString);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        checkArgument(isValidDuration(durationString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        this.durationMinutes \u003d parseDurationString(durationString);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"     * Constructs Duration.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"     * @param duration","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    public Duration(Integer duration) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(duration);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        durationMinutes \u003d duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"     * Private constructor for empty duration.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"    private Duration() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"        durationMinutes \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    public static Duration empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"     * Checks whether input string is valid duration.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"     * @param durationString","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"     * @return Whether input string is valid duration.","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidDuration(String durationString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        durationString \u003d durationString.strip();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        for (String format : VALID_FORMATS) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"            if (durationString.matches(format)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"                return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"     * Checks whether input integer is valid duration.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"     * @param duration","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"     * @return Whether input integer is valid duration.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidDuration(Integer duration) {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        return duration !\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"                \u0026\u0026 (duration.equals(Integer.MIN_VALUE)","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"shaliniseshadri"},"content":"                || duration \u003e\u003d 0) \u0026\u0026 (duration \u003c Integer.MAX_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"shaliniseshadri"},"content":"    /* added a try-catch block to prevent extremely large duration values from being entered, by handling the","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"shaliniseshadri"},"content":"     NumberFormatException thrown by Integer::valueOf */","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    private static int parseDurationString(String durationString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"shaliniseshadri"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"            durationString \u003d durationString.strip();","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"            if (durationString.equals(\"\") || durationString.matches(\"-[0]{0,1}[1-9]*\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"                return Integer.MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"            } else if (durationString.matches(VALID_FORMATS[0])) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"                return Integer.valueOf(durationString);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"            } else if (durationString.matches(VALID_FORMATS[1])) {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"                String[] vals \u003d durationString.split(\":\");","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"                return Integer.valueOf(vals[0]) * 60 + Integer.valueOf(vals[1]);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"            } else if (durationString.matches(VALID_FORMATS[2])) {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"                return Integer.valueOf(durationString.substring(0, durationString.length() - 1)) * 60;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"            } else if (durationString.matches(VALID_FORMATS[3])) {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"                String[] vals \u003d durationString.split(\" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"                int hours \u003d Integer.valueOf(vals[0].substring(0, vals[0].length() - 1));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"                int minutes \u003d Integer.valueOf(vals[1].substring(0, vals[1].length() - 1));","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"                return 60 * hours + minutes;","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"            } else if (durationString.matches(VALID_FORMATS[4])) {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"                return Integer.valueOf(durationString.substring(0, durationString.length() - 1));","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"                // Will never happen","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"                throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"shaliniseshadri"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalArgumentException(INVALID_DURATION);","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"    public int getDurationMinutes() {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"        return this.durationMinutes;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"        } else if (obj instanceof Duration) {","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"            Duration tmp \u003d (Duration) obj;","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"            return durationMinutes \u003d\u003d tmp.durationMinutes;","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"        // TODO -\u003e Change to show hh:mm if durationMinutes \u003e\u003d 60","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"        return durationMinutes \u003c\u003d 0","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"                ? \"\"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"                : durationMinutes \u003e 60","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"                ? String.format(\"%dh %dm\", durationMinutes / 60, durationMinutes % 60)","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"                : String.format(\"%dm\", durationMinutes);","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"     * Formats it the way it was received for testing purposes.","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"    public String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"        return String.format(\"%dm\", durationMinutes);","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":2,"shaliniseshadri":9,"yzhilong":113,"dannylty":24}},{"path":"src/main/java/seedu/gamebook/model/gameentry/EndAmount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class EndAmount extends Amount {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"    private static final EndAmount EMPTY \u003d new EndAmount();","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"    public EndAmount(String endAmount) {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"        super(endAmount);","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public EndAmount(Double endAmount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        super(endAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    private EndAmount() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public static EndAmount empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":10,"dannylty":15}},{"path":"src/main/java/seedu/gamebook/model/gameentry/GameEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntry implements Comparable\u003cGameEntry\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    private static final String MESSAGE_MISSING_ARGUMENTS \u003d \"GameType and EndAmount must both be present.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    private final GameType gameType;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    private final StartAmount startAmount;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    private final EndAmount endAmount;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    private final DatePlayed date;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private final Duration durationMinutes;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    private final Location location;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * Constructs GameEntry.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     * @param gameType","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @param startAmount","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * @param endAmount","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @param datePlayed","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     * @param duration","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * @param location","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     * @param tags","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    public GameEntry(GameType gameType, StartAmount startAmount, EndAmount endAmount, DatePlayed datePlayed,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"                     Duration duration, Location location, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        requireAllNonNull(gameType, startAmount, endAmount, datePlayed, duration, location, tags);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        if (gameType.isEmpty() || endAmount.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"            throw new IllegalArgumentException(MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        this.gameType \u003d gameType;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        this.startAmount \u003d startAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        this.endAmount \u003d endAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        this.date \u003d datePlayed;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        this.durationMinutes \u003d duration;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"     * Constructs GameEntry.","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     * @param gameType","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"     * @param startAmount","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     * @param endAmount","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"     * @param datePlayed","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"     * @param duration","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"     * @param location","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"     * @param tags","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    public GameEntry(String gameType, String startAmount, String endAmount, String datePlayed, String duration,","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"                     String location, String tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        this.gameType \u003d new GameType(gameType);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"        this.startAmount \u003d new StartAmount(startAmount);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        this.endAmount \u003d new EndAmount(endAmount);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        this.date \u003d new DatePlayed(datePlayed);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        this.durationMinutes \u003d new Duration(duration);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        this.tags \u003d Tag.parseTagList(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"     * Gets the game type of this game entry.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"     * @return Game type.","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"    public GameType getGameType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        return gameType;","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"     * Gets the start amount of this game entry.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"     * @return Start amount.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"    public StartAmount getStartAmount() {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        return startAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"     * Gets the end amount of this game entry.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"     * @return End amount.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"    public EndAmount getEndAmount() {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        return endAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"     * Gets the date on which this game was played.","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"     * @return Date the game was played.","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"    public DatePlayed getDate() {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"        return date;","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"     * Gets the duration of the game. Negative values indicate that this field is","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"     * empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"     * @return Duration of game in minutes.","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"    public Duration getDuration() {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"        return durationMinutes;","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"     * Gets the location where the game was played. Empty string indicates that","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"     * the field is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"     * @return Location where the game was played.","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"        return location;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"        return tags.contains(tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"shaliniseshadri"},"content":"    public Double getDifference() {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"        return (this.endAmount.minus(this.startAmount)).getAmount();","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"     * Returns a boolean indicating whether there are any tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"    public boolean hasTags() {","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"        return !tags.isEmpty();","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns true if {@code otherGameEntry} is considered the same. Two game entries are considered the same if both","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"BenjaminLHR"},"content":"     * have the same game type and date.","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"     * @param otherGameEntry Other object to compare with.","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"BenjaminLHR"},"content":"     * @return Whether the game entry is considered the same.","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"yzhilong"},"content":"    public boolean isSameGameEntry(GameEntry otherGameEntry) {","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"yzhilong"},"content":"        if (otherGameEntry \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"yzhilong"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"        return equals(otherGameEntry)","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"yzhilong"},"content":"                || (gameType.equals(otherGameEntry.gameType)","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"yzhilong"},"content":"                        \u0026\u0026 date.equals(otherGameEntry.date));","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"yzhilong"},"content":"        } else if (other instanceof GameEntry) {","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"yzhilong"},"content":"            GameEntry tmp \u003d (GameEntry) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"yzhilong"},"content":"            return gameType.equals(tmp.gameType)","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 getDifference().equals(tmp.getDifference())","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"                    \u0026\u0026 date.equals(tmp.date)","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"yzhilong"},"content":"                    \u0026\u0026 durationMinutes.equals(tmp.durationMinutes)","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"yzhilong"},"content":"                    \u0026\u0026 location.equals(tmp.location)","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"yzhilong"},"content":"                    \u0026\u0026 tags.equals(tmp.tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"BenjaminLHR"},"content":"     * Compares the GameEntry with another GameEntry by date.","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"BenjaminLHR"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"BenjaminLHR"},"content":"     * @param otherGameEntry Other GameEntry to be compared to","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"BenjaminLHR"},"content":"     * @return A negative integer, zero, or a positive integer if the date of this GameEntry is earlier than, same as","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"BenjaminLHR"},"content":"     * or later than date of otherGameEntry respectively. Note that if a GameEntry does not have a time, the time will","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"BenjaminLHR"},"content":"     * be taken as 12am.","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"BenjaminLHR"},"content":"    public int compareTo(GameEntry otherGameEntry) {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"BenjaminLHR"},"content":"        if (this \u003d\u003d otherGameEntry || this.equals(otherGameEntry)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"BenjaminLHR"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"BenjaminLHR"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"BenjaminLHR"},"content":"            DatePlayed thisDate \u003d this.getDate();","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"BenjaminLHR"},"content":"            DatePlayed otherDate \u003d otherGameEntry.getDate();","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"BenjaminLHR"},"content":"            return thisDate.compareTo(otherDate);","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"yzhilong"},"content":"        return Objects.hash(gameType, startAmount, endAmount, date, durationMinutes, location, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"yzhilong"},"content":"        String output \u003d String.format(","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"chingh20"},"content":"                \"Game type: %s; Profit: %s; Date played: %s\",","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"yzhilong"},"content":"                gameType,","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"yzhilong"},"content":"                endAmount.minus(startAmount),","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"yzhilong"},"content":"                date);","lastModifiedDate":"2021-09-28"},{"lineNumber":210,"author":{"gitId":"yzhilong"},"content":"        if (!durationMinutes.toString().equals(\"\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"yzhilong"},"content":"            output +\u003d \"; Game duration: \" + durationMinutes.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"yzhilong"},"content":"        if (!location.toString().equals(\"\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"yzhilong"},"content":"            output +\u003d \"; Location: \" + location.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"yzhilong"},"content":"        if (tags.size() \u003e 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"yzhilong"},"content":"            output +\u003d \"; Tags: \" + tags.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"yzhilong"},"content":"        return output;","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"dannylty"},"content":"     * Compiles meaningful text together to be used as a search/find operand.","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"dannylty"},"content":"     * @return The compiled text.","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"dannylty"},"content":"    public String getSearchableCorpus() {","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"dannylty"},"content":"        // Maybe SLAP the tags thing to another method somewhere.","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"dannylty"},"content":"        return getGameType().toString() + \" \" + getLocation().toString()","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"dannylty"},"content":"                + getTags()","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"dannylty"},"content":"                .stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"dannylty"},"content":"                .map(x -\u003e x.toRawString())","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"dannylty"},"content":"                .reduce(\"\", (x, y) -\u003e x + \" \" + y);","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"BenjaminLHR":26,"shaliniseshadri":2,"yzhilong":176,"dannylty":31,"chingh20":1}},{"path":"src/main/java/seedu/gamebook/model/gameentry/GameEntryContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * Tests that a {@code GameEntry}\u0027s text matches any of the keywords given.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"public class GameEntryContainsKeywordPredicate implements Predicate\u003cGameEntry\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     * Constructs a {@Code GameEntryContainsKeywordPredicate}.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"     * @param keywords","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    public GameEntryContainsKeywordPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        this.keywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"            this.keywords.add(keyword.toLowerCase());","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    public boolean test(GameEntry gameEntry) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(gameEntry.getSearchableCorpus(), keyword));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        } else if (!(other instanceof GameEntryContainsKeywordPredicate)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"            return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate tmp \u003d (GameEntryContainsKeywordPredicate) other;","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        return this.keywords.equals(tmp.keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":19,"dannylty":24}},{"path":"src/main/java/seedu/gamebook/model/gameentry/GameEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"import java.util.Objects;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"import java.util.Spliterator;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"import java.util.Spliterators;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"import java.util.stream.StreamSupport;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.exceptions.GameEntryNotFoundException;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.util.GameEntriesDateComparator;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntryList implements Iterable\u003cGameEntry\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private final ObservableList\u003cGameEntry\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    private final ObservableList\u003cGameEntry\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"     * Returns true if the list contains an equivalent GameEntry as the given argument. Game entries are considered","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"     * equivalent if they have the same game type and date.","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    public boolean contains(GameEntry toCheck) {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"     * Adds a GameEntry to the list and sorts the list by date to ensure it remains in sorted order.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"     * @param toAdd GameEntry to be added.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    public void add(GameEntry toAdd) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"        internalList.sort(new GameEntriesDateComparator().reversed());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"     * Replaces the game entry  {@code target} in the list with {@code editedGameEntry}, then sorts the list by date to","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"     * ensure it remains in sorted order.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"     * @param target GameEntry to be replaced","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"     * @param editedGameEntry The edited GameEntry object","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    public void setGameEntry(GameEntry target, GameEntry editedGameEntry) {","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        requireAllNonNull(target, editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"            throw new GameEntryNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        internalList.set(index, editedGameEntry);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        internalList.sort(new GameEntriesDateComparator().reversed());","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"     * Removes the equivalent GameEntry from the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"     * The GameEntry must exist in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"    public void remove(GameEntry toRemove) {","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"            throw new GameEntryNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries(GameEntryList replacement) {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"     * Replaces the contents of this list with {@code gameEntries}.","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries(List\u003cGameEntry\u003e gameEntries) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"        requireAllNonNull(gameEntries);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"BenjaminLHR"},"content":"        internalList.setAll(gameEntries);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"    public ObservableList\u003cGameEntry\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"    public Iterator\u003cGameEntry\u003e iterator() {","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"     * Utility function to check each item between two iterators is equal.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"    private static boolean iteratorEquals(Iterator i1, Iterator i2) {","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"        if (i1 \u003d\u003d i2) {","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"        while (i1.hasNext()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"            if (!i2.hasNext()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"            if (!Objects.equals(i1.next(), i2.next())) {","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"        if (i2.hasNext()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"dannylty"},"content":"            return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"        return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"        // short circuit if same object","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"        if (!(obj instanceof GameEntryList)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"            return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"        GameEntryList other \u003d (GameEntryList) obj;","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"        return iteratorEquals(this.iterator(), other.iterator());","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"        return StreamSupport.stream(","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"                Spliterators.spliteratorUnknownSize(this.iterator(), Spliterator.ORDERED), false)","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"                .map(GameEntry::toString)","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"                .reduce(\"\", (x, y) -\u003e x + \"\\n\" + y);","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BenjaminLHR":24,"yzhilong":80,"dannylty":45}},{"path":"src/main/java/seedu/gamebook/model/gameentry/GameType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"public class GameType {","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input cannot only contain whitespaces\";","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"    private static final GameType EMPTY \u003d new GameType();","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    private final String gameType;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"     * Private constructor for empty GameType.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    private GameType() {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        gameType \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * Constructs GameType.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     * @param gameType","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    public GameType(String gameType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(gameType);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        if (!isValidGameType(gameType)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        String strippedGameType \u003d gameType.strip();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        String[] tmp \u003d strippedGameType.split(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        for (int i \u003d 0; i \u003c tmp.length; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"            tmp[i] \u003d tmp[i].substring(0, 1).toUpperCase() + tmp[i].substring(1).toLowerCase();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        this.gameType \u003d String.join(\" \", tmp);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"     * Checks if given string is valid gameType.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"     * @param gameType","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     * @return Whether input string is valid gameType.","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidGameType(String gameType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        String strippedGameType \u003d gameType.strip();","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        return strippedGameType.length() \u003e 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        } else if (other instanceof GameType) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"            GameType tmp \u003d (GameType) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"            return gameType.equals(tmp.gameType);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        return gameType;","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"     * Formats it the way it was received for testing purposes.","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"    public String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"        return toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        return gameType.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"    public static GameType empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":50,"dannylty":31}},{"path":"src/main/java/seedu/gamebook/model/gameentry/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"public class Location {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"All strings are valid locations\";","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    private static final String EMPTY_LOCATION \u003d \"\";","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    private static final Location EMPTY \u003d new Location();","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    private final String location;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"     * Constructs Location.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"     * @param location","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public Location(String location) {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        if (!location.equals(EMPTY_LOCATION)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"            String[] tmp \u003d location.strip().split(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"            for (int i \u003d 0; i \u003c tmp.length; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"                tmp[i] \u003d tmp[i].equals(\"\")","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"                        ? tmp[i]","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"                        : tmp[i].substring(0, 1).toUpperCase() + tmp[i].substring(1).toLowerCase();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"            this.location \u003d String.join(\" \", tmp);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"            this.location \u003d EMPTY_LOCATION;","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"     * Private constructor for empty location.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    private Location() {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        location \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    public static Location empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     * Checks whether input string is valid location.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     * @param location","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"     * @return Always true.","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    public static boolean isValidLocation(String location) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        } else if (other instanceof Location) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"            Location tmp \u003d (Location) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"            return location.equals(tmp.location);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        return location;","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"     * Formats it the way it was received for testing purposes.","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    public String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        return toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        return location.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":58,"dannylty":26}},{"path":"src/main/java/seedu/gamebook/model/gameentry/StartAmount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class StartAmount extends Amount {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"    private static final StartAmount EMPTY \u003d new StartAmount();","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"    public StartAmount(String startAmount) {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"        super(startAmount);","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public StartAmount(Double startAmount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        super(startAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    private StartAmount() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public static StartAmount empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        return this \u003d\u003d EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":10,"dannylty":14}},{"path":"src/main/java/seedu/gamebook/model/gameentry/exceptions/GameEntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry.exceptions;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class GameEntryNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BenjaminLHR":1,"yzhilong":3}},{"path":"src/main/java/seedu/gamebook/model/stats/Average.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.stats;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"public class Average {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"    private static final String REGEX_TO_SPLIT_DATE_AND_TIME \u003d \"\\\\s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"    private Average() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"     * Puts all the Dates and corresponding profits into a TreeMap from a GameEntry List","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"     * @param gameEntryList The list of game entries","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"     * @return a treemap with the dates as keys and the average profit as values","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"    public static TreeMap\u003cString, Double\u003e getAverageData(List\u003cGameEntry\u003e gameEntryList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"        TreeMap\u003cString, List\u003cDouble\u003e\u003e preprocessedDates \u003d new TreeMap\u003c\u003e(); // before calculating average","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"        TreeMap\u003cString, Double\u003e processedDates \u003d new TreeMap\u003c\u003e(); // after calculating average","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"        // Populate preprocessedDates, with keys being the dates, and values being the List of profits from the dates","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"        gameEntryList.forEach(gameEntry -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"            String dateWithoutTime \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"                    gameEntry.getDate().toString().strip().split(REGEX_TO_SPLIT_DATE_AND_TIME, 2)[0];","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"            if (!preprocessedDates.containsKey(dateWithoutTime)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"                preprocessedDates.put(dateWithoutTime, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"            preprocessedDates.get(dateWithoutTime).add(gameEntry.getDifference());","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"        });","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"        // Using preprocessedDates, populate processedDates, with dates as the keys and average profits as the values","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"        preprocessedDates.forEach((date, listOfProfits) -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"            Double averageProfit \u003d listOfProfits.stream().mapToDouble(Double::doubleValue).average().orElse(0.00);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"            processedDates.put(date, averageProfit);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"        });","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"        return processedDates;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"shaliniseshadri"},"content":"    public static Double getOverallAverage(List\u003cGameEntry\u003e gameEntryList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"        return gameEntryList.stream().mapToDouble(GameEntry::getDifference).average().orElse(0.00);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":13,"shaliniseshadri":35}},{"path":"src/main/java/seedu/gamebook/model/stats/Median.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.stats;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.stream.DoubleStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"public class Median {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"    private Median() {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"    public static Double getOverallMedian(List\u003cGameEntry\u003e gameEntryList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"            double overallMedian;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"            DoubleStream sortedProfitList \u003d gameEntryList.stream().mapToDouble(GameEntry::getDifference).sorted();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"            if (gameEntryList.size() % 2 \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"                overallMedian \u003d sortedProfitList.skip((gameEntryList.size() / 2) - 1).limit(2).average().orElse(0.00);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"                overallMedian \u003d sortedProfitList.skip(gameEntryList.size() / 2).findFirst().orElse(0.00);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"            return overallMedian;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"            return 0.00;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"BenjaminLHR":2,"shaliniseshadri":25}},{"path":"src/main/java/seedu/gamebook/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":" * Represents a Tag in the gamebook book.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumerical values connected by dashes\"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"            + \" and separated by commas.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"            + \" (e.g. \\\"some-tag-value, another-tag-value\\\")\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public static final String VALIDATION_REGEX \u003d \"([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    public static final String DELIMITER \u003d \",\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    private static final Set\u003cTag\u003e EMPTY \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        this.tagName \u003d tagName.strip();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        return test.strip().matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     * Returns a set of tags from a comma-separated string.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"     * @param tagsString","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"     * @return Set of tags.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    public static Set\u003cTag\u003e parseTagList(String tagsString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        String[] tags \u003d tagsString.split(DELIMITER);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        Set\u003cTag\u003e outputSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        for (String tag : tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"            if (tag.length() \u003e 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"                outputSet.add(new Tag(tag));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        return outputSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"        return tagName;","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    public static Set\u003cTag\u003e empty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        return EMPTY;","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"    public static boolean isEmpty(Set\u003cTag\u003e set) {","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"        return set.size() \u003d\u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"    private String toCommandString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"        return tagName;","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"     * Recovers the command string from the a {@code Set\u003cTag\u003e}`. Joins with the delimiter.","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"     * @param tags","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"     * @return","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"    public static String toCommandString(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"        return String.join(DELIMITER,","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"                tags.stream().map(x -\u003e x.toCommandString()).collect(Collectors.toList()));","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"     * Returns the tag without formatting.","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"    public String toRawString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"        return tagName;","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BenjaminLHR":3,"yzhilong":21,"dannylty":38,"-":45}},{"path":"src/main/java/seedu/gamebook/model/util/GameEntriesDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":" * A comparator to compare game entries by date. A game entry with an earlier date is deemed smaller.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntriesDateComparator implements Comparator\u003cGameEntry\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    public int compare(GameEntry gameOne, GameEntry gameTwo) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"        requireAllNonNull(gameOne, gameTwo);","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        requireAllNonNull(gameOne.getDate(), gameTwo.getDate());","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        return gameOne.compareTo(gameTwo);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"BenjaminLHR":20}},{"path":"src/main/java/seedu/gamebook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public static GameEntry[] getSampleGameEntries() {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"        return new GameEntry[] {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"            new GameEntry(\"Poker\", \"10.96\", \"0.23\", \"2021-09-21 11:40\", \"10\",","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"                    \"genting casino\", \"drunk\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"            new GameEntry(\"Roulette\", \"31.01\", \"1.12\", \"2021-09-23\",","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"                        \"30\", \"Marina Bay Sands\", \"drunk\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"            new GameEntry(\"Poker\", \"110\", \"23.64\", \"2021-09-22 12:40\", \"12\",","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"                        \"sentosa casino\", \"\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"            new GameEntry(\"Blackjack\", \"10.20\", \"12.94\", \"2021-10-21 12:40\", \"10\",","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"                        \"genting casino\", \"hungry, angry, friends\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"            new GameEntry(\"Baccarat\", \"21.12\", \"0.26\", \"2020-12-30 13:40\",","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"                        \"12\", \"sentosa casino\", \"smoking, late-night\"),","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    public static ReadOnlyGameBook getSampleGameBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"        GameBook sampleGb \u003d new GameBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        for (GameEntry sampleGameEntry : getSampleGameEntries()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"            sampleGb.addGameEntry(sampleGameEntry);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"        return sampleGb;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"BenjaminLHR":18,"yzhilong":4,"-":26}},{"path":"src/main/java/seedu/gamebook/storage/GameBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":" * Represents a storage for {@link seedu.gamebook.model.GameBook}.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"public interface GameBookStorage {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"    Path getGameBookFilePath();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"     * Returns GameBook data as a {@link ReadOnlyGameBook}.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"    Optional\u003cReadOnlyGameBook\u003e readGameBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"     * @see #getGameBookFilePath()","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"    Optional\u003cReadOnlyGameBook\u003e readGameBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"     * Saves the given {@link ReadOnlyGameBook} to the storage.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"     * @param gameBook cannot be null.","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"    void saveGameBook(ReadOnlyGameBook gameBook) throws IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"     * @see #saveGameBook(ReadOnlyGameBook)","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"shaliniseshadri"},"content":"    void saveGameBook(ReadOnlyGameBook gameBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"BenjaminLHR":4,"shaliniseshadri":42}},{"path":"src/main/java/seedu/gamebook/storage/JsonAdaptedGameEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static seedu.gamebook.model.gameentry.DatePlayed.DATETIME_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static seedu.gamebook.model.gameentry.DatePlayed.DATE_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":" * Jackson-friendly version of {@link GameEntry}.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"class JsonAdaptedGameEntry {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Game Entry\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"    private final String gameType;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"    private final String startAmount;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"    private final String endAmount;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"    private final String date;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"    private final String durationMinutes;","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"    private final String location;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"     * Constructs a {@code JsonAdaptedGameEntry} with the given game entry details.","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    public JsonAdaptedGameEntry(@JsonProperty(\"gameType\") String gameType,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"                                @JsonProperty(\"startAmount\") String startAmount,","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"            @JsonProperty(\"endAmount\") String endAmount, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"                                @JsonProperty(\"durationMinutes\") String durationMinutes,","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"shaliniseshadri"},"content":"                                @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"shaliniseshadri"},"content":"                                @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameType \u003d gameType;","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"        this.startAmount \u003d startAmount;","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"        this.endAmount \u003d endAmount;","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"shaliniseshadri"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"shaliniseshadri"},"content":"        this.durationMinutes \u003d durationMinutes;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"shaliniseshadri"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"shaliniseshadri"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"shaliniseshadri"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"shaliniseshadri"},"content":"     * Converts a given {@code GameEntry} into this class for Jackson use.","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"shaliniseshadri"},"content":"    public JsonAdaptedGameEntry(GameEntry source) {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        gameType \u003d source.getGameType().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"        startAmount \u003d String.valueOf(source.getStartAmount());","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"shaliniseshadri"},"content":"        endAmount \u003d String.valueOf(source.getEndAmount());","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        durationMinutes \u003d source.getDuration().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        location \u003d source.getLocation().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"shaliniseshadri"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"shaliniseshadri"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"shaliniseshadri"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"     * Converts this Jackson-friendly adapted gameEntry object into the model\u0027s {@code GameEntry} object.","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"shaliniseshadri"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted gameEntry.","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"shaliniseshadri"},"content":"    public GameEntry toModelType() throws IllegalValueException, ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"shaliniseshadri"},"content":"        final List\u003cTag\u003e gameEntryTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"shaliniseshadri"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"shaliniseshadri"},"content":"            gameEntryTags.add(tag.toModelType());","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"shaliniseshadri"},"content":"        if (gameType \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, GameType.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        } else if (!GameType.isValidGameType(gameType)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalValueException(GameType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"shaliniseshadri"},"content":"        if (startAmount \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start amount\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        } else if (!StartAmount.isValidAmount(startAmount)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalValueException(StartAmount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"shaliniseshadri"},"content":"        if (endAmount \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end amount\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"        } else if (!StartAmount.isValidAmount(endAmount)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalValueException(EndAmount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"shaliniseshadri"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"date played\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"shaliniseshadri"},"content":"        // todo: add input validation check for date","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        String datePlayedString \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"shaliniseshadri"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"            datePlayedString \u003d DATETIME_FORMAT.format(DATETIME_FORMAT.parse(date));","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"shaliniseshadri"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"                datePlayedString \u003d DATE_FORMAT.format(DATE_FORMAT.parse(date));","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"            } catch (ParseException ee) {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"                // do nothing","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"shaliniseshadri"},"content":"        if (durationMinutes \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"duration\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"        } else if (!Duration.isValidDuration(durationMinutes)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalValueException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"shaliniseshadri"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"shaliniseshadri"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"location\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"        } else if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"        String tagString \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"        for (Tag tag : gameEntryTags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"            tagString +\u003d tag.tagName + \",\";","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"        tagString \u003d tagString.length() \u003e 0 ? tagString.substring(0, tagString.length() - 1) : tagString;","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"        return new GameEntry(gameType, startAmount, endAmount, datePlayedString, durationMinutes, location,","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"                tagString);","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"BenjaminLHR":9,"shaliniseshadri":96,"yzhilong":32,"dannylty":4}},{"path":"src/main/java/seedu/gamebook/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BenjaminLHR":3,"-":45}},{"path":"src/main/java/seedu/gamebook/storage/JsonGameBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.FileUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":" * A class to access GameBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"public class JsonGameBookStorage implements GameBookStorage {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGameBookStorage.class);","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"    public JsonGameBookStorage(Path filePath) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"    public Path getGameBookFilePath() {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"    public Optional\u003cReadOnlyGameBook\u003e readGameBook() throws DataConversionException {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"        return readGameBook(filePath);","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"     * Similar to {@link #readGameBook()}.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"    public Optional\u003cReadOnlyGameBook\u003e readGameBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"        Optional\u003cJsonSerializableGameBook\u003e jsonGameBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"                filePath, JsonSerializableGameBook.class);","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"        if (!jsonGameBook.isPresent()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"shaliniseshadri"},"content":"            return Optional.of(jsonGameBook.get().toModelType());","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"        } catch (IllegalValueException | ParseException ive) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"shaliniseshadri"},"content":"    public void saveGameBook(ReadOnlyGameBook gameBook) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"        saveGameBook(gameBook, filePath);","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"shaliniseshadri"},"content":"     * Similar to {@link #saveGameBook(ReadOnlyGameBook)}.","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"shaliniseshadri"},"content":"    public void saveGameBook(ReadOnlyGameBook gameBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"        requireNonNull(gameBook);","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"shaliniseshadri"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGameBook(gameBook), filePath);","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BenjaminLHR":7,"shaliniseshadri":21,"-":53}},{"path":"src/main/java/seedu/gamebook/storage/JsonSerializableGameBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":" * An Immutable GameBook that is serializable to JSON format.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"@JsonRootName(value \u003d \"gamebook\")","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"class JsonSerializableGameBook {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"    private final List\u003cJsonAdaptedGameEntry\u003e gameEntries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"     * Constructs a {@code JsonSerializableGameBook} with the given game entries.","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"    public JsonSerializableGameBook(@JsonProperty(\"gameEntries\") List\u003cJsonAdaptedGameEntry\u003e gameEntries) {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameEntries.addAll(gameEntries);","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"     * Converts a given {@code ReadOnlyGameBook} into this class for Jackson use.","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGameBook}.","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"    public JsonSerializableGameBook(ReadOnlyGameBook source) {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        gameEntries.addAll(source.getGameEntryList().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"                .map(JsonAdaptedGameEntry::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"shaliniseshadri"},"content":"     * Converts this game book into the model\u0027s {@code GameBook} object.","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"shaliniseshadri"},"content":"    public GameBook toModelType() throws IllegalValueException, ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"        GameBook gameBook \u003d new GameBook();","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"        for (JsonAdaptedGameEntry jsonAdaptedGameEntry : gameEntries) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"            GameEntry gameEntry \u003d jsonAdaptedGameEntry.toModelType();","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"shaliniseshadri"},"content":"            gameBook.addGameEntry(gameEntry);","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"shaliniseshadri"},"content":"        return gameBook;","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"BenjaminLHR":5,"shaliniseshadri":50,"dannylty":2}},{"path":"src/main/java/seedu/gamebook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BenjaminLHR":5,"-":42}},{"path":"src/main/java/seedu/gamebook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"public interface Storage extends GameBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"    Path getGameBookFilePath();","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"    Optional\u003cReadOnlyGameBook\u003e readGameBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"    void saveGameBook(ReadOnlyGameBook gameBook) throws IOException;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BenjaminLHR":5,"shaliniseshadri":4,"-":23}},{"path":"src/main/java/seedu/gamebook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":" * Manages storage of GameBook data in local storage.","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"    private GameBookStorage gameBookStorage;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"     * Creates a {@code StorageManager} with the given {@code GameBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"    public StorageManager(GameBookStorage gameBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameBookStorage \u003d gameBookStorage;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"shaliniseshadri"},"content":"    public Path getGameBookFilePath() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"shaliniseshadri"},"content":"        return gameBookStorage.getGameBookFilePath();","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"    public Optional\u003cReadOnlyGameBook\u003e readGameBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"        return readGameBook(gameBookStorage.getGameBookFilePath());","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"shaliniseshadri"},"content":"    public Optional\u003cReadOnlyGameBook\u003e readGameBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"        return gameBookStorage.readGameBook(filePath);","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"shaliniseshadri"},"content":"    public void saveGameBook(ReadOnlyGameBook gameBook) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"shaliniseshadri"},"content":"        saveGameBook(gameBook, gameBookStorage.getGameBookFilePath());","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"    public void saveGameBook(ReadOnlyGameBook gameBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"        gameBookStorage.saveGameBook(gameBook, filePath);","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":6,"shaliniseshadri":15,"-":58}},{"path":"src/main/java/seedu/gamebook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":" * Represents a storage for {@link seedu.gamebook.model.UserPrefs}.","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"     * Saves the given {@link seedu.gamebook.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BenjaminLHR":6,"-":30}},{"path":"src/main/java/seedu/gamebook/ui/ClearWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.ClearCommand.COMMAND_CONFIRMATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.ClearCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":" * Controller for a clear data confirmation page","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"public class ClearWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    public static final String CLEAR_MESSAGE \u003d \"Are you sure you want to clear all game entries?\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ClearWindow.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    private static final String FXML \u003d \"ClearWindow.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    private Button clearButton;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    private Label clearMessage;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"     * Creates a new ClearWindow.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"     * @param root Stage to use as the root of the ClearWindow.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"    public ClearWindow(Stage root, MainWindow mainWindow) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"        clearMessage.setText(CLEAR_MESSAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"     * Creates a new ClearWindow.","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"    public ClearWindow(MainWindow mainWindow) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"        this(new Stage(), mainWindow);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"     * Shows the clear game entry confirmation window.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"     *                                       if this method is called on a thread other than the JavaFX Application","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"     *                                       Thread.","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"     *                                       if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"     *                                       if this method is called on the primary stage.","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"     *                                   \u003cli\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"     *                                       if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"     *                                   \u003c/li\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    public void show() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"        logger.fine(\"Showing clear data confirmation pop up.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"     * Returns true if the clear window is currently being shown.","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"     * Hides the clear window.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"    public void hide() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"chingh20"},"content":"     * Focuses on the clear window.","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"    public void focus() {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"chingh20"},"content":"     * Clears user\u0027s data by passing a clear data confirmation command to logic.","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"    private void clearData() {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"            mainWindow.executeCommand(COMMAND_WORD + \" \" + COMMAND_CONFIRMATION);","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"            mainWindow.updateGraph();","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"chingh20"},"content":"            this.hide();","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"chingh20"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminLHR":4,"chingh20":107}},{"path":"src/main/java/seedu/gamebook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"         * @see seedu.gamebook.logic.Logic#execute(String)","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"BenjaminLHR":5,"-":79}},{"path":"src/main/java/seedu/gamebook/ui/CommandNoteCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":" * An UI component that displays information of a {@code GameEntry}.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"public class CommandNoteCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"    private static final String FXML \u003d \"CommandNoteCard.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"    private final Command command;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    private HBox commandNoteCardPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    private Label commandWord;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    private Label commandUsage;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"     * Creates a {@code GameEntryCode} with the given {@code GameEntry} and index to display.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"    public CommandNoteCard(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"        commandWord.setText(command.getCommandWord());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"        commandUsage.setText(command.getCommandSummary());","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"        if (!(other instanceof CommandNoteCard)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        CommandNoteCard card \u003d (CommandNoteCard) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        return commandWord.getText().equals(card.commandWord.getText());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminLHR":2,"chingh20":58}},{"path":"src/main/java/seedu/gamebook/ui/CommandNoteListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":" * Panel containing the list of command notes.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"public class CommandNoteListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"    private static final String FXML \u003d \"CommandNoteListPanel.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CommandNoteListPanel.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"    private ListView\u003cCommand\u003e commandNoteListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"     * Creates a {@code CommandNoteListPanel}.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"    public CommandNoteListPanel() {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"        commandNoteListView.setItems(Command.COMMAND_OBSERVABLE_LIST);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"        commandNoteListView.setCellFactory(listView -\u003e new CommandNoteListViewCell());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code GameEntry} using a {@code GameEntryCard}.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    private class CommandNoteListViewCell extends ListCell\u003cCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"        protected void updateItem(Command command, boolean empty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"            super.updateItem(command, empty);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"            if (empty || command \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"                setText(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"                setGraphic(new CommandNoteCard(command).getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminLHR":3,"chingh20":45}},{"path":"src/main/java/seedu/gamebook/ui/GameEntryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":" * A UI component that displays information of a {@code GameEntry}.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String FXML \u003d \"GameEntryListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    public final GameEntry gameEntry;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    private Label gameType;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    private Label id;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"    private Label profit;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"    private Label date;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"    private Label durationMinutes;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"    private Label gameLocation;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"     * Creates a {@code GameEntryCode} with the given {@code GameEntry} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"    public GameEntryCard(GameEntry gameEntry, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"        this.gameEntry \u003d gameEntry;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        String formattedProfit \u003d gameEntry.getEndAmount()","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"                .minus(gameEntry.getStartAmount())","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"                .addCurrencySymbol(\"$\");","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        profit.setText(formattedProfit);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        gameType.setText(gameEntry.getGameType().toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"        date.setText(gameEntry.getDate().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        Duration duration \u003d gameEntry.getDuration();","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"        String durationStringRepresentation \u003d replaceEmptyString(duration.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"        durationMinutes.setText(\"Played for: \" + durationStringRepresentation);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        String locationStringRepresentation \u003d replaceEmptyString(gameEntry.getLocation().toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        gameLocation.setText(\"Location: \" + locationStringRepresentation);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntry.getTags().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    private static String replaceEmptyString(String inputString) {","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        return inputString.equals(\"\") ? \"unspecified\" : inputString;","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"        if (!(other instanceof GameEntryCard)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryCard card \u003d (GameEntryCard) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"BenjaminLHR"},"content":"        return date.getText().equals(card.date.getText())","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"BenjaminLHR"},"content":"                \u0026\u0026 gameEntry.equals(card.gameEntry);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"BenjaminLHR":76,"yzhilong":13,"chingh20":2}},{"path":"src/main/java/seedu/gamebook/ui/GameEntryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":" * Panel containing the list of game entries.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String FXML \u003d \"GameEntryListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GameEntryListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private ListView\u003cGameEntry\u003e gameEntryListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"     * Creates a {@code GameEntryListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"    public GameEntryListPanel(ObservableList\u003cGameEntry\u003e gameEntryList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryListView.setItems(gameEntryList);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryListView.setCellFactory(listView -\u003e new GameEntryListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code GameEntry} using a {@code GameEntryCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    class GameEntryListViewCell extends ListCell\u003cGameEntry\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"        protected void updateItem(GameEntry gameEntry, boolean empty) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"            super.updateItem(gameEntry, empty);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"            if (empty || gameEntry \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"                setText(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"                setGraphic(new GameEntryCard(gameEntry, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"BenjaminLHR":49}},{"path":"src/main/java/seedu/gamebook/ui/GraphPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.stats.Average;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"public class GraphPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"    private static final String FXML \u003d \"GraphPanel.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"    private LineChart\u003cString, Number\u003e lineChart;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"    private ObservableList\u003cGameEntry\u003e gameEntryList;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"    private XYChart.Series\u003cString, Number\u003e series;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"    private TreeMap\u003cString, Double\u003e averageProfits \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"     * Constructor used to initialise the GraphPanel and a given GameEntry List","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"     * @param gameEntryList","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"    public GraphPanel(ObservableList\u003cGameEntry\u003e gameEntryList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"        requireNonNull(gameEntryList);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"        lineChart.setTitle(String.format(\"Average Profit per Date over the Latest %s Dates\",","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"                ModelManager.NUMBER_OF_DATES_TO_PLOT));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"        series \u003d new XYChart.Series\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"        series.setName(\"Average Profit per Date\");","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"        lineChart.setAnimated(false);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameEntryList \u003d gameEntryList;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"     * Resets the series and panel, and draws a graph of the latest k dates using the provided TreeMap","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"     * @param k The number of dates to be plotted.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"    public void drawGraphOfLatestKDates(int k) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"        assert k \u003e\u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"        averageProfits \u003d Average.getAverageData(gameEntryList);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"        lineChart.getData().clear();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"        lineChart.getData().add(series);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"shaliniseshadri"},"content":"        series.getData().clear();","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"        int averageProfitsSize \u003d averageProfits.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"        int startIndex \u003d averageProfitsSize - k + 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"        for (Map.Entry\u003cString, Double\u003e entry : averageProfits.entrySet()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"            if (counter \u003c startIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"                counter++;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"                continue;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"shaliniseshadri"},"content":"            series.getData().add(new XYChart.Data\u003c\u003e(entry.getKey(), entry.getValue()));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"            counter++;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"shaliniseshadri"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"shaliniseshadri"},"content":"     * Resets the value of the gameList after every command and calls draw graph","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"shaliniseshadri"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"shaliniseshadri"},"content":"     * @param gameList","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"shaliniseshadri"},"content":"    public void updateGameEntryList(ObservableList\u003cGameEntry\u003e gameList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"shaliniseshadri"},"content":"        requireNonNull(gameList);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameEntryList \u003d gameList;","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"        this.drawGraphOfLatestKDates(ModelManager.NUMBER_OF_DATES_TO_PLOT);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"BenjaminLHR":20,"shaliniseshadri":59}},{"path":"src/main/java/seedu/gamebook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.Logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntryListPanel gameEntryListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"    private GraphPanel graphPanel;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"    private StatsPanel statsPanel;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"    private ClearWindow clearWindow;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"    private CommandNoteListPanel commandNoteListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"    private StackPane gameEntryListPanelPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"    private StackPane graphPanelPlaceholder;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"shaliniseshadri"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"shaliniseshadri"},"content":"    private StackPane statsPanelPlaceholder;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"    private StackPane commandNoteListPanelPlaceholder;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"    private VBox gameEntryList;","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"    private VBox commandNoteList;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"        clearWindow \u003d new ClearWindow(this);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"BenjaminLHR"},"content":"        initializeGameEntryListPanel();","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"BenjaminLHR"},"content":"        initializeCommandNoteListPanel();","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"BenjaminLHR"},"content":"        fillResultDisplay();","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"BenjaminLHR"},"content":"        fillStatusBarFooter();","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"BenjaminLHR"},"content":"        fillCommandBox();","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"BenjaminLHR"},"content":"        fillGraphPanel();","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"BenjaminLHR"},"content":"        fillStatsPanel();","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"BenjaminLHR"},"content":"    private void initializeGameEntryListPanel() {","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryListPanel \u003d new GameEntryListPanel(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryListPanelPlaceholder.getChildren().add(gameEntryListPanel.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"chingh20"},"content":"        gameEntryList.setVisible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"        gameEntryList.managedProperty().bind(gameEntryList.visibleProperty());","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"BenjaminLHR"},"content":"    private void initializeCommandNoteListPanel() {","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"chingh20"},"content":"        commandNoteListPanel \u003d new CommandNoteListPanel();","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"chingh20"},"content":"        commandNoteListPanelPlaceholder.getChildren().add(commandNoteListPanel.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"chingh20"},"content":"        commandNoteList.setVisible(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"chingh20"},"content":"        commandNoteList.managedProperty().bind(commandNoteList.visibleProperty());","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"BenjaminLHR"},"content":"    private void fillResultDisplay() {","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"BenjaminLHR"},"content":"    private void fillStatusBarFooter() {","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"BenjaminLHR"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getGameBookFilePath());","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":167,"author":{"gitId":"BenjaminLHR"},"content":"    private void fillCommandBox() {","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"BenjaminLHR"},"content":"    private void fillGraphPanel() {","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"shaliniseshadri"},"content":"        graphPanel \u003d new GraphPanel(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"shaliniseshadri"},"content":"        graphPanelPlaceholder.getChildren().add(graphPanel.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"BenjaminLHR"},"content":"        graphPanel.drawGraphOfLatestKDates(ModelManager.NUMBER_OF_DATES_TO_PLOT);","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"BenjaminLHR"},"content":"    private void fillStatsPanel() {","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"shaliniseshadri"},"content":"        statsPanel \u003d new StatsPanel(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"shaliniseshadri"},"content":"        statsPanelPlaceholder.getChildren().add(statsPanel.getRoot());","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"shaliniseshadri"},"content":"        statsPanel.getStats();","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":201,"author":{"gitId":"chingh20"},"content":"        gameEntryList.setVisible(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"chingh20"},"content":"        commandNoteList.setVisible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"chingh20"},"content":"        resultDisplay.setFeedbackToUser(HelpCommand.SHOWING_HELP_MESSAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":218,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":222,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"chingh20"},"content":"     * Opens the clear data window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"chingh20"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"chingh20"},"content":"    private void handleClear() {","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"chingh20"},"content":"        if (!clearWindow.isShowing()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"chingh20"},"content":"            clearWindow.show();","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"chingh20"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"chingh20"},"content":"            clearWindow.focus();","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"chingh20"},"content":"        resultDisplay.setFeedbackToUser(\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"chingh20"},"content":"     * Updates the graphPanel with recent changes to GameEntryList.","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"chingh20"},"content":"     * */","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"chingh20"},"content":"    public void updateGraph() {","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"chingh20"},"content":"        graphPanel.updateGameEntryList(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"BenjaminLHR"},"content":"    public GameEntryListPanel getGameEntryListPanel() {","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"BenjaminLHR"},"content":"        return gameEntryListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"BenjaminLHR"},"content":"     * @see seedu.gamebook.logic.Logic#execute(String)","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"chingh20"},"content":"    public CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"chingh20"},"content":"            if (!commandResult.isShowHelp()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"chingh20"},"content":"                gameEntryList.setVisible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"chingh20"},"content":"                commandNoteList.setVisible(false);","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"chingh20"},"content":"                gameEntryList.setVisible(false);","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"chingh20"},"content":"                commandNoteList.setVisible(true);","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"chingh20"},"content":"            if (commandResult.isClear()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"chingh20"},"content":"                handleClear();","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"shaliniseshadri"},"content":"            statsPanel.updateStats(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"shaliniseshadri"},"content":"            graphPanel.updateGameEntryList(logic.getFilteredGameEntryList());","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BenjaminLHR":39,"shaliniseshadri":18,"-":173,"chingh20":51}},{"path":"src/main/java/seedu/gamebook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BenjaminLHR":1,"-":27}},{"path":"src/main/java/seedu/gamebook/ui/StatsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.stats.Average;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.stats.Median;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"shaliniseshadri"},"content":"public class StatsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"    private static final String FXML \u003d \"StatsPanel.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"    private ObservableList\u003cGameEntry\u003e gameEntryList;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"    private Label mean;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"    private Label median;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"     * Constructor used to initialise a StatsPanel using a given GameEntry list","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"     * @param gameEntries","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"    public StatsPanel(ObservableList\u003cGameEntry\u003e gameEntries) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"        super(FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameEntryList \u003d gameEntries;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"    public void getStats() {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"        this.mean.setText(String.format(\"%.2f\", Average.getOverallAverage(gameEntryList)));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"        this.median.setText(String.format(\"%.2f\", Median.getOverallMedian(gameEntryList)));","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"     * Clears the existing values for the statistics, re-initialises the GameEntry list and recalculates the statistics","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"     * @param gameEntries","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"    public void updateStats(ObservableList\u003cGameEntry\u003e gameEntries) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"        this.gameEntryList \u003d gameEntries;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"        this.getStats();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"shaliniseshadri"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"BenjaminLHR":4,"shaliniseshadri":41}},{"path":"src/main/java/seedu/gamebook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":27}},{"path":"src/main/java/seedu/gamebook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BenjaminLHR":1,"-":12}},{"path":"src/main/java/seedu/gamebook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.MainApp;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.Logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/gamebook_icon.png\";","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BenjaminLHR":6,"-":83}},{"path":"src/main/java/seedu/gamebook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.MainApp;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BenjaminLHR":2,"-":86}},{"path":"src/main/resources/view/ClearWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Clear\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"\u003cscene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"        \u003cstylesheets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"            \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"            \u003cURL value\u003d\"@ClearWindow.css\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"        \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"                \u003cLabel fx:id\u003d\"clearMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"                        \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"                \u003cButton fx:id\u003d\"clearButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#clearData\" text\u003d\"Clear\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"                        \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"                \u003c/Button\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"\u003c/scene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"chingh20":41}},{"path":"src/main/resources/view/CommandNoteCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"\u003cHBox id\u003d\"commandNoteCardPane\" fx:id\u003d\"commandNoteCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"                \u003cLabel fx:id\u003d\"commandWord\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" \u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"            \u003cLabel fx:id\u003d\"commandUsage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$commandUsage\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"chingh20":33}},{"path":"src/main/resources/view/CommandNoteListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"    \u003cListView fx:id\u003d\"commandNoteListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"chingh20":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"BenjaminLHR"},"content":"#filterField, #gameEntryListPanel, #gameEntryWebpage {","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"BenjaminLHR":1,"-":351}},{"path":"src/main/resources/view/GameEntryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"        \u003cLabel fx:id\u003d\"gameType\" text\u003d\"\\$gameType\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"      \u003cLabel fx:id\u003d\"profit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$profit\" alignment\u003d\"TOP_RIGHT\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"      \u003cLabel fx:id\u003d\"durationMinutes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$durationMinutes\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"      \u003cLabel fx:id\u003d\"gameLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gameLocation\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":5,"-":32,"chingh20":1}},{"path":"src/main/resources/view/GameEntryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"  \u003cListView fx:id\u003d\"gameEntryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":7}},{"path":"src/main/resources/view/GraphPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":".chart-title {","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":".axis-label {","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    -fx-text-fill: #d9d9d9;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"BenjaminLHR":7}},{"path":"src/main/resources/view/GraphPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"\u003c?import javafx.scene.chart.CategoryAxis?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"\u003c?import javafx.scene.chart.LineChart?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"\u003c?import javafx.scene.chart.NumberAxis?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"chingh20"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"\u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"\u003cAnchorPane stylesheets\u003d\"@GraphPanel.css\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"      \u003cLineChart fx:id\u003d\"lineChart\" prefHeight\u003d\"400.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"        \u003cxAxis\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"          \u003cCategoryAxis label\u003d\"Date Played\" tickLabelFill\u003d\"#d9d9d9\" tickLabelGap\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"        \u003c/xAxis\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"        \u003cyAxis\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"          \u003cNumberAxis label\u003d\"Profit\" side\u003d\"LEFT\" tickLabelFill\u003d\"#d9d9d9\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"        \u003c/yAxis\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"      \u003c/LineChart\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"BenjaminLHR":8,"shaliniseshadri":11,"chingh20":4}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"GameBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    \u003cImage url\u003d\"@/images/gamebook_icon.png\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"26.0\" prefWidth\u003d\"494.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"110.0\" prefHeight\u003d\"60.0\" prefWidth\u003d\"494.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"          \u003citems\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"            \u003cVBox fx:id\u003d\"gameEntryList\" styleClass\u003d\"pane-with-border\"  minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"                \u003cInsets top\u003d\"10\"  bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"              \u003cStackPane fx:id\u003d\"gameEntryListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"            \u003cVBox fx:id\u003d\"commandNoteList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"                \u003cInsets top\u003d\"10\"  bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"              \u003cStackPane fx:id\u003d\"commandNoteListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"                  \u003cVBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"shaliniseshadri"},"content":"                        \u003cSplitPane mouseTransparent\u003d\"true\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" prefWidth\u003d\"160.0\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"shaliniseshadri"},"content":"                          \u003citems\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"shaliniseshadri"},"content":"                              \u003cVBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"shaliniseshadri"},"content":"                                 \u003cchildren\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"shaliniseshadri"},"content":"                              \u003cStackPane fx:id\u003d\"graphPanelPlaceholder\" mouseTransparent\u003d\"true\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"                                   \u003cStackPane fx:id\u003d\"statsPanelPlaceholder\" mouseTransparent\u003d\"true\"  prefWidth\u003d\"160.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"                                 \u003c/children\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"shaliniseshadri"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"                          \u003c/items\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"shaliniseshadri"},"content":"                        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"shaliniseshadri"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"          \u003c/items\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"BenjaminLHR":4,"shaliniseshadri":17,"-":50,"chingh20":15}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"chingh20"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":8,"chingh20":1}},{"path":"src/main/resources/view/StatsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"shaliniseshadri"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"\u003cHBox alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"shaliniseshadri"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"shaliniseshadri"},"content":"      \u003cGridPane alignment\u003d\"CENTER\"  prefHeight\u003d\"361.0\" prefWidth\u003d\"667.0\" vgap\u003d\"20.0\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"shaliniseshadri"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"shaliniseshadri"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"shaliniseshadri"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"shaliniseshadri"},"content":"          \u003cRowConstraints maxHeight\u003d\"99.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"99.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"shaliniseshadri"},"content":"          \u003cRowConstraints maxHeight\u003d\"192.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"103.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"shaliniseshadri"},"content":"          \u003cRowConstraints maxHeight\u003d\"266.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"99.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Statistics\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Value\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Mean\" textFill\u003d\"WHITE\" GridPane.halignment\u003d\"CENTER\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" text\u003d\"Median\" textFill\u003d\"WHITE\" GridPane.halignment\u003d\"CENTER\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" fx:id\u003d\"mean\" layoutX\u003d\"310.0\" layoutY\u003d\"335.0\" text\u003d\"\\$mean\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cLabel style\u003d\"-fx-text-fill: white;\" fx:id\u003d\"median\" text\u003d\"\\$median\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"shaliniseshadri"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"shaliniseshadri"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"shaliniseshadri"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"shaliniseshadri"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"BenjaminLHR":1,"shaliniseshadri":38}},{"path":"src/test/java/seedu/gamebook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"BenjaminLHR":1,"-":57}},{"path":"src/test/java/seedu/gamebook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"BenjaminLHR":1,"-":26}},{"path":"src/test/java/seedu/gamebook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":2,"-":133}},{"path":"src/test/java/seedu/gamebook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.core.index;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BenjaminLHR":2,"-":58}},{"path":"src/test/java/seedu/gamebook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"        assertNotNull(AppUtil.getImage(\"/images/gamebook_icon.png\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"BenjaminLHR":3,"-":33}},{"path":"src/test/java/seedu/gamebook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"BenjaminLHR":3,"-":105}},{"path":"src/test/java/seedu/gamebook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.Config;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BenjaminLHR":4,"-":112}},{"path":"src/test/java/seedu/gamebook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":2,"-":21}},{"path":"src/test/java/seedu/gamebook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.TestUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":3,"-":42}},{"path":"src/test/java/seedu/gamebook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.commons.util;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"BenjaminLHR":2,"-":141}},{"path":"src/test/java/seedu/gamebook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"import seedu.gamebook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.JsonGameBookStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.storage.StorageManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"    private static final String GAMETYPE_VALID_WITH_PREFIX \u003d \" \" + PREFIX_GAMETYPE + \"Poker\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"    private static final String STARTAMOUNT_VALID_WITH_PREFIX \u003d \" \" + PREFIX_STARTAMOUNT + \"0.0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"    private static final String ENDAMOUNT_VALID_WITH_PREFIX \u003d \" \" + PREFIX_ENDAMOUNT + \"100.0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    private static final String DATE_VALID_WITH_PREFIX \u003d \" \" + PREFIX_DATE + \"01/01/21 10:00\";","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    private static final String DURATION_VALID_WITH_PREFIX \u003d \" \" + PREFIX_DURATION + \"10\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"    private static final String LOCATION_VALID_WITH_PREFIX \u003d \" \" + PREFIX_LOCATION + \"Sentosa\";","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"    private static final String TAG_VALID_WITH_PREFIX \u003d \" \" + PREFIX_TAG + \"lucky\";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"        JsonGameBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"                new JsonGameBookStorage(temporaryFolder.resolve(\"GameBook.json\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"            DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"        JsonGameBookStorage gameBookStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"                new JsonGameBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionGameBook.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"        StorageManager storage \u003d new StorageManager(gameBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + GAMETYPE_VALID_WITH_PREFIX + STARTAMOUNT_VALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"                + ENDAMOUNT_VALID_WITH_PREFIX + DATE_VALID_WITH_PREFIX + DURATION_VALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"                + LOCATION_VALID_WITH_PREFIX;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"        GameEntry expectedGameEntry \u003d new GameEntryBuilder().withTags().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"chingh20"},"content":"        expectedModel.addGameEntry(expectedGameEntry);","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"        // TODO fix this after changing GameEntryBuilder","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"        // assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"    public void getFilteredGameEntryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"chingh20"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGameEntryList().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"        Model expectedModel \u003d new ModelManager(model.getGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"chingh20"},"content":"    private static class JsonGameBookIoExceptionThrowingStub extends JsonGameBookStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"chingh20"},"content":"        private JsonGameBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"chingh20"},"content":"        public void saveGameBook(ReadOnlyGameBook gameBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BenjaminLHR":24,"dannylty":2,"-":122,"chingh20":29}},{"path":"src/test/java/seedu/gamebook/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        model \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    public void execute_newGameEntry_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        GameEntry validGameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(model.getGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        expectedModel.addGameEntry(validGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        assertCommandSuccess(new AddCommand(validGameEntry), model,","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validGameEntry, \"\"), expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    //@Test","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    //public void execute_duplicateGameEntry_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    //    GameEntry gameEntryInList \u003d model.getGameBook().getGameEntryList().get(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    //    assertCommandFailure(new AddCommand(gameEntryInList), model, AddCommand.MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    //}","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"BenjaminLHR":9,"dannylty":11,"-":24,"chingh20":1}},{"path":"src/test/java/seedu/gamebook/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    public void constructor_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    public void execute_gameEntryAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        ModelStubAcceptingGameEntryAdded modelStub \u003d new ModelStubAcceptingGameEntryAdded();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        GameEntry validGameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        CommandResult commandResult \u003d new AddCommand(validGameEntry).execute(modelStub);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validGameEntry, \"\"), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        assertEquals(Arrays.asList(validGameEntry), modelStub.gameEntriesAdded);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"    // change if we\u0027re doing duplicate check using exact datetime","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute_duplicateGameEntry_alertsUser() {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntry validGameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"        AddCommand addCommand \u003d new AddCommand(validGameEntry);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"        ModelStub modelStub \u003d new ModelStubWithGameEntry(validGameEntry);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"        CommandResult commandResult \u003d new AddCommand(validGameEntry).execute(modelStub);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validGameEntry, AddCommand.MESSAGE_DUPLICATE_GAME_ENTRY),","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        // Person validPerson \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        // AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        // ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"        // assertThrows(CommandException.class,","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"        // AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"        GameEntry blackjack \u003d new GameEntryBuilder().withGameType(\"Blackjack\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"        GameEntry mahjong \u003d new GameEntryBuilder().withGameType(\"Mahjong\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"        AddCommand addBlackjackCommand \u003d new AddCommand(blackjack);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        AddCommand addMahjongCommand \u003d new AddCommand(mahjong);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"        assertTrue(addBlackjackCommand.equals(addBlackjackCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"        AddCommand addBlackjackCommandCopy \u003d new AddCommand(blackjack);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"        assertTrue(addBlackjackCommand.equals(addBlackjackCommandCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        assertFalse(addBlackjackCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"        assertFalse(addBlackjackCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"        assertFalse(addBlackjackCommand.equals(addMahjongCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"        public Path getGameBookFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"        public void setGameBookFilePath(Path gameBookFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"shaliniseshadri"},"content":"        public void addGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"        public void setGameBook(ReadOnlyGameBook gameBook) {","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"        public ReadOnlyGameBook getGameBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"        public boolean hasGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"        public void deleteGameEntry(GameEntry target) {","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"        public void setGameEntry(GameEntry target, GameEntry editedGameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"        public ObservableList\u003cGameEntry\u003e getFilteredGameEntryList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"        public void updateFilteredGameEntryList(Predicate\u003cGameEntry\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"dannylty"},"content":"     * A Model stub that contains a single game entry.","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"dannylty"},"content":"    private class ModelStubWithGameEntry extends ModelStub {","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"dannylty"},"content":"        private final GameEntry gameEntry;","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"dannylty"},"content":"        ModelStubWithGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"dannylty"},"content":"            requireNonNull(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"dannylty"},"content":"            this.gameEntry \u003d gameEntry;","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"        public boolean hasGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"dannylty"},"content":"            requireNonNull(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"dannylty"},"content":"            return this.gameEntry.isSameGameEntry(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"BenjaminLHR"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"BenjaminLHR"},"content":"        public void addGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"BenjaminLHR"},"content":"            requireNonNull(gameEntry);","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"dannylty"},"content":"    private class ModelStubAcceptingGameEntryAdded extends ModelStub {","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"        final ArrayList\u003cGameEntry\u003e gameEntriesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"dannylty"},"content":"        public boolean hasGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"dannylty"},"content":"            requireNonNull(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"dannylty"},"content":"            return gameEntriesAdded.stream().anyMatch(gameEntry::isSameGameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"dannylty"},"content":"        public void addGameEntry(GameEntry gameEntry) {","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"dannylty"},"content":"            requireNonNull(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"dannylty"},"content":"            gameEntriesAdded.add(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"dannylty"},"content":"        public ReadOnlyGameBook getGameBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"dannylty"},"content":"            return new GameBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"BenjaminLHR":24,"shaliniseshadri":3,"dannylty":49,"-":133,"chingh20":1}},{"path":"src/test/java/seedu/gamebook/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.ClearCommand.COMMAND_CONFIRMATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    public void execute_emptyGameBook_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"        assertCommandSuccess(new ClearCommand(COMMAND_CONFIRMATION), model,","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"            ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    public void execute_nonEmptyGameBook_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        Model model \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        expectedModel.setGameBook(new GameBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"        assertCommandSuccess(new ClearCommand(COMMAND_CONFIRMATION),","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"            model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BenjaminLHR":8,"dannylty":5,"-":18,"chingh20":4}},{"path":"src/test/java/seedu/gamebook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"            false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true,","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"            false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"            true, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"            false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"            true, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"BenjaminLHR":1,"-":48,"chingh20":10}},{"path":"src/test/java/seedu/gamebook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.EditGameEntryDescriptorBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    // TODO - put these into a common util class","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    public static final GameType VALID_GAMETYPE_1 \u003d new GameType(\"Poker\");","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    public static final StartAmount VALID_STARTAMOUNT_1 \u003d new StartAmount(\"0.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    public static final EndAmount VALID_ENDAMOUNT_1 \u003d new EndAmount(\"100.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    public static final DatePlayed VALID_DATE_1 \u003d new DatePlayed(\"2021-01-01 10:00\");","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"    public static final Duration VALID_DURATION_1 \u003d new Duration(\"10\");","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    public static final Location VALID_LOCATION_1 \u003d new Location(\"Sentosa\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    public static final String VALID_TAG_1 \u003d \"lucky\";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    public static final Set\u003cTag\u003e VALID_TAGSET_1 \u003d Tag.parseTagList(VALID_TAG_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    public static final GameType VALID_GAMETYPE_2 \u003d new GameType(\"Black Jack\");","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    public static final StartAmount VALID_STARTAMOUNT_2 \u003d new StartAmount(\"10.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    public static final EndAmount VALID_ENDAMOUNT_2 \u003d new EndAmount(\"200.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    public static final DatePlayed VALID_DATE_2 \u003d new DatePlayed(\"2021-10-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"    public static final Duration VALID_DURATION_2 \u003d new Duration(\"20\");","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    public static final Location VALID_LOCATION_2 \u003d new Location(\"Marina Bay\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"    public static final String VALID_TAG_2 \u003d \"drunk\";","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    public static final Set\u003cTag\u003e VALID_TAGSET_2 \u003d Tag.parseTagList(VALID_TAG_2);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    public static final EditCommand.EditGameEntryDescriptor GAME_ONE \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"            .withGameType(VALID_GAMETYPE_1).withProfit(VALID_ENDAMOUNT_1.minus(VALID_STARTAMOUNT_1))","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"            .withDatePlayed(VALID_DATE_1).withDuration(VALID_DURATION_1).withLocation(VALID_LOCATION_1)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"            .withTags(VALID_TAG_1).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"    public static final EditCommand.EditGameEntryDescriptor GAME_TWO \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"            .withGameType(VALID_GAMETYPE_2).withProfit(VALID_ENDAMOUNT_2.minus(VALID_STARTAMOUNT_2))","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"            .withDatePlayed(VALID_DATE_2).withDuration(VALID_DURATION_2).withLocation(VALID_LOCATION_2)","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"            .withTags(VALID_TAG_2).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"     * - the game book, filtered game entry list and selected game entry in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"        GameBook expectedGameBook \u003d new GameBook(actualModel.getGameBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"        List\u003cGameEntry\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGameEntryList());","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"        assertEquals(expectedGameBook, actualModel.getGameBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredGameEntryList());","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":101,"author":{"gitId":"chingh20"},"content":"     * Updates {@code model}\u0027s filtered list to show only the game entry at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"     * {@code model}\u0027s game book.","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"    public static void showGameEntryAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGameEntryList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"        GameEntry gameEntry \u003d model.getFilteredGameEntryList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        // Use \u003d\u003d here to compare exact object. .equals is less strict.","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredGameEntryList(game -\u003e game \u003d\u003d gameEntry);","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"        assertEquals(1, model.getFilteredGameEntryList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BenjaminLHR":15,"yzhilong":4,"dannylty":25,"-":57,"chingh20":13}},{"path":"src/test/java/seedu/gamebook/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.showGameEntryAtIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_SECOND_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    private Model model \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryToDelete \u003d model.getFilteredGameEntryList().get(INDEX_FIRST_GAMEENTRY.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_GAME_ENTRY_SUCCESS, gameEntryToDelete);","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        expectedModel.deleteGameEntry(gameEntryToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGameEntryList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        assertCommandFailure(deleteCommand, model, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"            DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        showGameEntryAtIndex(model, INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryToDelete \u003d model.getFilteredGameEntryList().get(INDEX_FIRST_GAMEENTRY.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_GAME_ENTRY_SUCCESS, gameEntryToDelete);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(model.getGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"        expectedModel.deleteGameEntry(gameEntryToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"        showNoGameEntry(expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        showGameEntryAtIndex(model, INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GAMEENTRY;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"        // ensures that outOfBoundIndex is still in bounds of gamebook book list","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGameBook().getGameEntryList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"    private void showNoGameEntry(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredGameEntryList(p -\u003e false);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        assertTrue(model.getFilteredGameEntryList().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BenjaminLHR":13,"dannylty":21,"-":70,"chingh20":7}},{"path":"src/test/java/seedu/gamebook/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_ENDAMOUNT_2;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_GAMETYPE_2;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditGameEntryDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.EditGameEntryDescriptorBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    private Model model \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        GameEntry editedGameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder(editedGameEntry).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GAMEENTRY, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GAME_SUCCESS, editedGameEntry, \"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(new GameBook(model.getGameBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"        expectedModel.setGameEntry(model.getFilteredGameEntryList().get(0), editedGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        Index indexLastGameEntry \u003d Index.fromOneBased(model.getFilteredGameEntryList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        GameEntry lastGameEntry \u003d model.getFilteredGameEntryList().get(indexLastGameEntry.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        GameEntryBuilder gameEntryInList \u003d new GameEntryBuilder(lastGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        GameEntry editedGameEntry \u003d gameEntryInList","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"                .withGameType(VALID_GAMETYPE_2.toString())","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"                .withEndAmount(VALID_ENDAMOUNT_2.toString())","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"                .build();","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder(editedGameEntry).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastGameEntry, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GAME_SUCCESS, editedGameEntry, \"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(new GameBook(model.getGameBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"        expectedModel.setGameEntry(lastGameEntry, editedGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"    public void execute_noChangeUnfilteredList_failure() {","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"        GameEntry firstGameEntry \u003d model.getFilteredGameEntryList().get(INDEX_FIRST_GAMEENTRY.getZeroBased());","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GAMEENTRY,","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"                new EditGameEntryDescriptorBuilder(firstGameEntry).build());","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_FIELDS_ARE_IDENTICAL);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"        Predicate\u003cGameEntry\u003e validPredicate \u003d game -\u003e game.getSearchableCorpus().contains(\"Poker\");","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredGameEntryList(validPredicate);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryInFilteredList \u003d model.getFilteredGameEntryList().get(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"        GameEntry editedGameEntry \u003d new GameEntryBuilder(gameEntryInFilteredList)","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"                .withGameType(VALID_GAMETYPE_2.toString()).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GAMEENTRY,","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"                new EditGameEntryDescriptorBuilder().withGameType(VALID_GAMETYPE_2).build());","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_GAME_SUCCESS, editedGameEntry, \"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"        Model expectedModel \u003d new ModelManager(new GameBook(model.getGameBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"        expectedModel.updateFilteredGameEntryList(validPredicate);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"        expectedModel.setGameEntry(model.getFilteredGameEntryList().get(0), editedGameEntry);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"    /*","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"    public void execute_duplicateGameEntryUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"        GameEntry firstGameEntry \u003d model.getFilteredGameEntryList().get(INDEX_FIRST_GAMEENTRY.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder(firstGameEntry).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_GAMEENTRY, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"*/","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"    /*","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"    public void execute_duplicateGameEntryFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"dannylty"},"content":"        showGameEntryAtIndex(model, INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"BenjaminLHR"},"content":"        // edit game entry in filtered list into a duplicate in gamebook book","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"        GameEntry gameEntryInList \u003d model.getGameBook().getGameEntryList().get(INDEX_SECOND_GAMEENTRY.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_GAMEENTRY,","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"                new EditGameEntryDescriptorBuilder(gameEntryInList).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_GAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"dannylty"},"content":"*/","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"dannylty"},"content":"    public void execute_invalidGameEntryIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGameEntryList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"                .withGameType(VALID_GAMETYPE_2).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"dannylty"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"BenjaminLHR"},"content":"     * but smaller than size of gamebook book","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"    public void execute_invalidGameEntryIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"        Predicate\u003cGameEntry\u003e validPredicate \u003d game -\u003e game.getSearchableCorpus().contains(\"Darts\");","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"        model.updateFilteredGameEntryList(validPredicate);","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGameEntryList().size() + 1);","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"BenjaminLHR"},"content":"        // ensures that outOfBoundIndex is still in bounds of gamebook book list","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGameBook().getGameEntryList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"                new EditGameEntryDescriptorBuilder().withGameType(VALID_GAMETYPE_2).build());","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"dannylty"},"content":"    /*","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_GAMEENTRY, DESC_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"dannylty"},"content":"        EditGameEntryDescriptor copyDescriptor \u003d new EditGameEntryDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"dannylty"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_GAMEENTRY, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"dannylty"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_GAMEENTRY, DESC_AMY)));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"dannylty"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_GAMEENTRY, DESC_BOB)));","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"dannylty"},"content":"*/","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"BenjaminLHR":14,"dannylty":90,"-":77,"chingh20":1}},{"path":"src/test/java/seedu/gamebook/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"/*","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"        // different gamebook -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"*/","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":10,"dannylty":2,"-":47}},{"path":"src/test/java/seedu/gamebook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"            true, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BenjaminLHR":5,"-":14,"chingh20":2}},{"path":"src/test/java/seedu/gamebook/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"/* package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"/*","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"*/","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"BenjaminLHR":11,"dannylty":6,"-":72}},{"path":"src/test/java/seedu/gamebook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"BenjaminLHR":5,"-":14,"chingh20":1}},{"path":"src/test/java/seedu/gamebook/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.commands.CommandTestUtil.showGameEntryAtIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        model \u003d new ModelManager(getTypicalGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        expectedModel \u003d new ModelManager(model.getGameBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        showGameEntryAtIndex(model, INDEX_FIRST_GAMEENTRY);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"BenjaminLHR":8,"yzhilong":1,"dannylty":2,"-":28}},{"path":"src/test/java/seedu/gamebook/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ArgumentTokenizer.MESSAGE_DUPLICATE_FLAGS;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.DATE_INVALID_WITH_PREFIX;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.DURATION_INVALID_WITH_PREFIX;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.ENDAMOUNT_INVALID_WITH_PREFIX;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.GAMEONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.GAMETWO;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.STARTAMOUNT_INVALID_WITH_PREFIX;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_DATE_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_DURATION_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_ENDAMOUNT_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_GAMETYPE_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_LOCATION_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_STARTAMOUNT_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_TAGSET_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"// import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_TAG_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"// import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_TAG_2;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserUtil.MESSAGE_INVALID_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserUtil.MESSAGE_INVALID_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserUtil.MESSAGE_INVALID_END_AMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserUtil.MESSAGE_INVALID_START_AMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"// import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"// import seedu.gamebook.model.gameentry.Amount;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    private static final GameEntry GAME_1 \u003d new GameEntry(VALID_GAMETYPE_1, VALID_STARTAMOUNT_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        VALID_ENDAMOUNT_1, VALID_DATE_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"        VALID_DURATION_1, VALID_LOCATION_1, VALID_TAGSET_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"        assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.startAmountWithPrefix + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, new AddCommand(GAME_1));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"    public void parse_duplicateFields_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        // TODO - multiple tags","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"        // multiple gameTypes","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMETWO.gameTypeWithPrefix + GAMEONE.gameTypeWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.startAmountWithPrefix + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"        // multiple startAmount","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMETWO.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.startAmountWithPrefix + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        // multiple endAmount","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"                + GAMETWO.endAmountWithPrefix + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMETWO.dateWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"        // multiple duration","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMETWO.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"        // multiple location","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"chingh20"},"content":"                + GAMETWO.locationWithPrefix + GAMEONE.locationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"                + GAMETWO.tagWithPrefix, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"            GameEntry expectedGameEntryNoTags \u003d new GameEntryBuilder(GAME_1).withTags().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"            assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"chingh20"},"content":"                    + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"                    + GAMEONE.locationWithPrefix, new AddCommand(expectedGameEntryNoTags));","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"chingh20"},"content":"            // no startAmount","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"chingh20"},"content":"            GameEntry expectedGameEntryNoStartAmount \u003d new GameEntryBuilder(GAME_1).withStartAmount(\"\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"            assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.endAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"                    + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix + GAMEONE.tagWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"chingh20"},"content":"                    + GAMEONE.locationWithPrefix, new AddCommand(expectedGameEntryNoStartAmount));","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"chingh20"},"content":"            // no date","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"chingh20"},"content":"            GameEntry expectedGameEntryNoDate \u003d new GameEntryBuilder(GAME_1).withDatePlayed(\"\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"chingh20"},"content":"            assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"                    + GAMEONE.endAmountWithPrefix + GAMEONE.durationWithPrefix + GAMEONE.tagWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"chingh20"},"content":"                    + GAMEONE.locationWithPrefix, new AddCommand(expectedGameEntryNoDate));","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"chingh20"},"content":"            // no duration","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"chingh20"},"content":"            GameEntry expectedGameEntryNoDuration \u003d new GameEntryBuilder(GAME_1).withDuration(\"\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"chingh20"},"content":"            assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.tagWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix, new AddCommand(expectedGameEntryNoDuration));","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"chingh20"},"content":"            // no location","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"chingh20"},"content":"            GameEntry expectedGameEntryNoLocation \u003d new GameEntryBuilder(GAME_1).withLocation(\"\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"chingh20"},"content":"            assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"dannylty"},"content":"                    + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"                    + GAMEONE.tagWithPrefix, new AddCommand(expectedGameEntryNoLocation));","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"chingh20"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"dannylty"},"content":"     * Parser does not have knowledge about which fields are compulsory. Checking","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"dannylty"},"content":"     * for field validity should be done within GameEntry constructor tests.","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"dannylty"},"content":"     * Currently we don\u0027t have a way to test for this. KIV for 1.4.","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"    public void parse_compulsoryFieldsMissing_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"chingh20"},"content":"        // missing gameType prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"        // assertParseSuccess(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"        //                 + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"        //                 + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"chingh20"},"content":"        // missing endAmount prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"        // assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"        //                 + VALID_ENDAMOUNT_1 + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"        //                 + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"        // assertParseFailure(parser, VALID_GAMETYPE_1.toString() + VALID_STARTAMOUNT_1 + VALID_ENDAMOUNT_1","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"dannylty"},"content":"        //     + VALID_DATE_1 + VALID_DURATION_1 + VALID_LOCATION_1 + VALID_TAG_1, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"chingh20"},"content":"        // invalid startAmount","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + STARTAMOUNT_INVALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, MESSAGE_INVALID_START_AMOUNT);","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"chingh20"},"content":"        // invalid endAmount","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"chingh20"},"content":"                + ENDAMOUNT_INVALID_WITH_PREFIX + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, MESSAGE_INVALID_END_AMOUNT);","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"chingh20"},"content":"        // invalid date","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + DATE_INVALID_WITH_PREFIX + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"chingh20"},"content":"        // invalid duration","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + GAMEONE.startAmountWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + DURATION_INVALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, MESSAGE_INVALID_DURATION);","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix + STARTAMOUNT_INVALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix + DURATION_INVALID_WITH_PREFIX","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix, MESSAGE_INVALID_START_AMOUNT);","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GAMEONE.gameTypeWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"chingh20"},"content":"                        + GAMEONE.startAmountWithPrefix + GAMEONE.endAmountWithPrefix + GAMEONE.dateWithPrefix","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"chingh20"},"content":"                        + GAMEONE.durationWithPrefix + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix,","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"BenjaminLHR":31,"dannylty":53,"-":29,"chingh20":81}},{"path":"src/test/java/seedu/gamebook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.TokenizerException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        String argsString \u003d \"  some random string with leading and trailing spaces \";","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    public void tokenize_invalidPrefix_throwsTokenizerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        String argsString1 \u003d \"some random string /invalid with no prefixes\";","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString1));","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"        String argsString2 \u003d \"preemble /valid value /invalid value\";","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString2, new Prefix(\"/valid\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"        String argsString3 \u003d \"preemble /valid /invalid value\";","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString3, new Prefix(\"/valid\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"        String argsString4 \u003d \"preemble /valid value /invalid\";","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString4, new Prefix(\"/valid\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"        String argsString5 \u003d \"preemble /valid /invalid\";","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString5, new Prefix(\"/valid\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"        String argsString6 \u003d \"preemble /valid value /invalid value /valid2 value\";","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e ArgumentTokenizer.tokenize(argsString6,","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"                new Prefix(\"/valid\"), new Prefix(\"/valid2\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/ pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q 111 -t dashT-Value p/ pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"dannylty"},"content":"    public void tokenize_duplicateArguments_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"        assertThrows(TokenizerException.class, () -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":147,"author":{"gitId":"dannylty"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"dannylty"},"content":"        // assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"dannylty"},"content":"        // assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"        // assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"        // assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"    public void tokenize_duplicateArgumentsJoined_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"dannylty"},"content":"        // assertThrows(TokenizerException.class, () -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"dannylty"},"content":"        //     ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"        // });","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"BenjaminLHR":3,"dannylty":33,"-":143}},{"path":"src/test/java/seedu/gamebook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"        } catch (ParseException | IllegalArgumentException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"BenjaminLHR":3,"dannylty":3,"-":32}},{"path":"src/test/java/seedu/gamebook/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_GAMEENTRY));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"BenjaminLHR":6,"-":25,"chingh20":1}},{"path":"src/test/java/seedu/gamebook/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ArgumentTokenizer.MESSAGE_DUPLICATE_FLAGS;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.GAMEONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.STARTAMOUNT_INVALID_WITH_PREFIX;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.TAG_EMPTY;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_DATE_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_DURATION_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_ENDAMOUNT_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_GAMETYPE_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_LOCATION_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_STARTAMOUNT_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserTestUtil.VALID_TAG_1;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_SECOND_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_THIRD_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditGameEntryDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.EditGameEntryDescriptorBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, GAMEONE.gameTypeWithPrefix, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, \"-5\" + GAMEONE.gameTypeWithPrefix, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"        assertParseFailure(parser, \"0\" + GAMEONE.gameTypeWithPrefix, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"    public void parse_invalidValue_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"        String userInput \u003d targetIndex.getOneBased() + GAMEONE.gameTypeWithPrefix + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"            + GAMEONE.profitWithPrefix + \"randomString\";","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor descriptor;","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"            .withGameType(VALID_GAMETYPE_1)","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"            .build();","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"        // invalid profit and a valid gametype should return an EditCommand with a valid game type and empty profit","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"        // descriptor","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_SECOND_GAMEENTRY;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        String userInput \u003d targetIndex.getOneBased() + GAMEONE.gameTypeWithPrefix + GAMEONE.profitWithPrefix","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"                + GAMEONE.dateWithPrefix + GAMEONE.durationWithPrefix","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"                + GAMEONE.locationWithPrefix + GAMEONE.tagWithPrefix;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor descriptor;","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"                .withGameType(VALID_GAMETYPE_1)","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"                .withProfit(VALID_ENDAMOUNT_1.minus(VALID_STARTAMOUNT_1))","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"                .withDatePlayed(VALID_DATE_1)","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"                .withDuration(VALID_DURATION_1).withLocation(VALID_LOCATION_1)","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"                .withTags(VALID_TAG_1).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        String userInput \u003d targetIndex.getOneBased() + GAMEONE.profitWithPrefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"                .withProfit(VALID_ENDAMOUNT_1.minus(VALID_STARTAMOUNT_1)).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"chingh20"},"content":"        // gameType","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_THIRD_GAMEENTRY;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"chingh20"},"content":"        String userInput \u003d targetIndex.getOneBased() + GAMEONE.gameTypeWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"            .withGameType(VALID_GAMETYPE_1).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"chingh20"},"content":"        // date","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"chingh20"},"content":"        userInput \u003d targetIndex.getOneBased() + GAMEONE.dateWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder().withDatePlayed(VALID_DATE_1).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"chingh20"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"chingh20"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"chingh20"},"content":"        // duration","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"chingh20"},"content":"        userInput \u003d targetIndex.getOneBased() + GAMEONE.durationWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder().withDuration(VALID_DURATION_1).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"chingh20"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"chingh20"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"chingh20"},"content":"        // location","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"chingh20"},"content":"        userInput \u003d targetIndex.getOneBased() + GAMEONE.locationWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder().withLocation(VALID_LOCATION_1).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"chingh20"},"content":"        userInput \u003d targetIndex.getOneBased() + GAMEONE.tagWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditGameEntryDescriptorBuilder().withTags(VALID_TAG_1).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"dannylty"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"        // TODO","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"dannylty"},"content":"        // assertParseFailure(parser, userInput, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"dannylty"},"content":"        // TODO","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"chingh20"},"content":"        String userInput \u003d targetIndex.getOneBased() + STARTAMOUNT_INVALID_WITH_PREFIX","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"chingh20"},"content":"                + GAMEONE.startAmountWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"        assertParseFailure(parser, userInput, MESSAGE_DUPLICATE_FLAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"chingh20"},"content":"        Index targetIndex \u003d INDEX_THIRD_GAMEENTRY;","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":23,"yzhilong":8,"dannylty":9,"-":78,"chingh20":54}},{"path":"src/test/java/seedu/gamebook/logic/parser/GameBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditGameEntryDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.EditGameEntryDescriptorBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"public class GameBookParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    private final GameBookParser parser \u003d new GameBookParser();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"        GameEntry gameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(GameEntryUtil.getAddCommand(gameEntry));","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"        assertEquals(new AddCommand(gameEntry), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_GAMEENTRY.getOneBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_GAMEENTRY), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"        GameEntry gameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"        EditGameEntryDescriptor descriptor \u003d new EditGameEntryDescriptorBuilder(gameEntry).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"                + INDEX_FIRST_GAMEENTRY.getOneBased() + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"                + GameEntryUtil.getEditGameEntryDescriptorDetails(descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        System.out.println(userInput);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_GAMEENTRY, descriptor), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.INVALID_COMMAND_MESSAGE), ()","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"BenjaminLHR":18,"yzhilong":4,"-":57,"chingh20":13}},{"path":"src/test/java/seedu/gamebook/logic/parser/ParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"public class ParserTestUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    protected static final GameType VALID_GAMETYPE_1 \u003d new GameType(\"Poker\");","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    protected static final StartAmount VALID_STARTAMOUNT_1 \u003d new StartAmount(\"0.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    protected static final EndAmount VALID_ENDAMOUNT_1 \u003d new EndAmount(\"100.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    protected static final DatePlayed VALID_DATE_1 \u003d new DatePlayed(\"2021-01-01 10:00\");","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    protected static final Duration VALID_DURATION_1 \u003d new Duration(\"10\");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"    protected static final Location VALID_LOCATION_1 \u003d new Location(\"Sentosa\");","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    protected static final String VALID_TAG_1 \u003d \"lucky\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    protected static final Set\u003cTag\u003e VALID_TAGSET_1 \u003d Tag.parseTagList(VALID_TAG_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"    protected static final GameType VALID_GAMETYPE_2 \u003d new GameType(\"Black Jack\");","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    protected static final StartAmount VALID_STARTAMOUNT_2 \u003d new StartAmount(\"10.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    protected static final EndAmount VALID_ENDAMOUNT_2 \u003d new EndAmount(\"200.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    protected static final DatePlayed VALID_DATE_2 \u003d new DatePlayed(\"2021-10-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    protected static final Duration VALID_DURATION_2 \u003d new Duration(\"20\");","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    protected static final Location VALID_LOCATION_2 \u003d new Location(\"Marina Bay\");","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    protected static final String VALID_TAG_2 \u003d \"drunk\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    protected static final Set\u003cTag\u003e VALID_TAGSET_2 \u003d Tag.parseTagList(VALID_TAG_2);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    protected static final String STARTAMOUNT_INVALID_WITH_PREFIX \u003d \" \" + PREFIX_STARTAMOUNT + \"abc\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"    protected static final String ENDAMOUNT_INVALID_WITH_PREFIX \u003d \" \" + PREFIX_ENDAMOUNT + \"abc\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    protected static final String PROFIT_INVALID_WITH_PREFIX \u003d \" \" + PREFIX_PROFIT + \"abc\";","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    protected static final String DATE_INVALID_WITH_PREFIX \u003d \" \" + PREFIX_DATE + \"2021-01 10:00\";","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"    protected static final String DURATION_INVALID_WITH_PREFIX \u003d \" \" + PREFIX_DURATION + \"abc\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    protected static final ParserTestUtil GAMEONE \u003d new ParserTestUtil(VALID_GAMETYPE_1, VALID_STARTAMOUNT_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"            VALID_ENDAMOUNT_1, VALID_DATE_1, VALID_DURATION_1, VALID_LOCATION_1, VALID_TAGSET_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"    protected static final ParserTestUtil GAMETWO \u003d new ParserTestUtil(VALID_GAMETYPE_2, VALID_STARTAMOUNT_2,","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"            VALID_ENDAMOUNT_2, VALID_DATE_2, VALID_DURATION_2, VALID_LOCATION_2, VALID_TAGSET_2);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"    protected static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"    protected final String gameTypeWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    protected final String startAmountWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"    protected final String endAmountWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    protected final String profitWithPrefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"    protected final String dateWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"    protected final String durationWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"    protected final String locationWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    protected final String tagWithPrefix;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"    ParserTestUtil(GameType gameType, StartAmount startAmount, EndAmount endAmount, DatePlayed date, Duration duration,","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"                   Location location, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        gameTypeWithPrefix \u003d \" \" + PREFIX_GAMETYPE + \" \" + gameType.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"        startAmountWithPrefix \u003d \" \" + PREFIX_STARTAMOUNT + \" \" + startAmount.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        endAmountWithPrefix \u003d \" \" + PREFIX_ENDAMOUNT + \" \" + endAmount.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        profitWithPrefix \u003d \" \" + PREFIX_PROFIT + \" \" + endAmount.minus(startAmount).toCommandString();","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"        dateWithPrefix \u003d \" \" + PREFIX_DATE + \" \" + date.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"        durationWithPrefix \u003d \" \" + PREFIX_DURATION + duration.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"        locationWithPrefix \u003d \" \" + PREFIX_LOCATION + \" \" + location.toCommandString();","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"        tagWithPrefix \u003d \" \" + PREFIX_TAG + \" \" + Tag.toCommandString(tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"BenjaminLHR":16,"yzhilong":6,"dannylty":32,"chingh20":28}},{"path":"src/test/java/seedu/gamebook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalIndexes.INDEX_FIRST_GAMEENTRY;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"// import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"    private static final String INVALID_STARTAMOUNT \u003d \"abc\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    private static final String INVALID_ENDAMOUNT \u003d \"abc\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    private static final String INVALID_DATE \u003d \"2021-01 10:00\";","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    private static final String INVALID_DURATION \u003d \"abc\";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_GAMETYPE \u003d \"Poker\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_STARTAMOUNT \u003d \"0.0\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_ENDAMOUNT \u003d \"100.0\";","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_DATE \u003d \"2021-01-01 10:00\";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_DURATION \u003d \"10\";","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_LOCATION \u003d \"Sentosa\";","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_TAG_1 \u003d \"lucky\";","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"    private static final String VALID_TAG_2 \u003d \"drunk\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    public void parseIndex_invalidInput_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    public void parseIndex_outOfRangeInput_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    public void parseIndex_validInput_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        assertEquals(INDEX_FIRST_GAMEENTRY, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"        assertEquals(INDEX_FIRST_GAMEENTRY, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"    public void parseGameType_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGameType((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    public void parseGameType_validValueWithoutWhitespace_returnsGameType() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new GameType(VALID_GAMETYPE), ParserUtil.parseGameType(VALID_GAMETYPE));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"    public void parseGameType_validValueWithWhitespace_returnsTrimmedGameType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"        String gameTypeWithWhitespace \u003d WHITESPACE + VALID_GAMETYPE + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new GameType(VALID_GAMETYPE), ParserUtil.parseGameType(gameTypeWithWhitespace));","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"    public void parseStartAmount_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStartAmount((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"    public void parseStartAmount_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseStartAmount(INVALID_STARTAMOUNT));","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"chingh20"},"content":"    public void parseStartAmount_validValueWithoutWhitespace_returnsStartAmount() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new StartAmount(VALID_STARTAMOUNT), ParserUtil.parseStartAmount(VALID_STARTAMOUNT));","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"    public void parseStartAmount_validValueWithWhitespace_returnsTrimmedStartAmount() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"        String startAmountWithWhitespace \u003d WHITESPACE + VALID_STARTAMOUNT + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new StartAmount(VALID_STARTAMOUNT), ParserUtil.parseStartAmount(startAmountWithWhitespace));","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"    public void parseEndAmount_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEndAmount((String) null));","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"    public void parseEndAmount_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseEndAmount(INVALID_ENDAMOUNT));","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"chingh20"},"content":"    public void parseEndAmount_validValueWithoutWhitespace_returnsEndAmount() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"        assertEquals(new EndAmount(VALID_ENDAMOUNT), ParserUtil.parseEndAmount(VALID_ENDAMOUNT));","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"chingh20"},"content":"    public void parseEndAmount_validValueWithWhitespace_returnsTrimmedEndAmount() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"chingh20"},"content":"        String endAmountWithWhitespace \u003d WHITESPACE + VALID_ENDAMOUNT + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"        assertEquals(new EndAmount(VALID_ENDAMOUNT), ParserUtil.parseEndAmount(endAmountWithWhitespace));","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"chingh20"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"chingh20"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"dannylty"},"content":"    public void parseDate_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"chingh20"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        DatePlayed expectedDate \u003d new DatePlayed(VALID_DATE);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"chingh20"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"chingh20"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"chingh20"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"        DatePlayed expectedDate \u003d new DatePlayed(VALID_DATE);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"chingh20"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"    public void parseDuration_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"chingh20"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDuration((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"dannylty"},"content":"    public void parseDuration_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION));","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"chingh20"},"content":"    public void parseDuration_validValueWithoutWhitespace_returnsDuration() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new Duration(VALID_DURATION), ParserUtil.parseDuration(VALID_DURATION));","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"chingh20"},"content":"    public void parseDuration_validValueWithWhitespace_returnsTrimmedDuration() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"chingh20"},"content":"        String durationWithWhitespace \u003d WHITESPACE + VALID_DURATION + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new Duration(durationWithWhitespace), ParserUtil.parseDuration(durationWithWhitespace));","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"chingh20"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"chingh20"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"chingh20"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"chingh20"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new Location(VALID_LOCATION), ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"chingh20"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"chingh20"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new Location(VALID_LOCATION), ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"dannylty"},"content":"    public void parseTag_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"dannylty"},"content":"        String nullString \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"dannylty"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(nullString));","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"dannylty"},"content":"    public void parseTags_collectionWithInvalidTags_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e ParserUtil","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"dannylty"},"content":"                .parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"BenjaminLHR":12,"yzhilong":12,"dannylty":24,"-":118,"chingh20":65}},{"path":"src/test/java/seedu/gamebook/model/GameBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.POKER1_WITHOUT_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.POKER1_WITH_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"public class GameBookTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    private final GameBook gameBook \u003d new GameBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        assertEquals(Collections.emptyList(), gameBook.getGameEntryList());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameBook.resetData(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    public void resetData_withValidReadOnlyGameBook_replacesData() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        GameBook newData \u003d getTypicalGameBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        gameBook.resetData(newData);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        assertEquals(newData, gameBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameBook.hasGameEntry(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_gameEntryNotInGameBook_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        assertFalse(gameBook.hasGameEntry(POKER1_WITHOUT_TIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_gameEntryWithSameIdentityFieldsInGameBook_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(POKER1_WITH_TIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        GameEntry editedPoker \u003d new GameEntryBuilder(POKER1_WITH_TIME).withStartAmount(\"1321.23\").withDuration(\"31\")","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        assertTrue(gameBook.hasGameEntry(editedPoker));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    public void addGameEntry_gameEntryWithDifferentIdentityFieldsInGameBook_addsGameEntry() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(POKER1_WITH_TIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        GameEntry editedPoker \u003d new GameEntryBuilder(POKER1_WITH_TIME)","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"                .withDatePlayed(\"12/10/21 11:36\")","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"                .withStartAmount(\"1321.12\")","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"                .withEndAmount(\"0.12\")","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"                .withLocation(\"school\")","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"                .withDuration(\"31\")","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(editedPoker);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        assertTrue(gameBook.hasGameEntry(editedPoker));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"    public void getGameEntryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e gameBook.getGameEntryList().remove(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"     * A stub ReadOnlyGameBook whose gameEntries list can violate interface constraints.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"    private static class GameBookStub implements ReadOnlyGameBook {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        private final ObservableList\u003cGameEntry\u003e gameEntries \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        GameBookStub(Collection\u003cGameEntry\u003e persons) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"            this.gameEntries.setAll(persons);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        public ObservableList\u003cGameEntry\u003e getGameEntryList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"            return gameEntries;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"BenjaminLHR":7,"yzhilong":89}},{"path":"src/test/java/seedu/gamebook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.model.Model.PREDICATE_SHOW_ALL_GAME_ENTRIES;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry POKER \u003d new GameEntry(new GameType(\"Poker\"), new StartAmount(100.),","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"            new EndAmount(80.), DatePlayed.empty(), new Duration(10), new Location(\"Marina bay sands\"), new HashSet\u003c\u003e()","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry ROULETTE \u003d new GameEntry(new GameType(\"Roulette\"), new StartAmount(100.),","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            new EndAmount(80.12), DatePlayed.empty(), new Duration(10), new Location(\"Marina Bay Sands\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"            new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        assertEquals(new GameBook(), new GameBook(modelManager.getGameBook()));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"        userPrefs.setGameBookFilePath(Paths.get(\"gamebook/book/file/path\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"        userPrefs.setGameBookFilePath(Paths.get(\"new/gamebook/book/file/path\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    public void setGameBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGameBookFilePath(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"    public void setGameBookFilePath_validPath_setsGameBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"        Path path \u003d Paths.get(\"gamebook/book/file/path\");","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"        modelManager.setGameBookFilePath(path);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        assertEquals(path, modelManager.getGameBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGameEntry(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_gameEntryNotInGameBook_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        assertFalse(modelManager.hasGameEntry(POKER));","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    public void hasGameEntry_gameEntryInBook_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        modelManager.addGameEntry(POKER);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        assertTrue(modelManager.hasGameEntry(POKER));","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"    public void getFilteredGameEntryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGameEntryList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"        GameBook gameBook \u003d new GameBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(POKER);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        gameBook.addGameEntry(ROULETTE);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        GameBook differentGameBook \u003d new GameBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"        modelManager \u003d new ModelManager(gameBook, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(gameBook, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentGameBook, userPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"BenjaminLHR"},"content":"        modelManager.updateFilteredGameEntryList(gameEntry -\u003e gameEntry.getGameType().toString().equals(\"Poker\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"        assertFalse(modelManager.equals(new ModelManager(gameBook, userPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        modelManager.updateFilteredGameEntryList(PREDICATE_SHOW_ALL_GAME_ENTRIES);","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"        differentUserPrefs.setGameBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"        assertFalse(modelManager.equals(new ModelManager(gameBook, differentUserPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"BenjaminLHR":15,"yzhilong":31,"dannylty":2,"-":94}},{"path":"src/test/java/seedu/gamebook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setGameBookFilePath(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":1,"-":18}},{"path":"src/test/java/seedu/gamebook/model/gameentry/AmountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"public class AmountTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        // 3 digits after decimal point","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"12345.123\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"        // Other characters before string","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"e20.34\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"e2034\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        // Other characters after string","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"20.34e\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"2034e\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"        // Other characters within string","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"20.e34\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\"20e34\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        // Only decimal","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(\".\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    public void constructor_validAmount() {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        Amount amount;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"12345\");","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        // With white space","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"      12345\");","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"12345       \");","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"   12345       \");","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        // Negative values","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"-12345\");","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        assertEquals(-12345, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"-12345.67\");","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        assertEquals(-12345.67, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        // Decimal points","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"12345.67\");","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345.67, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        amount \u003d new Amount(\"12345.6\");","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345.6, amount.getAmount());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"        // No integer before decimal point","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"        amount \u003d new Amount(\".12\");","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        assertEquals(0.12, amount.getAmount());","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"        // Minus sign and no integer before decimal point","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"        amount \u003d new Amount(\"-.12\");","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"        assertEquals(-0.12, amount.getAmount());","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"        // Integer with trailing decimal point","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"        amount \u003d new Amount(\"12.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"        assertEquals(12, amount.getAmount());","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"        // Leading zeros","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        amount \u003d new Amount(\"0012\");","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"        assertEquals(12, amount.getAmount());","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"    public void difference_test() {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"        Amount amount1 \u003d new Amount(\"100\");","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        Amount amount2 \u003d new Amount(\"100\");","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        assertEquals(0, amount1.minus(amount2).getAmount());","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        amount2 \u003d new Amount(\"12.34\");","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"                amount1.minus(amount2).getAmount(),","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"                -amount2.minus(amount1).getAmount()","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"    public void addCurrencySymbol_test() {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"        Amount integerAmount \u003d new Amount(\"1234\");","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        Amount floatAmount \u003d new Amount(\"1234.56\");","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        assertEquals(\"+ $1234.00\", integerAmount.addCurrencySymbol(\"$\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        assertEquals(\"+ $1234.56\", floatAmount.addCurrencySymbol(\"$\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"    public void equal_test() {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        // Same object","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        Amount amount1 \u003d new Amount(\"1234\");","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        assertTrue(amount1.equals(amount1));","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"        // Same amount","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        Amount amount2 \u003d new Amount(\"1234\");","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        assertTrue(amount1.equals(amount2));","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"        // Check reflexitivity","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"        assertTrue(amount2.equals(amount1));","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        amount2 \u003d new Amount(\"1234.00\");","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        assertTrue(amount1.equals(amount2));","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"        amount2 \u003d new Amount(\"1234.01\");","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        assertFalse(amount1.equals(amount2));","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":86,"dannylty":29}},{"path":"src/test/java/seedu/gamebook/model/gameentry/DatePlayedTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"public class DatePlayedTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidDatetime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"        // Valid datetime","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        assertDoesNotThrow(() -\u003e new DatePlayed(\"2012-12-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"        // Invalid date","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-123 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        // Invalid date","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-32 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-32-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-0-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-13-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        // Invalid hour","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-12 123:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        // Invalid hour","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-12 25:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        // Invalid minute","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-12 12:123\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        // Invalid minute","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-12 25:60\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidDateFormat_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        // Valid datetime","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        assertDoesNotThrow(() -\u003e new DatePlayed(\"2012-12-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        // Valid date","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        assertDoesNotThrow(() -\u003e new DatePlayed(\"2012-12-12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        // Invalid datetime format","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012/12/12 12:12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        // Invalid date format","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012/12/12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        // Valid date","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        assertDoesNotThrow(() -\u003e new DatePlayed(\"2012-12-12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        // Invalid date","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-123\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        // Invalid date","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-12-32\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-123-12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-0-12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        // Invalid month","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DatePlayed(\"2012-13-12\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"    public void equals_condition_equalIfSameMinute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        // Exact same time","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date0 \u003d new DatePlayed(\"2021-05-10 11:09\");","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date1 \u003d new DatePlayed(\"2021-05-10 11:09\");","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        assertEquals(date0, date1);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        // Different minute","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-05-10 11:09\");","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        date1 \u003d new DatePlayed(\"2021-05-10 11:06\");","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        assertNotEquals(date0, date1);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"    public void equals_condition_equalIfSameDate() {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        // Same date","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date0 \u003d new DatePlayed(\"2021-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date1 \u003d new DatePlayed(\"2021-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        assertEquals(date0, date1);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"        // Different date","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-05-02\");","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        date1 \u003d new DatePlayed(\"2021-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"        assertNotEquals(date0, date1);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"        // Different month","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        date1 \u003d new DatePlayed(\"2021-06-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        assertNotEquals(date0, date1);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"        // Different year","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2020-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"        date1 \u003d new DatePlayed(\"2021-05-10\");","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        assertNotEquals(date0, date1);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"    public void equal_condition_notEqualIfDifferentFormat() {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date0;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date1;","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"        // Same date, but one of them has time indicated","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-10-02 12:34\");","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"        date1 \u003d new DatePlayed(\"2021-10-02\");","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"        assertNotEquals(date0, date1);","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"        DatePlayed date0;","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"        // toString does not print time if time is not specified","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-10-05\");","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        assertEquals(date0.toString(), \"2021-10-05\");","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"        // toString prints time if time is specified","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"        date0 \u003d new DatePlayed(\"2021-10-05 11:09\");","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"        assertEquals(date0.toString(), \"2021-10-05 11:09\");","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":140}},{"path":"src/test/java/seedu/gamebook/model/gameentry/DurationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public class DurationTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"        // Not an integer","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Duration(\"123.4\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        // Negative integer","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Duration(\"-1234\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        // leading 0s","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Duration(\"00000001m\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        // invalid minute","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Duration(\"12:60\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public void constructor_validAmount() {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        Duration duration;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"12:34\");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12 * 60 + 34, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        // With white space","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"      12345\");","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"12345       \");","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"   12345       \");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12345, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        // Different formats","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"12h 34m\");","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12 * 60 + 34, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"12h\");","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        assertEquals(12 * 60, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        duration \u003d new Duration(\"34m\");","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        assertEquals(34, duration.getDurationMinutes());","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    public void equal_test() {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        // Same object","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        Duration duration1 \u003d new Duration(\"12:34\");","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        assertTrue(duration1.equals(duration1));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        // Same amount","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        Duration duration2 \u003d new Duration(\"12:34\");","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        assertTrue(duration1.equals(duration2));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        // Check reflexitivity","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        assertTrue(duration2.equals(duration1));","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"        duration2 \u003d new Duration(\"12h 34m\");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        assertTrue(duration1.equals(duration2));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":62}},{"path":"src/test/java/seedu/gamebook/model/gameentry/GameEntryContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import seedu.gamebook.testutil.GameEntryBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"public class GameEntryContainsKeywordPredicateTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public void gameType_containsKeyword() {","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        // Keyword is GameType","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"poker\", \"randomText1\", \"randomText2\");","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate finder \u003d new GameEntryContainsKeywordPredicate(keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        GameEntry gameEntry \u003d new GameEntryBuilder().withGameType(\"Poker\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        // Keyword is contained in a location","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        keywords \u003d Arrays.asList(\"marina\");","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withLocation(\"marina bay sands\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        finder \u003d new GameEntryContainsKeywordPredicate(keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withLocation(\"sentosa\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        assertFalse(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        // Keyword is contained in a tag","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        keywords \u003d Arrays.asList(\"friends\", \"solo\");","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        finder \u003d new GameEntryContainsKeywordPredicate(keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withTags(\"friends\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withTags(\"solo\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        // Keyword is profit amount -\u003e does not work","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        keywords \u003d Arrays.asList(\"100\");","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        finder \u003d new GameEntryContainsKeywordPredicate(keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withStartAmount(\"0\").withEndAmount(\"100\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        assertFalse(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        // Keyword is date -\u003e does not work","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        keywords \u003d Arrays.asList(\"2020-10-10\");","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        finder \u003d new GameEntryContainsKeywordPredicate(keywords);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        gameEntry \u003d new GameEntryBuilder().withDatePlayed(\"2020-10-10\").build();","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        assertFalse(finder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    public void empty_keyword_throwsIllegalArgumentExceptionTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        // Keyword is empty -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        List\u003cString\u003e empty \u003d Arrays.asList(\"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate emptyFinder \u003d new GameEntryContainsKeywordPredicate(empty);","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        GameEntry gameEntry \u003d new GameEntryBuilder().build();","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e emptyFinder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        // Keyword is white space -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        List\u003cString\u003e whitespaces \u003d Arrays.asList(\"    \\n   \");","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate whitespaceFinder \u003d new GameEntryContainsKeywordPredicate(whitespaces);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e whitespaceFinder.test(gameEntry));","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"    public void equal_test() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        // order does not matter","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        List\u003cString\u003e keywords1 \u003d Arrays.asList(\"word1\", \"word2\");","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        List\u003cString\u003e keywords2 \u003d Arrays.asList(\"word2\", \"word1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate finder1 \u003d new GameEntryContainsKeywordPredicate(keywords1);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        GameEntryContainsKeywordPredicate finder2 \u003d new GameEntryContainsKeywordPredicate(keywords2);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder1.equals(finder2));","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder2.equals(finder1));","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        // case does not matter","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"        keywords1 \u003d Arrays.asList(\"ignorecases\");","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        keywords2 \u003d Arrays.asList(\"IGNORECASES\");","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        finder1 \u003d new GameEntryContainsKeywordPredicate(keywords1);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"        finder2 \u003d new GameEntryContainsKeywordPredicate(keywords2);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder1.equals(finder2));","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        assertTrue(finder2.equals(finder1));","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        // contains different keywords -\u003e false","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"        keywords1 \u003d Arrays.asList(\"ignorecases\", \"word1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        keywords2 \u003d Arrays.asList(\"IGNORECASES\", \"word2\");","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"        finder1 \u003d new GameEntryContainsKeywordPredicate(keywords1);","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        finder2 \u003d new GameEntryContainsKeywordPredicate(keywords2);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        assertFalse(finder1.equals(finder2));","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        assertFalse(finder2.equals(finder1));","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yzhilong":95}},{"path":"src/test/java/seedu/gamebook/model/gameentry/GameEntryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.exceptions.GameEntryNotFoundException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntryListTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private static final String DATETIME_STRING \u003d \"2021-10-21 10:06\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    private static final GameEntry POKER \u003d new GameEntry(\"Poker\", \"100\", \"80\",","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"            DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    );","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private static final GameEntry ROULETTE \u003d new GameEntry(\"Roulette\", \"100\", \"80.12\",","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"            DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    );","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    private final GameEntryList gameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"    public void contains_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.contains(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"    public void contains_gameEntryNotInList_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"        assertFalse(gameEntryList.contains(POKER));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"    public void contains_gameEntryInList_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"        assertTrue(gameEntryList.contains(POKER));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"    public void contains_gameEntryWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntry editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80\",","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"                DATETIME_STRING, \"100\", \"Resort World Sentosa\", \"\"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"        assertTrue(gameEntryList.contains(editedPoker));","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"    public void add_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.add(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"    public void setPerson_nullTargetGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.setGameEntry(null, POKER));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"    public void setPerson_nullEditedGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.setGameEntry(POKER, null));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"    public void setPerson_targetGameEntryNotInList_throwsGameEntryNotFoundException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(GameEntryNotFoundException.class, () -\u003e gameEntryList.setGameEntry(POKER, POKER));","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntry_editedGameEntryIsSameGameEntry_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.setGameEntry(POKER, POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"        expectedGameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntry_editedGameEntryHasSameIdentity_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntry editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80\",","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"                \"2021-10-12\", \"100\", \"Resort World Sentosa\", \"\"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.setGameEntry(POKER, editedPoker);","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"BenjaminLHR"},"content":"        expectedGameEntryList.add(editedPoker);","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntry_editedGameEntryHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.setGameEntry(POKER, ROULETTE);","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"BenjaminLHR"},"content":"        expectedGameEntryList.add(ROULETTE);","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"BenjaminLHR"},"content":"    public void remove_nullGameEntry_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.remove(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"BenjaminLHR"},"content":"    public void remove_gameEntryDoesNotExist_throwsGameEntryNotFoundException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(GameEntryNotFoundException.class, () -\u003e gameEntryList.remove(POKER));","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"BenjaminLHR"},"content":"    public void remove_existingGameEntry_removesGameEntry() {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.remove(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries_nullGameEntryList_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.setGameEntries((GameEntryList) null));","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries_gameEntryList_replacesOwnListWithProvidedGameEntryList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"BenjaminLHR"},"content":"        expectedGameEntryList.add(ROULETTE);","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.setGameEntries(expectedGameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e gameEntryList.setGameEntries((List\u003cGameEntry\u003e) null));","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"BenjaminLHR"},"content":"    public void setGameEntries_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d Collections.singletonList(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"BenjaminLHR"},"content":"        this.gameEntryList.setGameEntries(gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntryList expectedGameEntryList \u003d new GameEntryList();","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"BenjaminLHR"},"content":"        expectedGameEntryList.add(POKER);","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedGameEntryList, this.gameEntryList);","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"BenjaminLHR"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"BenjaminLHR"},"content":"            -\u003e gameEntryList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"BenjaminLHR":153,"yzhilong":2}},{"path":"src/test/java/seedu/gamebook/model/gameentry/GameEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"public class GameEntryTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private static final String DATETIME_STRING \u003d \"2021-09-11 22:38\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    private static final String DATE_STRING \u003d \"2021-09-11\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry POKER_WITH_TIME \u003d new GameEntry(\"Poker\", \"100\", \"80\",","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"            DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry ROULETTE_WITH_TIME \u003d new GameEntry(\"Roulette\", \"100\", \"80.12\",","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"            DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry POKER_WITHOUT_TIME \u003d new GameEntry(\"Poker\", \"100\", \"80.12\",","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"            DATE_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    private static final GameEntry ROULETTE_WITHOUT_TIME \u003d new GameEntry(\"Roulette\", \"100\", \"80.12\",","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"            DATE_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e POKER_WITH_TIME.getTags().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    public void isSameGameEntry() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        assertTrue(POKER_WITH_TIME.isSameGameEntry(POKER_WITH_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.isSameGameEntry(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        // same gameType and date, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        HashSet\u003cTag\u003e tmpTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        tmpTags.add(new Tag(\"Tmp\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        GameEntry editedPoker \u003d new GameEntry(new GameType(\"Poker\"), new StartAmount(\"101\"), new EndAmount(\"81\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"                POKER_WITH_TIME.getDate(), new Duration(11), new Location(\"Resort World Sentosa\"), tmpTags","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        assertTrue(POKER_WITH_TIME.isSameGameEntry(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(new GameType(\"Blackjack\"), new StartAmount(\"100\"), new EndAmount(\"81\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"                POKER_WITH_TIME.getDate(), new Duration(10), new Location(\"Marina bay sands\"), new HashSet\u003c\u003e()","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.isSameGameEntry(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        // different date, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(new GameType(\"Poker\"), new StartAmount(\"100\"), new EndAmount(\"80\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"                new DatePlayed(\"2003-02-01 04:05\"), new Duration(10), new Location(\"Marina bay sands\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"                new HashSet\u003c\u003e()","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.isSameGameEntry(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        // all attributes same except date without time indicated -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.isSameGameEntry(POKER_WITHOUT_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        Date date \u003d new Date();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"        GameEntry pokerCopy \u003d new GameEntry(\"Poker\", \"100.00\", \"80.00\",","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"        assertTrue(POKER_WITH_TIME.equals(pokerCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"        assertTrue(POKER_WITH_TIME.equals(POKER_WITH_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(5));","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"        // different game entries -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(ROULETTE_WITH_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        GameEntry editedPoker \u003d new GameEntry(\"Blackjack\", \"100\", \"80\",","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        // different startAmount -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(\"Poker\", \"100.10\", \"80.00\",","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        // different endAmount -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80.12\",","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"10\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80.10\",","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"                \"2003-02-01 04:05\", \"11\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        // different duration -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80.10\",","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"11\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"        HashSet\u003cTag\u003e tmpTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"        tmpTags.add(new Tag(\"Tmp\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"        editedPoker \u003d new GameEntry(\"Poker\", \"100\", \"80.10\",","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"                DATETIME_STRING, \"11\", \"Marina bay sands\", \"\"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(editedPoker));","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"        // Time field indicated for one but not the other -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITH_TIME.equals(POKER_WITHOUT_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"        assertFalse(POKER_WITHOUT_TIME.equals(POKER_WITH_TIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"chingh20"},"content":"                \"Game type: Poker; Profit: -20.00; Date played: 2021-09-11 22:38; \"","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"                        + \"Game duration: 10m; Location: Marina Bay Sands\",","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"                POKER_WITH_TIME.toString()","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"chingh20"},"content":"                \"Game type: Roulette; Profit: -19.88; Date played: 2021-09-11 22:38; \"","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"yzhilong"},"content":"                        + \"Game duration: 10m; Location: Marina Bay Sands\",","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"                ROULETTE_WITH_TIME.toString()","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"                \"Game type: Poker; Profit: -19.88; Date played: 2021-09-11; \"","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"                        + \"Game duration: 10m; Location: Marina Bay Sands\",","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"                POKER_WITHOUT_TIME.toString()","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"chingh20"},"content":"                \"Game type: Roulette; Profit: -19.88; Date played: 2021-09-11; \"","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"yzhilong"},"content":"                        + \"Game duration: 10m; Location: Marina Bay Sands\",","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"yzhilong"},"content":"                ROULETTE_WITHOUT_TIME.toString()","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":3,"yzhilong":151,"chingh20":4}},{"path":"src/test/java/seedu/gamebook/model/gameentry/GameTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class GameTypeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GameType(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        String invalidGameType1 \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GameType(invalidGameType1));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        String invalidGameType2 \u003d \"                \";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GameType(invalidGameType2));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        String invalidGameType3 \u003d \"  \\n\\n\\n    \";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GameType(invalidGameType3));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    public void constructor_capitalizationTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        GameType lowerCaseGameType \u003d new GameType(\"some game name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        GameType upperCaseGameType \u003d new GameType(\"Some Game Name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        GameType mixedCaseGameType \u003d new GameType(\"SoMe gAME nAmE\");","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        assertEquals(lowerCaseGameType, upperCaseGameType);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        assertEquals(lowerCaseGameType, mixedCaseGameType);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        assertEquals(mixedCaseGameType, upperCaseGameType);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":36}},{"path":"src/test/java/seedu/gamebook/model/gameentry/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.gameentry;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class LocationTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public void constructor_capitalizationTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"        Location lowerCaseGameType \u003d new Location(\"some location name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        Location upperCaseLocation \u003d new Location(\"Some Location Name\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        Location mixedCaseLocation \u003d new Location(\"SoMe LoCatioN nAmE\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        assertEquals(lowerCaseGameType, upperCaseLocation);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        assertEquals(lowerCaseGameType, mixedCaseLocation);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        assertEquals(mixedCaseLocation, upperCaseLocation);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":2,"yzhilong":22}},{"path":"src/test/java/seedu/gamebook/model/stats/AverageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.stats;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"public class AverageTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_ONE \u003d \"2021-01-11\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_TWO \u003d \"2021-01-15\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_THREE \u003d \"2021-02-22\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_FOUR \u003d \"2021-06-30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_ONE \u003d \" 03:05\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_TWO \u003d \" 06:43\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_THREE \u003d \" 12:16\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_FOUR \u003d \" 16:35\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneNoTime \u003d new GameEntry(\"Blackjack\", \"100\",","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"            \"80\", DATE_ONE, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneTimeOne \u003d new GameEntry(\"Poker\", \"0\", \"50\",","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"            DATE_ONE + TIME_ONE, \"20\", \"Sentosa\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneTimeTwo \u003d new GameEntry(\"Blackjack\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_ONE + TIME_TWO, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateTwoTimeOne \u003d new GameEntry(\"Blackjack\", \"0.00\",","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"            \"15.25\", DATE_TWO + TIME_ONE, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    public void getAverageData_emptyList_returnsEmptyTreeMap() {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e emptyGameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"        TreeMap\u003cString, Double\u003e actualTreeMap \u003d Average.getAverageData(emptyGameEntryList);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"        TreeMap\u003cString, Double\u003e expectedTreeMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedTreeMap, actualTreeMap);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"    public void getAverageData_multipleDatesAndMultipleEntriesOnADate_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntry[] gameEntriesToAdd \u003d { gameOnDateOneNoTime, gameOnDateOneTimeOne, gameOnDateOneTimeTwo,","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"            gameOnDateTwoTimeOne };","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"        for (GameEntry gameEntry : gameEntriesToAdd) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"            gameEntryList.add(gameEntry);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"        TreeMap\u003cString, Double\u003e actualTreeMap \u003d Average.getAverageData(gameEntryList);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"        TreeMap\u003cString, Double\u003e expectedTreeMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"        expectedTreeMap.put(DATE_ONE, 30.25 / 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"        expectedTreeMap.put(DATE_TWO, 15.25);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedTreeMap, actualTreeMap);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallAverage_emptyList_returnsZero() {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e emptyGameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(0.00, Average.getOverallAverage(emptyGameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallAverage_multipleEntries_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"        GameEntry[] gameEntriesToAdd \u003d {gameOnDateOneNoTime, gameOnDateOneTimeOne, gameOnDateOneTimeTwo,","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"            gameOnDateTwoTimeOne};","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"        for (GameEntry gameEntry : gameEntriesToAdd) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"            gameEntryList.add(gameEntry);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"        Double averageComputed \u003d Average.getOverallAverage(gameEntryList);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"        Double expectedAverage \u003d 45.5 / 4;","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedAverage, averageComputed);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"BenjaminLHR":78}},{"path":"src/test/java/seedu/gamebook/model/stats/MedianTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.stats;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"public class MedianTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    // Dates and times are just precautionary measures, to ensure the list is sorted by profit, not date.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_ONE \u003d \"2021-01-11\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_TWO \u003d \"2021-01-15\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_THREE \u003d \"2021-02-22\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_FOUR \u003d \"2021-06-30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_ONE \u003d \" 03:05\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_TWO \u003d \" 06:43\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_THREE \u003d \" 12:16\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_FOUR \u003d \" 16:35\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    // gameOne\u0027s Profit \u003d -20","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOne \u003d new GameEntry(\"Blackjack\", \"100\",","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"            \"80\", DATE_THREE, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"    // gameTwo\u0027s Profit \u003d 50","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameTwo \u003d new GameEntry(\"Poker\", \"0\", \"50\",","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"            DATE_ONE + TIME_ONE, \"20\", \"Sentosa\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    // gameThree\u0027s Profit \u003d 0.25","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameThree \u003d new GameEntry(\"Blackjack\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_FOUR + TIME_TWO, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    // gameFour\u0027s Profit \u003d 15.25","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameFour \u003d new GameEntry(\"Blackjack\", \"0.00\",","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"            \"15.25\", DATE_TWO + TIME_ONE, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallMedian_emptyList_returnsZero() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e emptyGameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(0.00, Median.getOverallMedian(emptyGameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"    // Odd number of entries (Try 1 entry and 3 entries)","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallMedian_oneEntry_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameOne);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"        Double expectedMedian \u003d -20.00;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedMedian, Median.getOverallMedian(gameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallMedian_threeEntries_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameOne);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameTwo);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameThree);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        Double expectedMedian \u003d 0.25;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedMedian, Median.getOverallMedian(gameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"    // Even number of entries (Try 2 entries and 4 entries)","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallMedian_twoEntries_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameOne);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameThree);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"BenjaminLHR"},"content":"        Double expectedMedian \u003d -9.875;","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedMedian, Median.getOverallMedian(gameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"    public void getOverallMedian_fourEntries_computesCorrectly() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        List\u003cGameEntry\u003e gameEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameOne);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameTwo);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameThree);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"        gameEntryList.add(gameFour);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"        Double expectedMedian \u003d 7.75;","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(expectedMedian, Median.getOverallMedian(gameEntryList));","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"BenjaminLHR":86}},{"path":"src/test/java/seedu/gamebook/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"BenjaminLHR":2,"-":24}},{"path":"src/test/java/seedu/gamebook/model/util/GameEntriesDateComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.model.util;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"public class GameEntriesDateComparatorTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_ONE \u003d \"2021-01-11\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_TWO \u003d \"2021-01-15\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_THREE \u003d \"2021-02-22\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String DATE_FOUR \u003d \"2021-06-30\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_TWELVE_AM \u003d \" 00:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_TWO \u003d \" 06:43\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_THREE \u003d \" 12:16\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    private static final String TIME_FOUR \u003d \" 16:35\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntriesDateComparator comparator \u003d new GameEntriesDateComparator();","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneNoTime \u003d new GameEntry(\"Blackjack\", \"100\",","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"            \"80\", DATE_ONE, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneTwelveAm \u003d new GameEntry(\"Poker\", \"0\", \"50\",","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"            DATE_ONE + TIME_TWELVE_AM, \"20\", \"Sentosa\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneTimeTwo \u003d new GameEntry(\"Blackjack\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_ONE + TIME_TWO, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateOneTimeThree \u003d new GameEntry(\"Blackjack\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_ONE + TIME_THREE, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry gameOnDateTwoNoTime \u003d new GameEntry(\"Blackjack\", \"100\",","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"            \"80\", DATE_TWO, \"10\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry firstGameOnDateTwoTimeTwo \u003d new GameEntry(\"Blackjack\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_TWO + TIME_TWO, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    private GameEntry secondGameOnDateTwoTimeTwo \u003d new GameEntry(\"Poker\", \"1000\",","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"            \"1000.25\", DATE_TWO + TIME_TWO, \"105\", \"Marina bay sands\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"    public void compare_sameTime_returnsZero() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(0, comparator.compare(firstGameOnDateTwoTimeTwo, secondGameOnDateTwoTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"    public void compare_noTimeAndTwelveAm_returnsZero() {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(0, comparator.compare(gameOnDateOneNoTime, gameOnDateOneTwelveAm));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"    public void compare_firstGameEarlierThanSecondGame_returnsMinusOne() {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"        // Compares no time and got time","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(-1, comparator.compare(gameOnDateOneNoTime, gameOnDateOneTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(-1, comparator.compare(gameOnDateOneTimeTwo, gameOnDateOneTimeThree));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(-1, comparator.compare(gameOnDateOneTimeTwo, gameOnDateTwoNoTime));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(-1, comparator.compare(gameOnDateOneTimeTwo, firstGameOnDateTwoTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"    public void compare_firstGameLaterThanSecondGame_returnsOne() {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        // Compares no time and got time","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(1, comparator.compare(gameOnDateOneTimeTwo, gameOnDateOneNoTime));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(1, comparator.compare(gameOnDateOneTimeThree, gameOnDateOneTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(1, comparator.compare(gameOnDateTwoNoTime, gameOnDateOneTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(1, comparator.compare(firstGameOnDateTwoTimeTwo, gameOnDateOneTimeTwo));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"BenjaminLHR":68}},{"path":"src/test/java/seedu/gamebook/storage/JsonAdaptedGameEntryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.storage.JsonAdaptedGameEntry.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.POKER1_WITHOUT_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"shaliniseshadri"},"content":"public class JsonAdaptedGameEntryTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_DATE \u003d POKER1_WITHOUT_TIME.getDate().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_GAMETYPE \u003d POKER1_WITHOUT_TIME.getGameType().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_STARTAMOUNT \u003d POKER1_WITHOUT_TIME.getStartAmount().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_ENDAMOUNT \u003d POKER1_WITHOUT_TIME.getEndAmount().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_DURATION \u003d POKER1_WITHOUT_TIME.getDuration().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    private static final String VALID_LOCATION \u003d POKER1_WITHOUT_TIME.getLocation().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d POKER1_WITHOUT_TIME.getTags().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_validGameDetails_returnsGame() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d new JsonAdaptedGameEntry(POKER1_WITHOUT_TIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"        assertEquals(POKER1_WITHOUT_TIME.toString(), gameEntry.toModelType().toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullGameType_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d new JsonAdaptedGameEntry(null,","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"shaliniseshadri"},"content":"                VALID_STARTAMOUNT, VALID_ENDAMOUNT, VALID_DATE, VALID_DURATION, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GameType.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullStartAmount_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE, null,","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_ENDAMOUNT, VALID_DATE, VALID_DURATION, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start amount\");","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullEndAmount_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE,","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_STARTAMOUNT, null, VALID_DATE, VALID_DURATION, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end amount\");","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE,","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_STARTAMOUNT, VALID_ENDAMOUNT, null, VALID_DURATION, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"date played\");","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullDuration_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE,","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_STARTAMOUNT, VALID_ENDAMOUNT, VALID_DATE, null, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"duration\");","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"shaliniseshadri"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE,","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_STARTAMOUNT, VALID_ENDAMOUNT, VALID_DATE, VALID_DURATION, null, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"shaliniseshadri"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"location\");","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"shaliniseshadri"},"content":"        JsonAdaptedGameEntry gameEntry \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"shaliniseshadri"},"content":"                new JsonAdaptedGameEntry(VALID_GAMETYPE,","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"shaliniseshadri"},"content":"                        VALID_STARTAMOUNT, VALID_ENDAMOUNT, VALID_DATE, VALID_DURATION, VALID_LOCATION, invalidTags);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"shaliniseshadri"},"content":"        assertThrows(IllegalValueException.class, gameEntry::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BenjaminLHR":6,"shaliniseshadri":45,"yzhilong":7,"-":43}},{"path":"src/test/java/seedu/gamebook/storage/JsonGameBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.BLACKJACK1_WITH_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.DARTS1_WITHOUT_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.POKER1_WITHOUT_TIME;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"shaliniseshadri"},"content":"public class JsonGameBookStorageTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonGameBookStorageTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"    public void readGameBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e readGameBook(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    private java.util.Optional\u003cReadOnlyGameBook\u003e readGameBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"shaliniseshadri"},"content":"        return new JsonGameBookStorage(Paths.get(filePath)).readGameBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"        assertFalse(readGameBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGameBook(\"notJsonFormatGameBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"    public void readGameBook_invalidGameEntryGameBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGameBook(\"invalidGameEntryGameBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"    public void readGameBook_invalidAndValidGameEntryGameBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGameBook(\"invalidAndValidGameEntryGameBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"shaliniseshadri"},"content":"    // todo: to change duplicate handling before running this test","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"    public void readAndSaveGameBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"        Path filePath \u003d testFolder.resolve(\"TempGameBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"shaliniseshadri"},"content":"        GameBook original \u003d getTypicalGameBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"        JsonGameBookStorage jsonGameBookStorage \u003d new JsonGameBookStorage(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"        jsonGameBookStorage.saveGameBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"BenjaminLHR"},"content":"        ReadOnlyGameBook readBack \u003d jsonGameBookStorage.readGameBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"shaliniseshadri"},"content":"        assertEquals(original, new GameBook(readBack));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"        original.addGameEntry(BLACKJACK1_WITH_TIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"        original.removeGameEntry(POKER1_WITHOUT_TIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        jsonGameBookStorage.saveGameBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"        readBack \u003d jsonGameBookStorage.readGameBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"shaliniseshadri"},"content":"        assertEquals(original, new GameBook(readBack));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        original.addGameEntry(DARTS1_WITHOUT_TIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"        jsonGameBookStorage.saveGameBook(original); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"        readBack \u003d jsonGameBookStorage.readGameBook().get(); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"shaliniseshadri"},"content":"        assertEquals(original, new GameBook(readBack));","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"BenjaminLHR"},"content":"    public void saveGameBook_nullGameBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGameBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"BenjaminLHR"},"content":"     * Saves {@code gameBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"BenjaminLHR"},"content":"    private void saveGameBook(ReadOnlyGameBook gameBook, String filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"shaliniseshadri"},"content":"            new JsonGameBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"BenjaminLHR"},"content":"                    .saveGameBook(gameBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"BenjaminLHR"},"content":"    public void saveGameBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"BenjaminLHR"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGameBook(new GameBook(), null));","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BenjaminLHR":35,"shaliniseshadri":8,"yzhilong":3,"-":64}},{"path":"src/test/java/seedu/gamebook/storage/JsonSerializableGameBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.testutil.TypicalGameEntries;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"shaliniseshadri"},"content":"public class JsonSerializableGameBookTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableGameBookTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"    private static final Path TYPICAL_GAME_ENTRIES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGameEntriesGameBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    private static final Path INVALID_GAME_ENTRY_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGameEntryGameBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    private static final Path DUPLICATE_GAME_ENTRY_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGameEntryGameBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"shaliniseshadri"},"content":"    // todo: to change duplicate handling before running this test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    public void toModelType_typicalGameEntriesFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"        JsonSerializableGameBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GAME_ENTRIES_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"shaliniseshadri"},"content":"                JsonSerializableGameBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"        GameBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"        GameBook typicalGameEntriesAddressBook \u003d TypicalGameEntries.getTypicalGameBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"        assertEquals(addressBookFromFile, typicalGameEntriesAddressBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    public void toModelType_invalidGameEntryFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"        JsonSerializableGameBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GAME_ENTRY_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"shaliniseshadri"},"content":"                JsonSerializableGameBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BenjaminLHR":16,"shaliniseshadri":5,"-":18}},{"path":"src/test/java/seedu/gamebook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"shaliniseshadri"},"content":"        userPrefs.setGameBookFilePath(Paths.get(\"gamebook.json\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"BenjaminLHR":5,"shaliniseshadri":1,"-":117}},{"path":"src/test/java/seedu/gamebook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.TypicalGameEntries.getTypicalGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.ReadOnlyGameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"shaliniseshadri"},"content":"        JsonGameBookStorage addressBookStorage \u003d new JsonGameBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"shaliniseshadri"},"content":"    // todo: to change duplicate handling before running this test","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"shaliniseshadri"},"content":"        GameBook original \u003d getTypicalGameBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"shaliniseshadri"},"content":"        storageManager.saveGameBook(original);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"shaliniseshadri"},"content":"        ReadOnlyGameBook retrieved \u003d storageManager.readGameBook().get();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"shaliniseshadri"},"content":"        assertEquals(original, new GameBook(retrieved));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"shaliniseshadri"},"content":"        assertNotNull(storageManager.getGameBookFilePath());","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":6,"shaliniseshadri":7,"-":55}},{"path":"src/test/java/seedu/gamebook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"BenjaminLHR":1,"-":33}},{"path":"src/test/java/seedu/gamebook/testutil/EditGameEntryDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Amount;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"public class EditGameEntryDescriptorBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"    private EditCommand.EditGameEntryDescriptor descriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditCommand.EditGameEntryDescriptor();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder(EditCommand.EditGameEntryDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"        this.descriptor \u003d new EditCommand.EditGameEntryDescriptor(descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"     * Initializes the GameEntryBuilder with the data of {@code gameEntryToCopy}.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder(GameEntry gameEntryToCopy) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"        descriptor \u003d new EditCommand.EditGameEntryDescriptor();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        descriptor.setGameType(gameEntryToCopy.getGameType());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"        descriptor.setStartAmount(gameEntryToCopy.getStartAmount());","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"        descriptor.setEndAmount(gameEntryToCopy.getEndAmount());","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"        descriptor.setDate(gameEntryToCopy.getDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        descriptor.setDuration(gameEntryToCopy.getDuration());","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        descriptor.setLocation(gameEntryToCopy.getLocation());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"        descriptor.setTags(gameEntryToCopy.getTags());","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"     * Sets the {@code GameType} of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    public EditGameEntryDescriptorBuilder withGameType(GameType gameType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"        descriptor.setGameType(gameType);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"     * Sets the profit of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    public EditGameEntryDescriptorBuilder withProfit(Amount profit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        descriptor.setStartAmount(new StartAmount(\"0\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        descriptor.setEndAmount(new EndAmount(profit.getAmount()));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"     * Sets the {@code DatePlayed} of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"     * @throws ParseException if the given {@code datePlayed} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder withDatePlayed (DatePlayed datePlayed) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"        descriptor.setDate(datePlayed);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"     * Sets the duration of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    public EditGameEntryDescriptorBuilder withDuration(Duration duration) {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"        descriptor.setDuration(duration);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"     * Sets the location of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder withLocation(Location location) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"        descriptor.setLocation(location);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"chingh20"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"    public EditGameEntryDescriptorBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"chingh20"},"content":"    public EditCommand.EditGameEntryDescriptor build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"chingh20"},"content":"        return descriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"BenjaminLHR":12,"yzhilong":6,"dannylty":5,"chingh20":81}},{"path":"src/test/java/seedu/gamebook/testutil/GameEntryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chingh20"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chingh20"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.DatePlayed;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Duration;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameType;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"chingh20"},"content":" * A utility class to help with building GameEntry objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"chingh20"},"content":"public class GameEntryBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public static final GameType DEFAULT_GAMETYPE \u003d new GameType(\"Poker\");","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    public static final DatePlayed DEFAULT_DATE \u003d new DatePlayed(\"2021-01-01 10:00\");","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    public static final Duration DEFAULT_DURATION \u003d new Duration(\"10\");","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    public static final EndAmount DEFAULT_ENDAMOUNT \u003d new EndAmount(\"100.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    public static final Location DEFAULT_LOCATION \u003d new Location(\"Sentosa\");","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    public static final StartAmount DEFAULT_STARTAMOUNT \u003d new StartAmount(\"0.0\");","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    public static final Set\u003cTag\u003e DEFAULT_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    private GameType gameType;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    private StartAmount startAmount;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    private EndAmount endAmount;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"    private DatePlayed date;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    private Duration duration;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"    private Location location;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"     * Creates a {@code GameEntryBuilder} with the default details.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"    public GameEntryBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"chingh20"},"content":"        gameType \u003d DEFAULT_GAMETYPE;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"chingh20"},"content":"        startAmount \u003d DEFAULT_STARTAMOUNT;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"chingh20"},"content":"        endAmount \u003d DEFAULT_ENDAMOUNT;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"        date \u003d DEFAULT_DATE;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        duration \u003d DEFAULT_DURATION;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        location \u003d DEFAULT_LOCATION;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"        tags \u003d DEFAULT_TAGS;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"chingh20"},"content":"     * Initializes the GameEntryBuilder with the data of {@code gameEntryToCopy}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"chingh20"},"content":"    public GameEntryBuilder(GameEntry gameEntryToCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        gameType \u003d gameEntryToCopy.getGameType();","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"        startAmount \u003d gameEntryToCopy.getStartAmount();","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        endAmount \u003d gameEntryToCopy.getEndAmount();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        date \u003d gameEntryToCopy.getDate();","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"        duration \u003d gameEntryToCopy.getDuration();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        location \u003d gameEntryToCopy.getLocation();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"        tags \u003d new HashSet\u003c\u003e(gameEntryToCopy.getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"     * Sets the {@code GameType} of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"chingh20"},"content":"    public GameEntryBuilder withGameType(String gameType) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"        if (gameType.equals(\"\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"            this.gameType \u003d GameType.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"            return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"        String trimmedGameType \u003d gameType.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"        this.gameType \u003d new GameType(trimmedGameType);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"chingh20"},"content":"     * Sets the start amount of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"    public GameEntryBuilder withStartAmount(String startAmount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"        if (startAmount.equals(\"\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"            this.startAmount \u003d StartAmount.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"            return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"        String trimmedStartAmount \u003d startAmount.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"chingh20"},"content":"        Double amount;","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"            amount \u003d Double.parseDouble(trimmedStartAmount);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"            this.startAmount \u003d new StartAmount(amount);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"chingh20"},"content":"     * Sets the end amount of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"    public GameEntryBuilder withEndAmount(String endAmount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"        if (endAmount.equals(\"\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"            this.endAmount \u003d EndAmount.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"            return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"chingh20"},"content":"        String trimmedEndAmount \u003d endAmount.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"chingh20"},"content":"        Double amount;","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"chingh20"},"content":"            amount \u003d Double.parseDouble(trimmedEndAmount);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"            this.endAmount \u003d new EndAmount(amount);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"chingh20"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"chingh20"},"content":"     * Sets the {@code DatePlayed} of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"dannylty"},"content":"    public GameEntryBuilder withDatePlayed (String datePlayed) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"dannylty"},"content":"        if (datePlayed.equals(\"\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"dannylty"},"content":"            this.date \u003d DatePlayed.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"dannylty"},"content":"            return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"            this.date \u003d new DatePlayed(datePlayed);","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"chingh20"},"content":"     * Sets the duration of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"dannylty"},"content":"    public GameEntryBuilder withDuration(String duration) {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"chingh20"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"dannylty"},"content":"            this.duration \u003d Duration.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"chingh20"},"content":"            return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"chingh20"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"chingh20"},"content":"        Integer durationInMinutes;","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"chingh20"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"chingh20"},"content":"            durationInMinutes \u003d Integer.parseInt(trimmedDuration);","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"dannylty"},"content":"            this.duration \u003d new Duration(durationInMinutes);","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"chingh20"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"chingh20"},"content":"     * Sets the location of the {@code GameEntry} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"chingh20"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"chingh20"},"content":"    public GameEntryBuilder withLocation(String location) {","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"chingh20"},"content":"        if (location.equals(\"\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"dannylty"},"content":"            this.location \u003d Location.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"chingh20"},"content":"            return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"chingh20"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"dannylty"},"content":"        this.location \u003d new Location(trimmedLocation);","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"chingh20"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code GameEntry} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"chingh20"},"content":"    public GameEntryBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"chingh20"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"chingh20"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"yzhilong"},"content":"     * Builds a default GameEntry.","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"yzhilong"},"content":"     * @return Default GameEntry,","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"chingh20"},"content":"    public GameEntry build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"dannylty"},"content":"        return new GameEntry(gameType, startAmount, endAmount, date, duration, location, tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":10,"yzhilong":9,"dannylty":47,"chingh20":116}},{"path":"src/test/java/seedu/gamebook/testutil/GameEntryUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_ENDAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_GAMETYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_PROFIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_STARTAMOUNT;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chingh20"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"chingh20"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"chingh20"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.logic.commands.EditCommand.EditGameEntryDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.EndAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.StartAmount;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chingh20"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"chingh20"},"content":" * A utility class for GameEntry.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"chingh20"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chingh20"},"content":"public class GameEntryUtil {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chingh20"},"content":"    private static final DateFormat DATE_FORMAT_WITH_MINUTES \u003d new SimpleDateFormat(\"dd/MM/yy HH:mm\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"chingh20"},"content":"    private static final DateFormat DATE_FORMAT_WITHOUT_MINUTES \u003d new SimpleDateFormat(\"dd/MM/yy\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chingh20"},"content":"     * Returns an add command string for adding the {@code gameEntry}.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"chingh20"},"content":"    public static String getAddCommand(GameEntry gameEntry) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"chingh20"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getGameEntryDetails(gameEntry);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chingh20"},"content":"     * Returns the part of command string for the given {@code gameEntry}\u0027s details.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chingh20"},"content":"    public static String getGameEntryDetails(GameEntry gameEntry) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"chingh20"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        String date \u003d gameEntry.getDate().toString();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        sb.append(PREFIX_GAMETYPE + gameEntry.getGameType().toString() + \" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chingh20"},"content":"        sb.append(PREFIX_STARTAMOUNT + gameEntry.getStartAmount().toString() + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"chingh20"},"content":"        sb.append(PREFIX_ENDAMOUNT + gameEntry.getEndAmount().toString() + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"chingh20"},"content":"        sb.append(PREFIX_DATE + date + \" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        sb.append(PREFIX_DURATION + gameEntry.getDuration().toString() + \" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        sb.append(PREFIX_LOCATION + gameEntry.getLocation().toString() + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"        if (gameEntry.hasTags()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"            sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"            sb.append(gameEntry","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"                    .getTags()","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"                    .stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"                    .map(x -\u003e x.toString())","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"                    .reduce(\"\", (x, y) -\u003e x + \", \" + y));","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"chingh20"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"chingh20"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"chingh20"},"content":"     * Returns the part of command string for the given {@code EditGameEntryDescriptor}\u0027s details.","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"chingh20"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"chingh20"},"content":"    public static String getEditGameEntryDescriptorDetails(EditGameEntryDescriptor descriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"chingh20"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"        descriptor.getDate().ifPresent(date -\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"                sb.append(String.format(\"%s %s\" + \" \", PREFIX_DATE, date.toString()))","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"chingh20"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"chingh20"},"content":"        descriptor.getGameType().ifPresent(game -\u003e sb.append(PREFIX_GAMETYPE + \"\"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"chingh20"},"content":"                + descriptor.getGameType().get() + \" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"        if (descriptor.getStartAmount().isPresent() \u0026\u0026 descriptor.getEndAmount().isPresent()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"            EndAmount endAmount \u003d descriptor.getEndAmount().get();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"            StartAmount startAmount \u003d descriptor.getStartAmount().get();","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"            sb.append(PREFIX_PROFIT + endAmount.minus(startAmount).toString() + \" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"chingh20"},"content":"        descriptor.getDuration().ifPresent(duration -\u003e sb.append(PREFIX_DURATION + \"\"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"chingh20"},"content":"                + descriptor.getDuration().get() + \" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"chingh20"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION + \"\"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"chingh20"},"content":"                + descriptor.getLocation().get() + \" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"chingh20"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"chingh20"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chingh20"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"                // do nothing","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"chingh20"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"chingh20"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"chingh20"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"chingh20"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"chingh20"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"chingh20"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"chingh20"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"BenjaminLHR":15,"yzhilong":14,"dannylty":9,"chingh20":55}},{"path":"src/test/java/seedu/gamebook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BenjaminLHR":1,"-":71}},{"path":"src/test/java/seedu/gamebook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        return Index.fromOneBased(model.getFilteredGameEntryList().size() / 2);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        return Index.fromOneBased(model.getFilteredGameEntryList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    public static GameEntry getPerson(Model model, Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        return model.getFilteredGameEntryList().get(index.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"BenjaminLHR":4,"yzhilong":4,"-":47}},{"path":"src/test/java/seedu/gamebook/testutil/TypicalGameEntries.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.GameBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.model.gameentry.GameEntry;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"public class TypicalGameEntries {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    // GameEntries without time indicated","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry POKER1_WITHOUT_TIME \u003d new GameEntryBuilder().withGameType(\"Poker\")","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"123\").withEndAmount(\"134\")","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-10-10\").withDuration(\"30\")","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Marina Bay Sands\")","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry POKER2_WITHOUT_TIME \u003d new GameEntryBuilder().withGameType(\"Poker\")","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"0\").withEndAmount(\"-10\")","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-10-09\").withDuration(\"30\")","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Home\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry DARTS1_WITHOUT_TIME \u003d new GameEntryBuilder().withGameType(\"Darts\")","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"0\").withEndAmount(\"0\")","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-12-10\").withDuration(\"30\")","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Local Bar\")","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"            .withTags(\"solo\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry DARTS2_WITHOUT_TIME \u003d new GameEntryBuilder().withGameType(\"Darts\")","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"0\").withEndAmount(\"0\")","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-12-10\").withDuration(\"30\")","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Local Bar\")","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"            .withTags(\"solo\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    // GameEntries with time indicated","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry POKER1_WITH_TIME \u003d new GameEntryBuilder().withGameType(\"Poker\")","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"            .withStartAmount(\"0\").withEndAmount(\"50\")","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-10-11 12:34\").withDuration(\"110\")","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"            .withLocation(\"Marina Bay Sands\")","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"            .withTags(\"solo-morning\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry POKER2_WITH_TIME \u003d new GameEntryBuilder().withGameType(\"Poker\")","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"            .withStartAmount(\"1.23\").withEndAmount(\"4.56\")","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-10-11 13:24\").withDuration(\"110\")","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"            .withLocation(\"Marina Bay Sands\")","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"            .withTags(\"solo-morning\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry BLACKJACK1_WITH_TIME \u003d new GameEntryBuilder().withGameType(\"Blackjack\")","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"            .withStartAmount(\"0\").withEndAmount(\"5\")","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-11-10 18:00\").withDuration(\"10\")","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"            .withLocation(\"Friend\u0027s Place\")","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"            .withTags(\"friends-drunk\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    public static final GameEntry BLACKJACK2_WITH_TIME \u003d new GameEntryBuilder().withGameType(\"Blackjack\")","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"            .withStartAmount(\"200\").withEndAmount(\"199\")","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-11-10 19:00\").withDuration(\"30\")","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"            .withLocation(\"Friend\u0027s Place\")","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"            .withTags(\"friends-drunk\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"    // Manually added","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"    static final GameEntry POKER4 \u003d new GameEntryBuilder().withGameType(\"Poker\")","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"0\").withEndAmount(\"1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-10-22 12:34\").withDuration(\"20\")","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Sentosa\")","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"            .withTags(\"vacation\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"    static final GameEntry BLACKJACK3 \u003d new GameEntryBuilder().withGameType(\"Blackjack\")","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"            .withStartAmount(\"30\").withEndAmount(\"15\")","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"            .withDatePlayed(\"2020-05-22\").withDuration(\"20\")","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"            .withLocation(\"Sentosa\")","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"            .withTags(\"vacation\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"    // public static final Person AMY \u003d new GameEntryBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"    //        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"    // public static final Person BOB \u003d new GameEntryBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"    //        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"    //        .build();","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"    private TypicalGameEntries() {} // prevents instantiation","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"    public static GameBook getTypicalGameBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"        GameBook gb \u003d new GameBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"        for (GameEntry gameEntry : getTypicalGameEntries()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"            gb.addGameEntry(gameEntry);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"        return gb;","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"    public static List\u003cGameEntry\u003e getTypicalGameEntries() {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"                POKER1_WITHOUT_TIME, POKER1_WITH_TIME,","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"                POKER2_WITHOUT_TIME, POKER2_WITH_TIME,","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"                BLACKJACK1_WITH_TIME, BLACKJACK2_WITH_TIME,","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"                DARTS2_WITHOUT_TIME, DARTS1_WITHOUT_TIME));","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"BenjaminLHR":3,"yzhilong":40,"dannylty":58}},{"path":"src/test/java/seedu/gamebook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"chingh20"},"content":"    public static final Index INDEX_FIRST_GAMEENTRY \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"chingh20"},"content":"    public static final Index INDEX_SECOND_GAMEENTRY \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"chingh20"},"content":"    public static final Index INDEX_THIRD_GAMEENTRY \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"BenjaminLHR":2,"-":7,"chingh20":3}},{"path":"src/test/java/seedu/gamebook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BenjaminLHR":1,"-":34}},{"path":"src/test/java/seedu/gamebook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package seedu.gamebook.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import static seedu.gamebook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"import seedu.gamebook.MainApp;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"shaliniseshadri"},"content":"     * It should only be used with invalid FXML files or the valid file located at VALID_FILE_PATH.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BenjaminLHR":3,"shaliniseshadri":1,"-":110}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"\u003c?import seedu.gamebook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"BenjaminLHR":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"\u003cfx:root type\u003d\"seedu.gamebook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"BenjaminLHR":1,"-":5}}]
