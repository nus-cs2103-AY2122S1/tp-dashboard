[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"# AY2122S1-CS2103-F09-2 TaskMaster2103","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103-F09-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-F09-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"TaskMaster2103 helps a student manage their tasks and help them keep up with their busy lives in school. It is optimised for both CLI and GUI users so that students can choose which ever method is preferred for themselves.","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"For detailed documentation on the project, please visit the [TaskMaster2103 product website](https://ay2122s1-cs2103-f09-2.github.io/tp/).","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"## Getting Started","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"Prerequisites: JDK11, Gradle","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"For **running the application**: Head to our [releases](https://github.com/AY2122S1-CS2103-F09-2/tp/releases) page and grab the latest `.jar` file.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"For **contributing to the project**:","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"1. Clone this repository","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"2. Open the project in an IDE that has gradle support, or simply run `./gradlew task -all` in the root directory of the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"3. Submit your PR and assign it to any one of our developer team members to notify us!","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"## About Us","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"Please refer to the [About Us](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/AboutUs.md) document.  ","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"## User Guide","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"Please refer to the [User Guide](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/UserGuide.md) document for specific details.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"## Developer Guide","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"Please refer to the [Devleoper Guide](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/UserGuide.md) for specific details.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"wlren":2,"yeppog":31,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"We are a team of five based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"wlren"},"content":"We hope to build upon the functionalities of AB3 and make it something unique and meaningful!","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"For any inquiries, please reach out to us at the email `renweilin@u.nus.edu`","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":"### Hans Sebastian Tirtaputra","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/advisor.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"[[homepage](https://www.linkedin.com/in/hans-sebastian-tirtaputra/?originalSubdomain\u003dsg)]","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"[[github](https://github.com/hansebastian)]","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"[[portfolio](team/advisor.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"* Role: Project Advisor/Tutor","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"### Ren Weilin","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/wlren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"[[github](http://github.com/wlren)]","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"[[portfolio](team/wlren.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wlren"},"content":"* Responsibilities: Manages the issues and milestones of tP, allocates tasks, software development","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"koh-jx"},"content":"### Jeff Sieu Yong","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/jeffsieu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"koh-jx"},"content":"[[github](http://github.com/jeffsieu)] [[portfolio](team/jeffsieu.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"koh-jx"},"content":"* Role: Lead Developer","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"koh-jx"},"content":"* Responsibilities: Handle complicated merge conflicts and feature development","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"koh-jx"},"content":"### Chen Mingyi","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/mingyi456.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"koh-jx"},"content":"[[github](https://github.com/mingyi456)]","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"koh-jx"},"content":"[[portfolio](team/mingyi456.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"* Responsibilities: Dev Ops, ensuring the CI/CD pipeline of the project is maintained as project progresses","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"koh-jx"},"content":"### Jonathan Lee Jing Yu","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/yeppog.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"koh-jx"},"content":"[[github](https://github.com/yeppog)]","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"koh-jx"},"content":"[[portfolio](team/yeppog.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"wlren"},"content":"* Responsibilities: Testing and QA, ensuring the project\u0027s testing coverage is maintained","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"koh-jx"},"content":"### Koh Jia Xian","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"koh-jx"},"content":"\u003cimg src\u003d\"images/koh-jx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"koh-jx"},"content":"[[github](https://github.com/koh-jx)]","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"koh-jx"},"content":"[[portfolio](team/koh-jx.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"* Responsibilities: Docs, UI, maintain documentation of project and setting the UI theme of the GUI","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"koh-jx":29,"wlren":8,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"wlren"},"content":"- Table of Contents","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wlren"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"wlren"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"wlren"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"wlren"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"wlren"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"wlren"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"wlren"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"wlren"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"wlren"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"wlren"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"wlren"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"wlren"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"wlren"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"wlren"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"wlren"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"wlren"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"wlren"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"wlren"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"wlren"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"wlren"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"wlren"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"wlren"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"wlren"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"wlren"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"wlren"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"wlren"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2021-10-05"},{"lineNumber":234,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"wlren"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"wlren"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"wlren"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"wlren"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"wlren"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"wlren"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":253,"author":{"gitId":"wlren"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":254,"author":{"gitId":"wlren"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"wlren"},"content":"Comprehensive user narrative [here](https://docs.google.com/document/d/1B5kaY-Trws5eFxNEJdF_qdfHmCMzlpPUrZl-F4lkFSo/edit?usp\u003dsharing)","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"wlren"},"content":"- has a need to manage a significant number of contacts","lastModifiedDate":"2021-10-05"},{"lineNumber":266,"author":{"gitId":"wlren"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2021-10-05"},{"lineNumber":267,"author":{"gitId":"wlren"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2021-10-05"},{"lineNumber":268,"author":{"gitId":"wlren"},"content":"- is a student","lastModifiedDate":"2021-10-05"},{"lineNumber":269,"author":{"gitId":"wlren"},"content":"- has a need to manage tasks quickly","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"wlren"},"content":"- prefers to have a visualization of their productivity","lastModifiedDate":"2021-10-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"wlren"},"content":"**Value proposition**: allow students to easily keep track of their tasks for modules, school calenders, and meetings in a strealined manner and allow them to use either GUI/CLI options depending on whichever suits them better","lastModifiedDate":"2021-10-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                          | I want to …​                                                       | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"yeppog"},"content":"| -------- | ---------------------------------------------------------------- | ------------------------------------------------------------------ | ------------------------------------------------------- |","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student                                                          | add tasks into a tasklist                                          | keep a list of tasks I need to do                       |","lastModifiedDate":"2021-10-02"},{"lineNumber":281,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student                                                          | delete tasks                                                       | remove tasks that are no longer applicable              |","lastModifiedDate":"2021-10-02"},{"lineNumber":282,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student with one laptop                                          | access my data locally                                             | use the application without an internet connection      |","lastModifiedDate":"2021-10-05"},{"lineNumber":283,"author":{"gitId":"yeppog"},"content":"| `* * *`  | new user                                                         | use the GUI                                                        | use the app easily from the desktop                     |","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student who often makes typos                                    | edit tasks                                                         | correct tasks that were entered wrongly                 |","lastModifiedDate":"2021-10-05"},{"lineNumber":285,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student with similar tasks                                       | create skeleton templates                                          | add tasks without repeating actions                     |","lastModifiedDate":"2021-10-05"},{"lineNumber":286,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student with different commitments                               | categorise tasks using tags                                        | differentiate whcih tasks belongs to which commitment   |","lastModifiedDate":"2021-10-05"},{"lineNumber":287,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student with different commitments                               | overview of my tasks by workload                                   | understand which tasks I need to prioritise             |","lastModifiedDate":"2021-10-05"},{"lineNumber":288,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student who is forgetful                                         | receive reminders                                                  | be reminded for upcoming tasks                          |","lastModifiedDate":"2021-10-05"},{"lineNumber":289,"author":{"gitId":"yeppog"},"content":"| `* * *`  | student who receives periodic assignments                        | create recurring tasks that repeat at a set interval               | save time                                               |","lastModifiedDate":"2021-10-05"},{"lineNumber":290,"author":{"gitId":"yeppog"},"content":"| `* *`    | student with varying type of tasks                               | attach various files or messages                                   | increase convenience of access                          |","lastModifiedDate":"2021-10-05"},{"lineNumber":291,"author":{"gitId":"yeppog"},"content":"| `* *`    | a veteran user                                                   | have CLI to organise my tasks                                      | save time from not having to point and click on the GUI |","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"yeppog"},"content":"| `* *`    | busy student                                                     | be able to add tasks using CLI                                     | save time from not needing to sort my schedule          |","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"yeppog"},"content":"| `* *`    | student that manages multiple projects across different modules  | tag tasks with contacts                                            | know who is participating in which meeting or task      |","lastModifiedDate":"2021-10-05"},{"lineNumber":294,"author":{"gitId":"yeppog"},"content":"| `* *`    | a student who love data and visualisations                       | view previously completed tasks over time                          | gain insights into my producitvity                      |","lastModifiedDate":"2021-10-05"},{"lineNumber":295,"author":{"gitId":"yeppog"},"content":"| `*`      | student with similar tasks                                       | create custom macros                                               | save time                                               |","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"yeppog"},"content":"| `*`      | student that is finishing their semester                         | purge data on tasks and templates                                  | remove clutter on my app                                |","lastModifiedDate":"2021-10-05"},{"lineNumber":297,"author":{"gitId":"yeppog"},"content":"| `*`      | student with many tasks                                          | track progress for tasks                                           | visualise the time required for each task               |","lastModifiedDate":"2021-10-05"},{"lineNumber":298,"author":{"gitId":"yeppog"},"content":"| `*`      | student who has to manage projects with peers                    | create tasks that can be emailed to individuals on my contact list | facilitate quick communication                          |","lastModifiedDate":"2021-10-05"},{"lineNumber":299,"author":{"gitId":"yeppog"},"content":"| `*`      | student who easily gets bored focusing too much on a single task | shuffle the arrangement of upcoming tasks                          | work on another task with similar priority              |","lastModifiedDate":"2021-10-05"},{"lineNumber":300,"author":{"gitId":"yeppog"},"content":"| `*`      | student who may make mistakes                                    | undo my changes                                                    | revert any changes if needed                            |","lastModifiedDate":"2021-10-05"},{"lineNumber":301,"author":{"gitId":"yeppog"},"content":"| `*`      | student who has some tasks of utmost importance                  | designate special tasks that block out a certain time period       | avoid scheduling other tasks that clash with them       |","lastModifiedDate":"2021-10-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"mingyi456"},"content":"(For all use cases below, the **System** is the `TaskMaster2103` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCP01 - Add a person","lastModifiedDate":"2021-10-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"jeffsieu"},"content":"##### MSS","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"mingyi456"},"content":"1. User requests add a person.","lastModifiedDate":"2021-10-04"},{"lineNumber":312,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":313,"author":{"gitId":"mingyi456"},"content":"2. TaskMaster2103 shows a list of updated tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":314,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":315,"author":{"gitId":"mingyi456"},"content":"   Use case ends.","lastModifiedDate":"2021-10-04"},{"lineNumber":316,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":317,"author":{"gitId":"mingyi456"},"content":"##### Extensions","lastModifiedDate":"2021-10-04"},{"lineNumber":318,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":319,"author":{"gitId":"wlren"},"content":"- 1a. An invalid field is specified","lastModifiedDate":"2021-10-05"},{"lineNumber":320,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":321,"author":{"gitId":"wlren"},"content":"  - 1a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":322,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":323,"author":{"gitId":"mingyi456"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-10-04"},{"lineNumber":324,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":325,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCP02 - Edit a person","lastModifiedDate":"2021-10-04"},{"lineNumber":326,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":327,"author":{"gitId":"mingyi456"},"content":"##### MSS","lastModifiedDate":"2021-10-04"},{"lineNumber":328,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":329,"author":{"gitId":"mingyi456"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-10-04"},{"lineNumber":330,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":331,"author":{"gitId":"mingyi456"},"content":"2. TaskMaster2103 shows a list of persons.","lastModifiedDate":"2021-10-04"},{"lineNumber":332,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":333,"author":{"gitId":"mingyi456"},"content":"3. User requests to edit a specific person in the list with the new values of the fields to be updated.","lastModifiedDate":"2021-10-04"},{"lineNumber":334,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":335,"author":{"gitId":"mingyi456"},"content":"4. TaskMaster2103 updates the specified fields of the person.","lastModifiedDate":"2021-10-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"jeffsieu"},"content":"##### Extensions","lastModifiedDate":"2021-09-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"wlren"},"content":"- 2a. The list is empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"wlren"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"wlren"},"content":"  - 3a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":348,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":349,"author":{"gitId":"mingyi456"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-10-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":351,"author":{"gitId":"wlren"},"content":"- 3b1. A field is specified wrongly.","lastModifiedDate":"2021-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":353,"author":{"gitId":"wlren"},"content":"  - 3a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCP03 - Delete a person","lastModifiedDate":"2021-10-04"},{"lineNumber":358,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"jeffsieu"},"content":"##### MSS","lastModifiedDate":"2021-09-30"},{"lineNumber":360,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":361,"author":{"gitId":"mingyi456"},"content":"1.  User requests to list persons.","lastModifiedDate":"2021-10-04"},{"lineNumber":362,"author":{"gitId":"mingyi456"},"content":"2.  TaskMaster2103 shows a list of persons.","lastModifiedDate":"2021-10-04"},{"lineNumber":363,"author":{"gitId":"mingyi456"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":364,"author":{"gitId":"mingyi456"},"content":"4.  TaskMaster2103 deletes the person.","lastModifiedDate":"2021-10-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"jeffsieu"},"content":"##### Extensions","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"wlren"},"content":"- 2a. The list is empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-10-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":374,"author":{"gitId":"wlren"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":375,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"wlren"},"content":"  - 3a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":377,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"mingyi456"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-10-04"},{"lineNumber":379,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":380,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCP04 - Search for a person","lastModifiedDate":"2021-10-04"},{"lineNumber":381,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":382,"author":{"gitId":"mingyi456"},"content":"##### MSS","lastModifiedDate":"2021-10-04"},{"lineNumber":383,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":384,"author":{"gitId":"mingyi456"},"content":"1. User requests to search for a list of keywords.","lastModifiedDate":"2021-10-04"},{"lineNumber":385,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":386,"author":{"gitId":"mingyi456"},"content":"2. TaskMaster2103 shows a list of people whose names match any of the keywords.","lastModifiedDate":"2021-10-04"},{"lineNumber":387,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":388,"author":{"gitId":"mingyi456"},"content":"   Use case ends.","lastModifiedDate":"2021-10-04"},{"lineNumber":389,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":390,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCT01 - Add a task","lastModifiedDate":"2021-10-04"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":392,"author":{"gitId":"mingyi456"},"content":"##### MSS","lastModifiedDate":"2021-10-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":394,"author":{"gitId":"mingyi456"},"content":"1.  User requests to add a task.","lastModifiedDate":"2021-10-04"},{"lineNumber":395,"author":{"gitId":"mingyi456"},"content":"2.  TaskMaster2103 shows an updated list of tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":396,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":397,"author":{"gitId":"mingyi456"},"content":"    Use case ends.","lastModifiedDate":"2021-10-04"},{"lineNumber":398,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":399,"author":{"gitId":"mingyi456"},"content":"##### Extensions","lastModifiedDate":"2021-10-04"},{"lineNumber":400,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":401,"author":{"gitId":"wlren"},"content":"- 1a. The task does not contain a title.","lastModifiedDate":"2021-10-05"},{"lineNumber":402,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":403,"author":{"gitId":"wlren"},"content":"  - 1a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":404,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":405,"author":{"gitId":"jeffsieu"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":407,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCT02 - Edit a task","lastModifiedDate":"2021-10-04"},{"lineNumber":408,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"jeffsieu"},"content":"##### MSS","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"mingyi456"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":412,"author":{"gitId":"mingyi456"},"content":"2.  TaskMaster2103 shows a list of tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":413,"author":{"gitId":"mingyi456"},"content":"3.  User requests to edit a specific task in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":414,"author":{"gitId":"mingyi456"},"content":"4.  TaskMaster2103 edits the task.","lastModifiedDate":"2021-10-04"},{"lineNumber":415,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"jeffsieu"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"jeffsieu"},"content":"##### Extensions","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"wlren"},"content":"- 2a. The list is empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":421,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"jeffsieu"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"wlren"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":425,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"wlren"},"content":"  - 3a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":427,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":428,"author":{"gitId":"jeffsieu"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":429,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":430,"author":{"gitId":"mingyi456"},"content":"#### Use case: UCT03 - Delete a task","lastModifiedDate":"2021-10-04"},{"lineNumber":431,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":432,"author":{"gitId":"jeffsieu"},"content":"##### MSS","lastModifiedDate":"2021-09-30"},{"lineNumber":433,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":434,"author":{"gitId":"mingyi456"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":435,"author":{"gitId":"mingyi456"},"content":"2.  TaskMaster2103 shows a list of tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":436,"author":{"gitId":"mingyi456"},"content":"3.  User requests to delete a specific tasks in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":437,"author":{"gitId":"mingyi456"},"content":"4.  TaskMaster2103 deletes the person.","lastModifiedDate":"2021-10-04"},{"lineNumber":438,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"jeffsieu"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":441,"author":{"gitId":"jeffsieu"},"content":"##### Extensions","lastModifiedDate":"2021-09-30"},{"lineNumber":442,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":443,"author":{"gitId":"wlren"},"content":"- 2a. The list is empty.","lastModifiedDate":"2021-10-05"},{"lineNumber":444,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":445,"author":{"gitId":"jeffsieu"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":446,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":447,"author":{"gitId":"wlren"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":448,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"wlren"},"content":"  - 3a1. TaskMaster2103 shows an error message.","lastModifiedDate":"2021-10-05"},{"lineNumber":450,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":451,"author":{"gitId":"jeffsieu"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":452,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":453,"author":{"gitId":"wlren"},"content":"_{More to be added}_","lastModifiedDate":"2021-10-05"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"koh-jx"},"content":"2.  Should be able to work on both 32-bit and 64-bit environments.","lastModifiedDate":"2021-10-02"},{"lineNumber":459,"author":{"gitId":"koh-jx"},"content":"3.  A user with above average typing speed of 60 words per minute for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-02"},{"lineNumber":460,"author":{"gitId":"koh-jx"},"content":"4.  The system should respond within 1 second to any (valid or invalid) command given via typing or GUI.","lastModifiedDate":"2021-10-02"},{"lineNumber":461,"author":{"gitId":"koh-jx"},"content":"5.  The system will store the data in a JSON file locally, and will not have a server component.","lastModifiedDate":"2021-10-02"},{"lineNumber":462,"author":{"gitId":"koh-jx"},"content":"6.  Older versions of locally-stored data should be compatible with newer versions of the app.","lastModifiedDate":"2021-10-02"},{"lineNumber":463,"author":{"gitId":"koh-jx"},"content":"7.  The system should load the locally-stored data within 1 second when the app starts up.","lastModifiedDate":"2021-10-02"},{"lineNumber":464,"author":{"gitId":"koh-jx"},"content":"8.  The app should save any changes to the data immediately when the command is processed, to avoid possible data loss.","lastModifiedDate":"2021-10-02"},{"lineNumber":465,"author":{"gitId":"koh-jx"},"content":"9.  The app should only read the JSON file for the locally-stored list, and nothing else.","lastModifiedDate":"2021-10-02"},{"lineNumber":466,"author":{"gitId":"koh-jx"},"content":"10. The locally-stored data should not exceed 5GB in size, for tasks, tags and templates.","lastModifiedDate":"2021-10-02"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"wlren"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-10-05"},{"lineNumber":471,"author":{"gitId":"wlren"},"content":"- **Locally-stored data**: Data stored under ./data/addressbook.json within the same folder\\","lastModifiedDate":"2021-10-05"},{"lineNumber":472,"author":{"gitId":"wlren"},"content":"- **Given index (of a task)**: The location of the task in the tasklist. First task is **1**, and increases in ascending order.","lastModifiedDate":"2021-10-05"},{"lineNumber":473,"author":{"gitId":"wlren"},"content":"- **Templates**: User-defined preset format for a task","lastModifiedDate":"2021-10-05"},{"lineNumber":474,"author":{"gitId":"wlren"},"content":"- **Tags**: User-defined label attached a task to provide identification and/or information","lastModifiedDate":"2021-10-05"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeffsieu":38,"koh-jx":9,"mingyi456":65,"wlren":87,"yeppog":23,"-":305}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"# User Guide V1.2","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"TaskMaster2103 V1.2 is a desktop app for managing contacts as well as tasks, optimized for","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"use via a CLI while still having the benefits of a GUI.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wlren"},"content":"## Table of Contents","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"wlren"},"content":"1. [Quick Start](#quickstart)","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"wlren"},"content":"2. [Features](#features)","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"wlren"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"4. [Command Summary](#commandsummary)","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"wlren"},"content":"\u003ca name\u003d\"quickstart\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"wlren"},"content":"1. Download the latest `taskmaster.jar` from [here](https://github.com/AY2122S1-CS2103-F09-2/tp/releases).","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"wlren"},"content":"   - **`list`** : Lists all contacts.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"wlren"},"content":"   - **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"wlren"},"content":"   - **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"wlren"},"content":"   - **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"wlren"},"content":"   - **`exit`** : Exits the app.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"wlren"},"content":"\u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"wlren"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"wlren"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"wlren"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"wlren"},"content":"  e.g. `[t/TAG]…​` can be used as ``(i.e. 0 times),`t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"wlren"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"wlren"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"wlren"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"wlren"},"content":"- `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"wlren"},"content":"- `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"wlren"},"content":"- Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"wlren"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"wlren"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"wlren"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"wlren"},"content":"- You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"wlren"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"wlren"},"content":"- `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"wlren"},"content":"- `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"wlren"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"wlren"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"wlren"},"content":"- Only the name is searched.","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"wlren"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"wlren"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"wlren"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"wlren"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"wlren"},"content":"- Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"wlren"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"wlren"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"wlren"},"content":"- `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"wlren"},"content":"- `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"wlren"},"content":"### Adding a task: `task add`","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"koh-jx"},"content":"Allows the user to add a task to the current database.","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"koh-jx"},"content":"Each task has a compulsory title field, and textual description, timestamp, and tag as optional fields.","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"koh-jx"},"content":"**Format:**","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"wlren"},"content":"`task add TITLE [d/DESCRIPTION] [ts/TIMESTAMP] [tag/TAG}`","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"koh-jx"},"content":"**Example:**","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"wlren"},"content":"`task add Submit CS2103 UG Draft /ts16/9/2021`","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"wlren"},"content":"### Editing a task: `task edit`","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"wlren"},"content":"Edits an existing task in the task list","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"wlren"},"content":"**Format:**","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"wlren"},"content":"`task edit INDEX [t/TITLE] [d/DESCRIPTION] [ts/TIMESTAMP] [tag/TAG]…`","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"wlren"},"content":"- Edits the task at the specified INDEX. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1,2,3 …","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"wlren"},"content":"- At least one of the optional fields must be provided","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"wlren"},"content":"- Existing values will be updated to the input values.When editing tags, the existing tags of the task will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"wlren"},"content":"- You can remove all the task’s tags by typing tag/ without specifying any tags after it.","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"wlren"},"content":"**Example:**","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"wlren"},"content":"`task edit 1 t/CS2103 Week 6 Quiz`","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"koh-jx"},"content":"### Completing a task: `task done`","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"koh-jx"},"content":"Completes an existing task in the task list","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"koh-jx"},"content":"**Format:**","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"koh-jx"},"content":"`task done INDEX`","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"koh-jx"},"content":"- Completes the task at the specified INDEX. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1,2,3 …","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"koh-jx"},"content":"**Example:**","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"koh-jx"},"content":"`task done 1`","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"wlren"},"content":"### Deleting a task: `task delete`","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"wlren"},"content":"Deletes a specified task from the tasks list by a given index.","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"wlren"},"content":"**Format:**","lastModifiedDate":"2021-10-05"},{"lineNumber":209,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"wlren"},"content":"`task delete INDEX`","lastModifiedDate":"2021-10-05"},{"lineNumber":211,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":212,"author":{"gitId":"wlren"},"content":"- The index refers to the INDEX number of the task that is currently displayed in the GUI.","lastModifiedDate":"2021-10-05"},{"lineNumber":213,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"wlren"},"content":"**Example:**","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":216,"author":{"gitId":"wlren"},"content":"`task delete 2`","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-10-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-10-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":247,"author":{"gitId":"wlren"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":248,"author":{"gitId":"wlren"},"content":"\u003ca name\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2021-10-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"wlren"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":256,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":257,"author":{"gitId":"wlren"},"content":"\u003ca name\u003d\"commandsummary\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"wlren"},"content":"| Action          | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2021-10-05"},{"lineNumber":262,"author":{"gitId":"wlren"},"content":"| --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-05"},{"lineNumber":263,"author":{"gitId":"wlren"},"content":"| **Add**         | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"wlren"},"content":"| **Task Add**    | `task add TITLE [d/DESCRIPTION] [ts/TIMESTAMP] [tag/TAG}`                                                                                                             |","lastModifiedDate":"2021-10-05"},{"lineNumber":265,"author":{"gitId":"wlren"},"content":"| **Clear**       | `clear`                                                                                                                                                               |","lastModifiedDate":"2021-10-05"},{"lineNumber":266,"author":{"gitId":"wlren"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2021-10-05"},{"lineNumber":267,"author":{"gitId":"wlren"},"content":"| **Task Delete** | `task delete INDEX`\u003cbr\u003e e.g., `task delete 3`                                                                                                                         |","lastModifiedDate":"2021-10-05"},{"lineNumber":268,"author":{"gitId":"wlren"},"content":"| **Edit**        | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2021-10-05"},{"lineNumber":269,"author":{"gitId":"wlren"},"content":"| **Task Edit**   | `task edit INDEX [t/TITLE] [d/DESCRIPTION] [ts/TIMESTAMP] [tag/TAG]…` \u003cbr\u003e e.g.,`task edit 1 t/CS2103 Week 6 Quiz`                                                    |","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"wlren"},"content":"| **Find**        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2021-10-05"},{"lineNumber":271,"author":{"gitId":"wlren"},"content":"| **List**        | `list`                                                                                                                                                                |","lastModifiedDate":"2021-10-05"},{"lineNumber":272,"author":{"gitId":"wlren"},"content":"| **Help**        | `help`                                                                                                                                                                |","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"koh-jx":25,"mingyi456":2,"wlren":105,"-":140}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jeffsieu"},"content":"    content: \"TaskMaster2103\";","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jeffsieu":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"title: TaskMaster2103","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103-F09-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-F09-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F09-2/tp/branch/master/graph/badge.svg?token\u003dN3P0ba1qaC)](https://codecov.io/gh/AY2122S1-CS2103-F09-2/tp)","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"TaskMaster2103 helps a student manage their tasks and help them keep up with their busy lives in school. It is optimised for both CLI and GUI users so that students can choose which ever method is preferred for themselves.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"For detailed documentation on the project, please visit the [TaskMaster2103 product website](https://ay2122s1-cs2103-f09-2.github.io/tp/).","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"## Getting Started","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"Prerequisites: JDK11, Gradle","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"For **running the application**: Head to our [releases](https://github.com/AY2122S1-CS2103-F09-2/tp/releases) page and grab the latest `.jar` file.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"For **contributing to the project**:","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"1. Clone this repository","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"2. Open the project in an IDE that has gradle support, or simply run `./gradlew task -all` in the root directory of the project.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"3. Submit your PR and assign it to any one of our developer team members to notify us!","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"## About Us","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"Please refer to the [About Us](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/AboutUs.md) document.  ","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"## User Guide","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"Please refer to the [User Guide](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/UserGuide.md) document for specific details.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"## Developer Guide","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"Please refer to the [Devleoper Guide](https://github.com/AY2122S1-CS2103-F09-2/tp/blob/master/docs/UserGuide.md) for specific details.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jeffsieu":1,"yeppog":26,"-":14}},{"path":"docs/team/advisor.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"title: Hans Sebastian Tirtaputra\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"Programming competencies: \u003cu\u003eJava\u003c/u\u003e...","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"- Interned at Shopee","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"- TA for CS2103 Software Engineering","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"- Indonesian","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"mingyi456":9,"-":8}},{"path":"docs/team/jeffsieu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"koh-jx"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"koh-jx"},"content":"title: Jeff Sieu\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"koh-jx"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"koh-jx"},"content":"Programming competencies: Java, JavaScript, Python, C/C++, HTML/CSS, Dart","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"koh-jx"},"content":"Technologies: ReactJS, Flutter","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"NA (Enlisted in the RSAF)   ","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"#### [Multiverse](https://github.com/wlren/multiverse)","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"- Co-developed an all-in-one NUS app as part of CP2106 Independent Software Development Project (Orbital 2020).","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"#### [Stops](https://play.google.com/store/apps/details?id\u003dcom.jeffsieu.stops)","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"- Simple, elegant Flutter app displaying live bus timings in Singapore.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"#### [txthlpr](https://jeffsieu.github.io/txthlpr/)","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"koh-jx"},"content":"- Web app to perform repetitive actions on a block of text","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"koh-jx"},"content":"#### [tzcharts](https://tzcharts.xyz/)","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"koh-jx"},"content":"- Web app to view information on tzTokens","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"koh-jx"},"content":"#### [quards](https://github.com/jeffsieu/quards)","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"koh-jx"},"content":"- Solitaire Flutter App","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"koh-jx"},"content":"#### Google Code-in 2017","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"koh-jx"},"content":"- Grand Prize winner","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"koh-jx"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"koh-jx"},"content":"- Fluent in English, Chinese, Japanese and German (spoken and written)","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"koh-jx":45}},{"path":"docs/team/koh-jx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"koh-jx"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"koh-jx"},"content":"title: Koh Jia Xian\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"koh-jx"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"koh-jx"},"content":"Programming competencies: Java, Python, C/C++, C#, Javascript, HTML/CSS","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"koh-jx"},"content":"Technologies: ReactJS, Redux, Django, SQLite, AWS S3. Firebase","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"NIL","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"#### CP2106 Independent Software Development Project (Orbital 2020)","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"- Co-developed a timetabler/scheduler web app using ReactJS.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"#### GEQ1917 NUSe Telegram bot and channel","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"- Developed a bot that fosters a culture of mutual exchange of unwanted goods.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"#### CS2103 Software Engineering (individual Project)","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"koh-jx"},"content":"- Worked on a greenfield project on a basic task management chatbot in Java.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"koh-jx"},"content":"#### RV Dining Hall Telegram Bot","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"koh-jx"},"content":"- Monitors and reports the number of seats available in the dining hall.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"koh-jx"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"koh-jx"},"content":"- Fluent in English, Chinese (spoken and written)","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"koh-jx":38}},{"path":"docs/team/mingyi456.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"title: Chen Mingyi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"Programming competencies: C/C++, Java, Python","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"#### (In progress) TIC2001 Data Structure and Algorithms Teaching Assistant","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"- Conducting lab sessions for a group of 21 School of Continuing and Lifelong Education students","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"mingyi456"},"content":"#### (In progress) Special Programme in Science (SPS) Junior Mentor","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"- Facilitating discussions for a lecture group in SP2271 Introduction to the Scientific Literature and learning activities for a lab group in SP2274 Engineering a Life-like Cell.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"- Advising a group of 3 working on a computational model of moisture in bread baking.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"- Assisting in planning the inaugural run of SP2273 Interacting with Science, Pythonically, a new SPS module","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"#### (In progress) SPS Web/System Administrator","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"- Maintaining a WordPress website with slight use of HTML and CSS.","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"#### CP2106 Independent Software Development Project (Orbital 2020)","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"- Co-developed a keyboard-driven music rhythm game in Python and Pygame.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"#### SP3172 Independent Science Project","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"- Replicated a biophysics simulation of the stochastic folding and unfolding kinetics of the dystrophin protein using the Gillespie algorithm in Python.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"#### (In progress) CS2103 Software Engineering (individual Project)","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"- Worked on a greenfield project on a basic task management chatbot in Java.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"#### (In progress) PC3288 Advanced UROPS in Physics I ","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"- Working to help develop an automated ion beam targeting system for facilitating ion beam therapy research on cancer cells in Python.","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"mingyi456"},"content":"#### Govtech Stack the Flags","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"mingyi456"},"content":"- Participated.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"mingyi456"},"content":"#### DSTA BrainHack Cyber Defenders Discovery Camp","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"mingyi456"},"content":"- Participated.","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"mingyi456"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"mingyi456"},"content":"- Fluent in English, Chinese (spoken and written)","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"mingyi456"},"content":"- Physics major","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"mingyi456":59}},{"path":"docs/team/wlren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mingyi456"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"mingyi456"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"mingyi456"},"content":"title: Ren Weilin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"mingyi456"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"mingyi456"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"wlren"},"content":"Programming competencies:  Java, Dart, Python, C#, HTML/CSS, JavaScript, PHP","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"mingyi456"},"content":"Technologies: Flutter, Unity, AWS (Cloud Practitioner certified)","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"mingyi456"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"mingyi456"},"content":"#### Game Development Intern, Rock Nano Global","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"wlren"},"content":"- Designed and implemented various components of 3D game with C# and Unity Editor, including inventory and mission systems, greatly enhancing game experience","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"wlren"},"content":"- Collaborated closely with cross-functioning team including art, game design, technology and QA to ensure smooth transition of project from pre-production to production status","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"wlren"},"content":"- Resolved numerous bugs and JIRA tasks, including a bug which caused development backlog, improved development speed","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"mingyi456"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"mingyi456"},"content":"#### [Multiverse](https://github.com/wlren/multiverse)","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"mingyi456"},"content":"- Attained highest level of “Artemis” (top 8% in cohort of 700) in CP2106 Independent Software","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"mingyi456"},"content":"  Development Project","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"mingyi456"},"content":"  ","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"mingyi456"},"content":"- Identified poor UX in NUS Campus related applications and designed a solution of a mobile","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"mingyi456"},"content":"    application which integrates 4 campus applications under a single dashboard","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"mingyi456"},"content":"    ","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"mingyi456"},"content":"- Co-built android application using Flutter and Firebase, with emphasis on proper Software","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"mingyi456"},"content":"    Development Life Cycle, using Mockito as unit testing library","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"mingyi456"},"content":"#### Bovine Identification","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"mingyi456"},"content":"- Developed a livestock identification algorithm that accurately identifies specific cattle based on","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"mingyi456"},"content":"  muzzle photos with Python and OpenCV, as a solution for livestock insurance","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"mingyi456"},"content":"- Achieved accuracy of 93.3% of matching muzzle photos to individual cattle","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"mingyi456"},"content":"- Awarded $10000 of funding by the I\u0026E Practicum@SoC to pursue project as a start-up","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"mingyi456"},"content":"#### [TrailMix](https://github.com/wlren/trailmix)","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"mingyi456"},"content":"- Developed Flutter application with Google Map APIs to guide user through key attractions in","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"mingyi456"},"content":"  Sungei Buloh Wetland Reserve","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"mingyi456"},"content":"- Attained app rating of 5/5 stars on Google Play Store across all reviews.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"mingyi456"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"mingyi456"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"mingyi456"},"content":"Fluent in English, Chinese (spoken and written)","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"mingyi456":44,"wlren":4}},{"path":"docs/team/yeppog.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"koh-jx"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"koh-jx"},"content":"title: Jonathan Lee\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"koh-jx"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"koh-jx"},"content":"## Technical skills","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"koh-jx"},"content":"Programming competencies: Java, Python, C, Javascript/Typescript, Golang","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"koh-jx"},"content":"Technologies: ReactJS, ReactTS, Redux, Angular 2, MongoDB, Postgressql, SQL, Docker, Jest","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"## Work Experience","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"koh-jx"},"content":"### Software Engineering Intern, Qavar Pte Ltd","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"koh-jx"},"content":"- Handled a full stack project in Golang, Angular and Docker","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"- Used Angular to create front-end site from given wireframes.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"- Wrote unit test code in Jest.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"koh-jx"},"content":"## Projects and Competitions","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"koh-jx"},"content":"### CP2106 Independent Software Development Project (Orbital)","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"koh-jx"},"content":"- Created a social media platform for rock climbers to share solutions to climbing routes.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"- Wrote a custom backend system using NodeJs, Typescript, MongoDB.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"koh-jx"},"content":"- Used React Typescript to handle the frontend of the website.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"## Additional Information","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"koh-jx"},"content":"- Fluent in English, Chinese (spoken and written)","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"koh-jx"},"content":"- Basic competency in Japanese","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"koh-jx":31}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"koh-jx":1,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":5}},{"path":"src/main/java/seedu/address/logic/commands/task/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":" * Adds a task to the task list.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"public class AddTaskCommand extends TaskCommand {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    public static final String FULL_COMMAND_WORD \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    public static final String MESSAGE_USAGE \u003d FULL_COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"            + \": Adds a task with a given title to the task list.\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"            + \"Parameters: title (must be a non-empty string) \"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"            + \"[\" + PREFIX_TIMESTAMP + \"TIMESTAMP] \"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"            + \"Example: \" + FULL_COMMAND_WORD + \" Do homework \"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"            + PREFIX_DESCRIPTION + \"Physics assignment \"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"            + PREFIX_TIMESTAMP + \"25/12/2020\";","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    private final Task task;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"        model.addTask(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":41}},{"path":"src/main/java/seedu/address/logic/commands/task/DoneTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"koh-jx"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"koh-jx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"koh-jx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"koh-jx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"koh-jx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":" * Completes an existing task in the task list.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"koh-jx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"public class DoneTaskCommand extends TaskCommand {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"koh-jx"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"    public static final String FULL_COMMAND_WORD \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task completed: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"    public static final String MESSAGE_ALREADY_DONE \u003d \"Task has already been completed: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"koh-jx"},"content":"    public static final String MESSAGE_USAGE \u003d FULL_COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"            + \": Completes an existing task in the task list.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"koh-jx"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"            + \"Example: \" + FULL_COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"    private final Index index;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"    public DoneTaskCommand(Index index) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"koh-jx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"koh-jx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"koh-jx"},"content":"        Task task;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"koh-jx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"koh-jx"},"content":"            task \u003d model.getTaskAtIndex(index.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"koh-jx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"koh-jx"},"content":"            return new CommandResult(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"koh-jx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"koh-jx"},"content":"        if (task.getDone()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"koh-jx"},"content":"            return new CommandResult(String.format(MESSAGE_ALREADY_DONE, task));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"koh-jx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"koh-jx"},"content":"        task.setDone();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"koh-jx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"koh-jx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"koh-jx":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"jeffsieu"},"content":"        // Every command starting with \"task\" delegated to TaskCommandParser","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"jeffsieu"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"jeffsieu"},"content":"            return new TaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeffsieu":5,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    /* Task-related prefix definitions */","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    public static final Prefix PREFIX_TIMESTAMP \u003d new Prefix(\"ts/\");","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeffsieu":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"jeffsieu"},"content":"     * Parses {@code String timestamp} into a {@code Timestamp}.","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"jeffsieu"},"content":"     * @param timestamp The timestamp string to parse","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"jeffsieu"},"content":"     * @return A parsed timestamp","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"jeffsieu"},"content":"    public static Timestamp parseTimestamp(String timestamp) {","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"jeffsieu"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"jeffsieu"},"content":"        return new Timestamp(timestamp);","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeffsieu":11,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/TaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.commands.task.DoneTaskCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.task.AddTaskCommandParser;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.parser.task.DoneTaskCommandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":" * Parses all task-related commands (those starting with \"task\") and returns a TaskCommand.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"public class TaskCommandParser implements Parser\u003cTaskCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    public TaskCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"koh-jx"},"content":"        case DoneTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"koh-jx"},"content":"            return new DoneTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"        default:","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":40,"koh-jx":4}},{"path":"src/main/java/seedu/address/logic/parser/task/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_TIMESTAMP, PREFIX_TAG);","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"        String title \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"        if (title.isEmpty()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).orElse(null);","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        Timestamp timestamp \u003d argMultimap.getValue(PREFIX_TIMESTAMP).map(ParserUtil::parseTimestamp).orElse(null);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"        return new AddTaskCommand(new Task(title, description, timestamp, tags));","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":39}},{"path":"src/main/java/seedu/address/logic/parser/task/DoneTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"koh-jx"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"koh-jx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"koh-jx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.commands.task.DoneTaskCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"koh-jx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"koh-jx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"koh-jx"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"koh-jx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"koh-jx"},"content":"public class DoneTaskCommandParser implements Parser\u003cDoneTaskCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"koh-jx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"koh-jx"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneTaskCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"koh-jx"},"content":"     * and returns a DoneTaskCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"koh-jx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"koh-jx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"koh-jx"},"content":"    public DoneTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"koh-jx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"koh-jx"},"content":"            return new DoneTaskCommand(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"koh-jx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"koh-jx"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"koh-jx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"koh-jx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"koh-jx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"koh-jx":29}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"jeffsieu"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"koh-jx"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"jeffsieu"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"koh-jx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"koh-jx"},"content":"     * Retrieve task at the specified index.","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"koh-jx"},"content":"     * @param index Index of task displayed in the GUI.","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"koh-jx"},"content":"     * @return Task corresponding to the index provided.","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"koh-jx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"koh-jx"},"content":"    Task getTaskAtIndex(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeffsieu":6,"koh-jx":8,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"koh-jx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskMaster2103 \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"jeffsieu"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"jeffsieu"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"koh-jx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"koh-jx"},"content":"    public Task getTaskAtIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"koh-jx"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeffsieu":10,"koh-jx":7,"-":151}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":" * Guarantees: title is present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"public class Task {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    private final String title;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    // Optional description fields","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    private final String description;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"    private final Timestamp timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"koh-jx"},"content":"    private boolean done;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"     * Creates a task with a given title, and optionally a description, timestamp and a set of tags.","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"     * @param title The title of the task","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"     * @param description The optional description of the task","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"     * @param timestamp The optional timestamp of the task","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"     * @param tags The tags of the task","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    public Task(String title, String description, Timestamp timestamp, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"        requireAllNonNull(title, tags);","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"koh-jx"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"    public String getTitle() {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"        return title;","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"        return description;","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"    public Timestamp getTimestamp() {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"        return timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"        return tags;","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"koh-jx"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"koh-jx"},"content":"        return done;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"koh-jx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"koh-jx"},"content":"     * TODO Replace setter with EditTaskDescriptor once that and edit command is completed","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"koh-jx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"koh-jx"},"content":"    public void setDone() {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"koh-jx"},"content":"        done \u003d !done;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"koh-jx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"jeffsieu"},"content":"        return title;","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":58,"koh-jx":13}},{"path":"src/main/java/seedu/address/model/task/Timestamp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":" * Represents a timestamp for a task.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"public class Timestamp {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"    private final String timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"     * Creates a TimeStamp with the given string.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"     * @param timestamp the string representing the timestamp","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    public Timestamp(String timestamp) {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    // TODO: Create a DateTime representation of timestamps","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jeffsieu":18}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"jeffsieu"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"jeffsieu"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"jeffsieu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"koh-jx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"koh-jx"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"koh-jx"},"content":"        public Task getTaskAtIndex(int index) {","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"koh-jx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"koh-jx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jeffsieu":6,"koh-jx":5,"-":194}}]
