[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"# Tuition Address Book (TAB)","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F13-3/tp/actions)","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F13-3/tp/branch/master/graph/badge.svg?token\u003dZHYAC5NIS7)](https://codecov.io/gh/AY2122S1-CS2103T-F13-3/tp)","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"Busy private 1-to-1 home tutors can find it difficult to remember all their students\u0027 information.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"**Tuition Address Book (TAB)** is an all-in-one desktop application that helps keep track of large amounts of student and lesson information, to empower tutors to provide the best quality home tuition service.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"TAB comes with a clean Graphical User Interface (GUI) while optimised for user interaction via a CLI (Command Line Interface). Use TAB to effortlessly manage customer contacts faster than a typical mouse/GUI driven app!","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"## Links","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"- [User Guide](https://ay2122s1-cs2103t-f13-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"- [Developer Guide](https://ay2122s1-cs2103t-f13-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"- [About Us](https://ay2122s1-cs2103t-f13-3.github.io/tp/AboutUs.html)","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"lingshanng":16,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"angkoonhwee"},"content":"### Chester Wong","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"angkoonhwee"},"content":"\u003cimg src\u003d\"images/chesterwongz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"angkoonhwee"},"content":"[[github](https://github.com/Chesterwongz)]","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"angkoonhwee"},"content":"[[portfolio](https://www.linkedin.com/in/zhi-chester-wong-46a6b41b5?lipi\u003durn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3BS8WG6LsATxiSCaqmdnTWtA%3D%3D)]","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"angkoonhwee"},"content":"* Role: Developer","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"angkoonhwee"},"content":"### Eliana Pang","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"angkoonhwee"},"content":"\u003cimg src\u003d\"images/eeliana.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"angkoonhwee"},"content":"[[github](http://github.com/eeliana)]","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"angkoonhwee"},"content":"* Role: Developer","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"angkoonhwee"},"content":"### Ng Lingshan","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"angkoonhwee"},"content":"\u003cimg src\u003d\"images/lingshanng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"angkoonhwee"},"content":"[[github](http://github.com/lingshanng)]","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"angkoonhwee"},"content":"* Responsibility: Code Quality","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"angkoonhwee"},"content":"### Wu Xiao Yun","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"angkoonhwee"},"content":"\u003cimg src\u003d\"images/xiaoyunnn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"angkoonhwee"},"content":"[[github](http://github.com/Xiaoyunnn)]","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"angkoonhwee"},"content":"* Role: Developer, UI Designer","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"angkoonhwee"},"content":"* Responsibility: UI","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"angkoonhwee"},"content":"### Ang Koon Hwee","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"angkoonhwee"},"content":"\u003cimg src\u003d\"images/angkoonhwee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"angkoonhwee"},"content":"[[github](http://github.com/angkoonhwee)]","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"angkoonhwee":21,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Chesterwongz"},"content":"A private 1-to-1 home tuition teacher in Singapore that:","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"Chesterwongz"},"content":"1. has a need to manage not more than 50 student contacts","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"Chesterwongz"},"content":"2. has a need to manage admin details of each student, namely, lesson fees and payment","lastModifiedDate":"2021-09-24"},{"lineNumber":264,"author":{"gitId":"Chesterwongz"},"content":"3. has a need to keep track of lesson details for each student","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"Chesterwongz"},"content":"4. teaches lessons anytime between 8am and 10pm (UTC+8), on any day of the week","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"Chesterwongz"},"content":"5. has a need to manage a busy schedule of not more than 50 lessons","lastModifiedDate":"2021-09-25"},{"lineNumber":267,"author":{"gitId":"Chesterwongz"},"content":"6. prefers desktop apps over other types","lastModifiedDate":"2021-09-25"},{"lineNumber":268,"author":{"gitId":"Chesterwongz"},"content":"7. can type fast","lastModifiedDate":"2021-09-25"},{"lineNumber":269,"author":{"gitId":"Chesterwongz"},"content":"8. prefers typing to mouse interactions","lastModifiedDate":"2021-09-25"},{"lineNumber":270,"author":{"gitId":"Chesterwongz"},"content":"9. is reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-25"},{"lineNumber":271,"author":{"gitId":"Chesterwongz"},"content":"10. tutors students belonging to Singapore’s education system","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":273,"author":{"gitId":"Chesterwongz"},"content":"**Value proposition**: Use **TAB** to manage customer contacts and customer relationships faster than ","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"Chesterwongz"},"content":"a typical mouse/GUI driven app. **TAB** effortlessly keeps track of large amounts of necessary ","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"Chesterwongz"},"content":"student and lesson information, to empower tutors to provide the best quality home tuition service.  ","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"Chesterwongz"},"content":"We categorise our user stories into three main epics:","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"Chesterwongz"},"content":"1. [S] - Keeping track of student information","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"Chesterwongz"},"content":"2. [L] - Keeping track of lesson information","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"Chesterwongz"},"content":"3. [U] - Having a simple, efficient, and intuitive UI/UX","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"Chesterwongz"},"content":"Priorities: High - must have; Medium - nice to have;  Low - unlikely to have.","lastModifiedDate":"2021-09-27"},{"lineNumber":286,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":287,"author":{"gitId":"Chesterwongz"},"content":"| ID  | Priority | As a …​                                 | I want to …​                            | So that I can…​                                                     |","lastModifiedDate":"2021-09-24"},{"lineNumber":288,"author":{"gitId":"Chesterwongz"},"content":"|-----| -------- | ------------------------------------------ | ------------------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"Chesterwongz"},"content":"| S1  | `HIGH`   | user                                       | add a new student                          | track student information with **TAB**                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"Chesterwongz"},"content":"| S2  | `HIGH`   | user                                       | delete a student                           | remove entries that I no longer need                                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"Chesterwongz"},"content":"| S3  | `HIGH`   | user                                       | edit a student                             | update student information                                             |","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"Chesterwongz"},"content":"| S4  | `HIGH`   | user                                       | categorise my students with tags           |                                                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":293,"author":{"gitId":"Chesterwongz"},"content":"| S5  | `HIGH`   | user                                       | keep track of parent contacts              | communicate directly with the parent                                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"Chesterwongz"},"content":"| S6  | `HIGH`   | user                                       | add remarks to a student                   | keep track of supplementary information                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"Chesterwongz"},"content":"| S7  | `MEDIUM` | user                                       | keep track of a student\u0027s school           |                                                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":296,"author":{"gitId":"Chesterwongz"},"content":"| S8  | `MEDIUM` | user                                       | keep track of a student\u0027s academic level   | be reminded of the content that is relevant to the student             |","lastModifiedDate":"2021-09-27"},{"lineNumber":297,"author":{"gitId":"Chesterwongz"},"content":"| S9  | `MEDIUM` | user                                       | keep track of a student\u0027s outstanding fees | be reminded of the fees I have yet to collect                          |","lastModifiedDate":"2021-09-27"},{"lineNumber":298,"author":{"gitId":"Chesterwongz"},"content":"| S10 | `LOW`    | user                                       | have an archive for removed students       | revisit the archived data if the need arises                           |","lastModifiedDate":"2021-09-27"},{"lineNumber":299,"author":{"gitId":"Chesterwongz"},"content":"| S11 | `LOW`    | user with many students stored in **TAB**  | sort students by name                      | locate a student easily                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"Chesterwongz"},"content":"| S12 | `LOW`    | user with many students stored in **TAB**  | sort students by tag                       | locate a student easily                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"Chesterwongz"},"content":"| L1  | `HIGH`   | user                                       | schedule recurring lessons for a student   | keep track of when the student\u0027s lessons are                           |","lastModifiedDate":"2021-09-24"},{"lineNumber":302,"author":{"gitId":"Chesterwongz"},"content":"| L2  | `HIGH`   | user                                       | delete a student\u0027s lesson                  | remove lessons that I no longer have                                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"Chesterwongz"},"content":"| L3  | `MEDIUM` | user                                       | edit a student\u0027s lesson                    | update lesson information                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":304,"author":{"gitId":"Chesterwongz"},"content":"| L4  | `MEDIUM` | user                                       | add makeup lessons for a student           | differentiate between the two different lessons                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":305,"author":{"gitId":"Chesterwongz"},"content":"| L5  | `MEDIUM` | user                                       | view the lessons I have for the week       | easily manage my schedule                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"Chesterwongz"},"content":"| L6  | `MEDIUM` | user                                       | view a calendar of my scheduled lessons    | plan ahead while managing my schedule                                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"Chesterwongz"},"content":"| U1  | `HIGH`   | new user                                   | see usage instructions                     | refer to instructions whenever I need guidance on how to use **TAB**   |","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"Chesterwongz"},"content":"| U2  | `HIGH`   | new user                                   | purge all current data                     | remove all sample/experimental data I used while exploring **TAB**     |","lastModifiedDate":"2021-09-27"},{"lineNumber":309,"author":{"gitId":"Chesterwongz"},"content":"| U3  | `HIGH`   | user                                       | find a student by keyword                  | locate details of students without having to go through the entire list |","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"Chesterwongz"},"content":"| U4  | `HIGH`   | user                                       | undo accidental changes                    |                                                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"Chesterwongz"},"content":"| U5  | `MEDIUM` | user                                       | filter students by tags                    | view a list of all the students that feature the specified tags        |","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"Chesterwongz"},"content":"| U6  | `MEDIUM` | user with incomplete information           | skip less important information to add     | update later when I have the rest of the information                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"Chesterwongz"},"content":"| U7  | `MEDIUM` | user                                       | select and copy data to desktop clipboard  | paste and use the data outside of **TAB**                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":314,"author":{"gitId":"Chesterwongz"},"content":"| U8  | `LOW`    | user who uses many tags                    | view all tags                              | remember my tags easily                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":315,"author":{"gitId":"Chesterwongz"},"content":"| U9  | `LOW`    | expert user                                | customise the commands and input fields    | choose not to follow the given template                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"Chesterwongz"},"content":"| U10 | `LOW`    | user                                       | be reminded to update data after a lesson  | ensure that data stays up to date                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Chesterwongz"},"content":"(For all use cases below, the **System** is the `TuitionAddressBook` aka `TAB`, and the **Actor** is the tutor `user`, unless specified otherwise)","lastModifiedDate":"2021-09-25"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC1 - Get a list of students**","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"Chesterwongz"},"content":"1. User requests to list all students","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"Chesterwongz"},"content":"2. TAB displays a list of all students","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":333,"author":{"gitId":"Xiaoyunnn"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":334,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":335,"author":{"gitId":"Chesterwongz"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":337,"author":{"gitId":"Chesterwongz"},"content":"* 1a. User requests for a list of students filtered by a specified tag","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":339,"author":{"gitId":"Chesterwongz"},"content":"  * 1a1. TAB displays a filtered list of students with the specified tag","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"Xiaoyunnn"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":341,"author":{"gitId":"Chesterwongz"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"Xiaoyunnn"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":343,"author":{"gitId":"Chesterwongz"},"content":"* 1b. User requests for a list of students that match a specified keyword","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":345,"author":{"gitId":"Chesterwongz"},"content":"  * 1b1. TAB displays a list of students with data matching the keyword","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC2 - Add a new student**","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"Chesterwongz"},"content":"1. User requests to add a new student with specified fields","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"Chesterwongz"},"content":"2. TAB adds the student with the specified fields","lastModifiedDate":"2021-09-26"},{"lineNumber":357,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":358,"author":{"gitId":"Chesterwongz"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":359,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":360,"author":{"gitId":"Chesterwongz"},"content":"**Extension**","lastModifiedDate":"2021-09-26"},{"lineNumber":361,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":362,"author":{"gitId":"Chesterwongz"},"content":"* 1a. TAB detects that the entered student data does not satisfy requirements","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"Chesterwongz"},"content":"    * 1a1. TAB displays an error message and the recommended changes","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":366,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"Chesterwongz"},"content":"* 1b. TAB detects a duplicate student","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"Chesterwongz"},"content":"    * 1b1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":372,"author":{"gitId":"Chesterwongz"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":374,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":376,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC3 – Edit a student**","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":378,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":380,"author":{"gitId":"Chesterwongz"},"content":"1. User \u003cins\u003egets a list of students (UC1)\u003c/ins\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"Chesterwongz"},"content":"2. User requests to edit certain fields of specific student in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":382,"author":{"gitId":"Chesterwongz"},"content":"3. TAB updates the corresponding fields of the student","lastModifiedDate":"2021-09-26"},{"lineNumber":383,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":384,"author":{"gitId":"Chesterwongz"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":385,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":388,"author":{"gitId":"Chesterwongz"},"content":"* 1a. The list is empty","lastModifiedDate":"2021-09-26"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Chesterwongz"},"content":"* 2a. The given index is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Chesterwongz"},"content":"    * 2a1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Chesterwongz"},"content":"* 2b. No fields to be edited are specified","lastModifiedDate":"2021-09-26"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB shows an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":401,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":402,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":403,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":404,"author":{"gitId":"Chesterwongz"},"content":"* 2c. TAB detects that the entered student data does not satisfy requirements","lastModifiedDate":"2021-09-26"},{"lineNumber":405,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":406,"author":{"gitId":"Chesterwongz"},"content":"    * 2c1. TAB displays an error message and the recommended changes","lastModifiedDate":"2021-09-26"},{"lineNumber":407,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":408,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":409,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":410,"author":{"gitId":"Chesterwongz"},"content":"* 2d. TAB detects a duplicate student","lastModifiedDate":"2021-09-26"},{"lineNumber":411,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":412,"author":{"gitId":"Chesterwongz"},"content":"    * 2d1. TAB shows an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":413,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":414,"author":{"gitId":"Chesterwongz"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":415,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":416,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":417,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":418,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC4 - Delete a student**","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":420,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":421,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":422,"author":{"gitId":"Chesterwongz"},"content":"1. User \u003cins\u003egets a list of students (UC1)\u003c/ins\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"Chesterwongz"},"content":"2. User requests to delete a specific student in the list","lastModifiedDate":"2021-09-25"},{"lineNumber":424,"author":{"gitId":"Chesterwongz"},"content":"3. TAB deletes the student","lastModifiedDate":"2021-09-25"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"Chesterwongz"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"Chesterwongz"},"content":"* 1a. The list is empty","lastModifiedDate":"2021-09-25"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"Chesterwongz"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":433,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":434,"author":{"gitId":"Chesterwongz"},"content":"* 2a. The given index is invalid","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":436,"author":{"gitId":"Chesterwongz"},"content":"    * 2a1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":437,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":438,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-25"},{"lineNumber":439,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":440,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":441,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":442,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC5 - Add a student\u0027s lesson information**","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":445,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":446,"author":{"gitId":"Chesterwongz"},"content":"1. User \u003cins\u003egets a list of students (UC1)\u003c/ins\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"Chesterwongz"},"content":"2. User requests to add a lesson for a specific student in the list","lastModifiedDate":"2021-09-25"},{"lineNumber":448,"author":{"gitId":"Chesterwongz"},"content":"3. TAB adds the lesson to the student specified","lastModifiedDate":"2021-09-25"},{"lineNumber":449,"author":{"gitId":"Chesterwongz"},"content":"    ","lastModifiedDate":"2021-09-25"},{"lineNumber":450,"author":{"gitId":"Chesterwongz"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":451,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":452,"author":{"gitId":"Chesterwongz"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":453,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":454,"author":{"gitId":"Chesterwongz"},"content":"* 1a. The list is empty","lastModifiedDate":"2021-09-25"},{"lineNumber":455,"author":{"gitId":"Chesterwongz"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":456,"author":{"gitId":"Chesterwongz"},"content":"  Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":457,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":458,"author":{"gitId":"Chesterwongz"},"content":"* 2a. The given index is invalid","lastModifiedDate":"2021-09-25"},{"lineNumber":459,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":460,"author":{"gitId":"Chesterwongz"},"content":"  * 2a1. TAB shows an error message","lastModifiedDate":"2021-09-25"},{"lineNumber":461,"author":{"gitId":"Chesterwongz"},"content":"    ","lastModifiedDate":"2021-09-25"},{"lineNumber":462,"author":{"gitId":"Chesterwongz"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-25"},{"lineNumber":463,"author":{"gitId":"Chesterwongz"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":464,"author":{"gitId":"Chesterwongz"},"content":"* 2b. TAB detects that the entered lesson data does not satisfy requirements","lastModifiedDate":"2021-09-26"},{"lineNumber":465,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":466,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB displays an error message and the recommended changes","lastModifiedDate":"2021-09-26"},{"lineNumber":467,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":468,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-25"},{"lineNumber":469,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":470,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":471,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":472,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC6 – Edit a student’s lesson information**","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":474,"author":{"gitId":"eeliana"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":475,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":476,"author":{"gitId":"Chesterwongz"},"content":"1. User \u003cins\u003egets a list of students (UC1)\u003c/ins\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":477,"author":{"gitId":"Chesterwongz"},"content":"2. User requests to edit certain fields of a specific lesson of a specific student in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":478,"author":{"gitId":"Chesterwongz"},"content":"3. TAB updates the corresponding fields of the lesson for the specified student","lastModifiedDate":"2021-09-26"},{"lineNumber":479,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":480,"author":{"gitId":"eeliana"},"content":"   Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":481,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":482,"author":{"gitId":"eeliana"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":483,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":484,"author":{"gitId":"Chesterwongz"},"content":"* 1a. The list is empty","lastModifiedDate":"2021-09-25"},{"lineNumber":485,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":486,"author":{"gitId":"eeliana"},"content":"  Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":487,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":488,"author":{"gitId":"Chesterwongz"},"content":"* 2a. The specified student has no lessons","lastModifiedDate":"2021-09-26"},{"lineNumber":489,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":490,"author":{"gitId":"Chesterwongz"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":491,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":492,"author":{"gitId":"Chesterwongz"},"content":"* 2b. The given index of the student is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":493,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":494,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":495,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":496,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":497,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":498,"author":{"gitId":"Chesterwongz"},"content":"* 2c. The given index of the lesson of the student is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":499,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":500,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":501,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":502,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":503,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":504,"author":{"gitId":"Chesterwongz"},"content":"* 2b. No lesson fields to be edited are specified","lastModifiedDate":"2021-09-26"},{"lineNumber":505,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":506,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":507,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":508,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":509,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":510,"author":{"gitId":"Chesterwongz"},"content":"* 2d. TAB detects that the entered lesson data does not satisfy requirements","lastModifiedDate":"2021-09-26"},{"lineNumber":511,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":512,"author":{"gitId":"Chesterwongz"},"content":"    * 2d1. TAB displays an error message and the recommended changes","lastModifiedDate":"2021-09-26"},{"lineNumber":513,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":514,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":515,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":516,"author":{"gitId":"Chesterwongz"},"content":"* 2e. TAB detects clashing lessons","lastModifiedDate":"2021-09-26"},{"lineNumber":517,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":518,"author":{"gitId":"Chesterwongz"},"content":"    * 2e1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":519,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":520,"author":{"gitId":"Xiaoyunnn"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":521,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":522,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":523,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":524,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC7 – Delete a student’s lesson information**","lastModifiedDate":"2021-09-29"},{"lineNumber":525,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":526,"author":{"gitId":"angkoonhwee"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":527,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":528,"author":{"gitId":"Chesterwongz"},"content":"1. User \u003cins\u003egets a list of students (UC1)\u003c/ins\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":529,"author":{"gitId":"Chesterwongz"},"content":"2. User requests to delete a specific lesson for a specific student","lastModifiedDate":"2021-09-26"},{"lineNumber":530,"author":{"gitId":"Chesterwongz"},"content":"3. TAB deletes the specified lesson from the specified student in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":531,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":532,"author":{"gitId":"angkoonhwee"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":533,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":534,"author":{"gitId":"Chesterwongz"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":535,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":536,"author":{"gitId":"Chesterwongz"},"content":"* 1a. The list is empty","lastModifiedDate":"2021-09-26"},{"lineNumber":537,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":538,"author":{"gitId":"Chesterwongz"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":539,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":540,"author":{"gitId":"Chesterwongz"},"content":"* 2a. The given index of the student is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":541,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":542,"author":{"gitId":"Chesterwongz"},"content":"    * 2a1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":543,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":544,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":545,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":546,"author":{"gitId":"Chesterwongz"},"content":"* 2b. The given index of the lesson of the specified student is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":547,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":548,"author":{"gitId":"Chesterwongz"},"content":"    * 2b1. TAB displays an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":549,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":550,"author":{"gitId":"Chesterwongz"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":551,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":552,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":553,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":554,"author":{"gitId":"Chesterwongz"},"content":"**Use Case: UC8 – View quick start instructions**","lastModifiedDate":"2021-09-29"},{"lineNumber":555,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":556,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":557,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":558,"author":{"gitId":"Chesterwongz"},"content":"1. User opens the app","lastModifiedDate":"2021-09-26"},{"lineNumber":559,"author":{"gitId":"Chesterwongz"},"content":"2. TAB displays quick start instructions","lastModifiedDate":"2021-09-26"},{"lineNumber":560,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":561,"author":{"gitId":"Chesterwongz"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":562,"author":{"gitId":"angkoonhwee"},"content":"   ","lastModifiedDate":"2021-09-25"},{"lineNumber":563,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":564,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":565,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC9 – Get help**","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":567,"author":{"gitId":"Chesterwongz"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":568,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":569,"author":{"gitId":"Chesterwongz"},"content":"1. User requests for help","lastModifiedDate":"2021-09-26"},{"lineNumber":570,"author":{"gitId":"Chesterwongz"},"content":"2. TAB displays a summary table of all the command usages as well as a link to an online user guide page","lastModifiedDate":"2021-09-26"},{"lineNumber":571,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":572,"author":{"gitId":"Chesterwongz"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":573,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":574,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":575,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":576,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC10 - Undo an accidental modification**","lastModifiedDate":"2021-09-29"},{"lineNumber":577,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":578,"author":{"gitId":"angkoonhwee"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":579,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":580,"author":{"gitId":"Chesterwongz"},"content":"1. User requests to undo a previous modification to TAB\u0027s data within the session","lastModifiedDate":"2021-09-26"},{"lineNumber":581,"author":{"gitId":"Chesterwongz"},"content":"2. TAB undoes the previous modification","lastModifiedDate":"2021-09-26"},{"lineNumber":582,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":583,"author":{"gitId":"angkoonhwee"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":584,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":585,"author":{"gitId":"angkoonhwee"},"content":"**Extension**","lastModifiedDate":"2021-09-25"},{"lineNumber":586,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":587,"author":{"gitId":"Chesterwongz"},"content":"* 1a. There are no previous modifications","lastModifiedDate":"2021-09-26"},{"lineNumber":588,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":589,"author":{"gitId":"Chesterwongz"},"content":"  * 1a1. TAB shows an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":590,"author":{"gitId":"Chesterwongz"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":591,"author":{"gitId":"Chesterwongz"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":592,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":593,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":594,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":595,"author":{"gitId":"Chesterwongz"},"content":"**Use case: UC11 - Redo an undone modification**","lastModifiedDate":"2021-09-29"},{"lineNumber":596,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":597,"author":{"gitId":"angkoonhwee"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":598,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":599,"author":{"gitId":"Chesterwongz"},"content":"1. User requests to redo a modification to TAB\u0027s data that was previously undone within the session","lastModifiedDate":"2021-09-26"},{"lineNumber":600,"author":{"gitId":"Chesterwongz"},"content":"2. TAB reverts the previous undo command","lastModifiedDate":"2021-09-26"},{"lineNumber":601,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":602,"author":{"gitId":"angkoonhwee"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":603,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":604,"author":{"gitId":"angkoonhwee"},"content":"**Extension**","lastModifiedDate":"2021-09-25"},{"lineNumber":605,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":606,"author":{"gitId":"Chesterwongz"},"content":"* 1a. There are no previous undo requests within the session","lastModifiedDate":"2021-09-26"},{"lineNumber":607,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":608,"author":{"gitId":"Chesterwongz"},"content":"    * 1a1. TAB shows an error message","lastModifiedDate":"2021-09-26"},{"lineNumber":609,"author":{"gitId":"angkoonhwee"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":610,"author":{"gitId":"Chesterwongz"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":611,"author":{"gitId":"angkoonhwee"},"content":"    ","lastModifiedDate":"2021-09-25"},{"lineNumber":612,"author":{"gitId":"Chesterwongz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"Chesterwongz"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed","lastModifiedDate":"2021-09-26"},{"lineNumber":617,"author":{"gitId":"Chesterwongz"},"content":"2. The response to any user action should become visible within 2 seconds","lastModifiedDate":"2021-09-26"},{"lineNumber":618,"author":{"gitId":"Chesterwongz"},"content":"3. Should be able to hold up to 50 students and 50 lessons without a noticeable sluggishness in performance for typical usage","lastModifiedDate":"2021-09-26"},{"lineNumber":619,"author":{"gitId":"Chesterwongz"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse","lastModifiedDate":"2021-09-26"},{"lineNumber":620,"author":{"gitId":"Chesterwongz"},"content":"5. The source code should be open source","lastModifiedDate":"2021-09-26"},{"lineNumber":621,"author":{"gitId":"Chesterwongz"},"content":"6. The product is offered as a free service","lastModifiedDate":"2021-09-27"},{"lineNumber":622,"author":{"gitId":"Chesterwongz"},"content":"7. This product is for individual use","lastModifiedDate":"2021-09-27"},{"lineNumber":623,"author":{"gitId":"Chesterwongz"},"content":"8. Student and lesson data should be persistent","lastModifiedDate":"2021-09-26"},{"lineNumber":624,"author":{"gitId":"Chesterwongz"},"content":"9. All features should be easily testable","lastModifiedDate":"2021-09-26"},{"lineNumber":625,"author":{"gitId":"Chesterwongz"},"content":"10. Should be portable, i.e. user can transfer data from one device to another easily","lastModifiedDate":"2021-09-26"},{"lineNumber":626,"author":{"gitId":"Chesterwongz"},"content":"11. Should allow users to easily navigate the app interface","lastModifiedDate":"2021-09-26"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"Chesterwongz"},"content":"* **Academic level**: Mainstream academic years from primary to tertiary education in Singapore (i.e. Primary 1-6, Secondary 1-5, Junior College 1-2 and Year 1-6)","lastModifiedDate":"2021-09-27"},{"lineNumber":632,"author":{"gitId":"Chesterwongz"},"content":"* **Academic stream**: Mainstream tracks in Singapore (i.e. Express, NA, NT, IP, IB) as well as other common exam streams (e.g. IELTS, SAT, ACT)","lastModifiedDate":"2021-09-27"},{"lineNumber":633,"author":{"gitId":"Chesterwongz"},"content":"* **Makeup lesson**: A lesson that occurs only once, for a student who has missed a previous lesson","lastModifiedDate":"2021-09-27"},{"lineNumber":634,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"Chesterwongz"},"content":"* **Outstanding fees**: Tuition fees that have yet to be collected","lastModifiedDate":"2021-09-27"},{"lineNumber":636,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"Chesterwongz"},"content":"* **Recurring lesson**: A lesson that will occur more than once in patterned intervals","lastModifiedDate":"2021-09-27"},{"lineNumber":638,"author":{"gitId":"Chesterwongz"},"content":"* **Session**: A session begins when the app is started and ends when the app is exited","lastModifiedDate":"2021-09-27"},{"lineNumber":639,"author":{"gitId":"Chesterwongz"},"content":"* **UTC+8**: The UTC offset used by Singapore Standard Time (SST), 8 hours ahead of UTC. Historically also referred to as GMT+8.","lastModifiedDate":"2021-09-27"},{"lineNumber":640,"author":{"gitId":"Chesterwongz"},"content":"  UTC, or Coordinated Universal Time, is the primary time standard by which the world regulates clocks and time.","lastModifiedDate":"2021-09-27"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":642,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Chesterwongz":256,"lingshanng":3,"angkoonhwee":42,"Xiaoyunnn":21,"eeliana":16,"-":355}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"AddressBook Level 3 (AB3) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"**:information_source: JDK Installation Guide**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"You can install the required JDK and JRE from the ","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"[Java SE Development Kit Downloads page](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"Here is a [website](https://docs.oracle.com/en/java/javase/17/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A)","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"to help you with the installation. Select the corresponding OS you are working on for a detailed guide.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"2. Download the latest `TAB.jar` from [here](https://github.com/AY2122S1-CS2103T-F13-3/tp/releases).","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TAB.","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"4. Double-click the file to start the app. The window similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"angkoonhwee"},"content":"### Viewing a student\u0027s details : `view`","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"angkoonhwee"},"content":"\u003e ❕❕ \u003cb\u003eNote:\u003c/b\u003e This feature is subject to changes","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"angkoonhwee"},"content":"View data of student with specified index in detail.","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"angkoonhwee"},"content":"![view student details](images/viewAlexDetail.png)","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"angkoonhwee"},"content":"Format: `view INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"Chesterwongz"},"content":"### Viewing schedule: `schedule` [coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"Displays a read-only weekly schedule.","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Chesterwongz"},"content":"Format: `schedule`","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"### Adding a student: `add`","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"Adds a student to the tuition address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"Format: `add n/NAME a/ADDRESS [p/PHONE_NUMBER] [e/EMAIL] [pp/PARENT_PHONE_NUMBER] [pe/PARENT_EMAIL] [sch/SCHOOL] [stream/ACAD_STREAM] [lvl/ACAD_LEVEL] [f/OUTSTANDING_FEES] [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Chesterwongz"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"Chesterwongz"},"content":"**:information_source: Notes about the add command:**\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"Chesterwongz"},"content":"* At least one contact field is required.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"Chesterwongz"},"content":"  e.g. at least one of the `p/PHONE_NUMBER`, `e/EMAIL`, `pp/PARENT_PHONE_NUMBER`, or `pe/PARENT_EMAIL` fields must be ","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"  included in the add command.","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Chesterwongz"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pp/92345678 pe/jackdoe@example.com sch/John\u0027s School stream/John stream lvl/J1`","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"* `add n/Betsy Crowe t/cousin a/Newgate p/91234567 f/150.50 r/hasnt pay tuition fee for Aug t/retainee`","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Chesterwongz"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Chesterwongz"},"content":"Shows a list of all students in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Chesterwongz"},"content":"### Editing a student : `edit`","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Chesterwongz"},"content":"Edits an existing student in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"Chesterwongz"},"content":"Format: `edit INDEX [n/NAME] [a/ADDRESS] [p/PHONE] [e/EMAIL] [pp/PARENT_PHONE_NUMBER] [pe/PARENT_EMAIL] [sch/SCHOOL] [stream/ACAD_STREAM] [lvl/ACAD_LEVEL] [f/OUTSTANDING_FEES] [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"Chesterwongz"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"**:information_source: Notes about the edit command:**\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Chesterwongz"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed list of students.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"  e.g. `edit 2` means that you wish to edit the 2nd student in the displayed list.","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"Chesterwongz"},"content":"* You must provide at least one field.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"Chesterwongz"},"content":"  e.g. entering just `edit 2` alone is not a valid command. You need to include the field you wish to edit.","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"Chesterwongz"},"content":"* Existing values will be updated to the entered values.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"Chesterwongz"},"content":"  e.g. `edit 2 f/0` will override the outstanding fees of the 2nd student in the displayed list to `0`.","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"Chesterwongz"},"content":"* When editing tags, all existing tags of the student will be removed and replaced with the tags specified.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"Chesterwongz"},"content":"  e.g. `edit 2 t/SEC2 t/IP` will erase the student\u0027s original tags and replace it with the new tags `SEC2` and `IP`.","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"Chesterwongz"},"content":"* You can delete the data in optional fields by supplying a parameter with no arguments.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"  e.g. `edit 2 r/` will remove the remarks for the 2nd student in the displayed list.","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"Chesterwongz"},"content":"* You cannot remove a contact field if it is the only remaining means of contact you have with a student.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"Chesterwongz"},"content":"  e.g. no student should have all contact fields empty. `edit 2 pp/` will not work if the student does not have","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"Chesterwongz"},"content":"  any `PHONE_NUMBER`, `EMAIL`, or `PARENT_EMAIL`.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"Chesterwongz"},"content":"* You can delete all tags of a student by typing `t/` without any arguments.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"Chesterwongz"},"content":"  e.g. `edit 2 t/` will remove all existing tags from the 2nd student in the displayed list.","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"Chesterwongz"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Chesterwongz"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st student to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"Chesterwongz"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"Chesterwongz"},"content":"* `edit 3 sch/NJC stream/` Edits the school of the 3rd student to be `NJC` and clears academic stream data.","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"lingshanng"},"content":"### Finding students by fields: `find`","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"lingshanng"},"content":"Finds all students whose fields match the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"lingshanng"},"content":"Format: `find [n/NAME_KEYWORD …] [a/ADDRESS_KEYWORD …] [e/EMAIL_KEYWORD …] [p/PHONE_KEYWORD …] [sch/SCHOOL_KEYWORD …] [stream/ACAD_STREAM_KEYWORD …] [lvl/ACAD_LEVEL_KEYWORD …]`","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"lingshanng"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"lingshanng"},"content":"**:information_source: Notes about the find command:**\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"lingshanng"},"content":"* You must provide at least one field.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"lingshanng"},"content":"  e.g. entering just `find` alone is not a valid command. You need to include the fields you wish to search for.","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"lingshanng"},"content":"* The search is case-insensitive.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"lingshanng"},"content":"  e.g.`hans` will match `Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"lingshanng"},"content":"* The order of the keywords does not matter.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"lingshanng"},"content":"  e.g. `Clementi West` will match `West Clementi`.","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"lingshanng"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"lingshanng"},"content":"* The keyword does not need to match the field exactly.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"lingshanng"},"content":"  e.g. `john@gmail.com` will match `leejohn@gmail.com`.","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"lingshanng"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"lingshanng"},"content":"* A field just needs to match at least one keyword.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"lingshanng"},"content":"  e.g. `Hans Bo` will match `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"lingshanng"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"lingshanng"},"content":"* A student is only considered a match when all fields which you are searching for match their keywords.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"lingshanng"},"content":"  e.g. `find n/john a/Clementi`","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"lingshanng"},"content":"    * will match student named `john` with address `West Clementi Street`","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"lingshanng"},"content":"    * will not match student named `john` with address `Bedok Reservoir`","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"lingshanng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"lingshanng"},"content":"* `find n/John Lee` returns `john`, `johnny Doe`, `Aileen`.","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"lingshanng"},"content":"* `find a/Jurong east n/Ben e/gmail`  ","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"lingshanng"},"content":"    * will match a student named `benny tan`, with address `West Jurong`, and email `benny.tan@gmail.com`","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"lingshanng"},"content":"    * will match a student name: `benjamin`, with address `yishun east ave 1`, and email: `benj@gmail.com`","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"lingshanng"},"content":"### Filtering students by tags: `filter`","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"lingshanng"},"content":"Filters students in the address book by their tags, based on the given filter condition.","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"lingshanng"},"content":"Format: `filter cond/{all | any | none} t/TAG [t/MORE_TAGS]…`","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"lingshanng"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"lingshanng"},"content":"**:information_source: Notes about the filter command:**\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"lingshanng"},"content":"* `all` indicates that a student must have all the specified tags to be matched.","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"lingshanng"},"content":"* `any` indicates that a student with at least one of the specified tag will be matched.","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"lingshanng"},"content":"* `none` indicates that a student must have none of the specified tags to be matched.","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"lingshanng"},"content":"* The filter condition will not accept other arguments besides `all`, `any` and `none`.","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"lingshanng"},"content":"  e.g. `cond/every` will result in an error.","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"lingshanng"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"lingshanng"},"content":"* You must use the exact spelling of the existing tag.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"lingshanng"},"content":"  e.g. `Math` will not match `Mathematics`.","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"lingshanng"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"lingshanng"},"content":"* The tags are **case-sensitive**.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"lingshanng"},"content":"  e.g. `filter cond/all t/MATH` does not return the same result as `filter cond/all t/math`.","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"lingshanng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"lingshanng"},"content":"* `filter cond/all t/math t/Sec1` will return students who have both `math` and `Sec1` tags.","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"lingshanng"},"content":"* `filter cond/any t/English t/Zoom` will return students with only the `English` tag, or only the `Zoom` tag, or both tags.","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"lingshanng"},"content":"* `filter cond/none t/Inactive t/paid` will return students without both `Inactive` and `paid` tags.","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Xiaoyunnn"},"content":"### Viewing all tags: `tag`","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"Xiaoyunnn"},"content":"Shows all the tags that user has created in TAB.","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":258,"author":{"gitId":"Xiaoyunnn"},"content":"Format: `tag`","lastModifiedDate":"2021-09-26"},{"lineNumber":259,"author":{"gitId":"Xiaoyunnn"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":260,"author":{"gitId":"eeliana"},"content":"### Adding a Lesson: `ladd`","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":262,"author":{"gitId":"eeliana"},"content":"Adds a lesson with the corresponding details to the specified student in the address book.","lastModifiedDate":"2021-09-26"},{"lineNumber":263,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":264,"author":{"gitId":"eeliana"},"content":"**Types of lesson:**","lastModifiedDate":"2021-09-26"},{"lineNumber":265,"author":{"gitId":"eeliana"},"content":"* Recurring","lastModifiedDate":"2021-09-26"},{"lineNumber":266,"author":{"gitId":"eeliana"},"content":"* Makeup","lastModifiedDate":"2021-09-26"},{"lineNumber":267,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":268,"author":{"gitId":"eeliana"},"content":"**Lesson fields:**","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"eeliana"},"content":"* Date of lesson `dd MMM yyyy`","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"eeliana"},"content":"  *  e.g. `02 Jan 2018`","lastModifiedDate":"2021-09-26"},{"lineNumber":271,"author":{"gitId":"eeliana"},"content":"* Start time `HH:mm`","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"eeliana"},"content":"* End time `HH:mm`","lastModifiedDate":"2021-09-26"},{"lineNumber":273,"author":{"gitId":"eeliana"},"content":"* Subject","lastModifiedDate":"2021-09-26"},{"lineNumber":274,"author":{"gitId":"eeliana"},"content":"* Homework","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"eeliana"},"content":"Format: `ladd INDEX [recurring/] date/dd MMM yyyy start/HH:mm end/HH:mm subject/SUBJECT [hw/HOMEWORK]`","lastModifiedDate":"2021-09-26"},{"lineNumber":277,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":278,"author":{"gitId":"eeliana"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":279,"author":{"gitId":"eeliana"},"content":":bulb: The type of lesson will be inferred from the presence of the \"recurring/\" prefix.","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"eeliana"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"eeliana"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"eeliana"},"content":"* `list` followed by `ladd 1 recurring/ date/16 Sep 2021 start/15:00 end/16:00 subject/Math` (recurring lesson)","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"eeliana"},"content":"adds the lesson to the 1st student in the address book","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":287,"author":{"gitId":"eeliana"},"content":"* `find john` followed by `ladd 1 date/16 Sep 2021 start/15:30 end/17:30 subject/Science hw/TYS p2 Q2` ","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"eeliana"},"content":"  (makeup lesson w/ homework) adds the lesson to the 1st student in the results of the `find` command.","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"eeliana"},"content":"### Deleting a lesson : `ldelete`","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"eeliana"},"content":"Deletes the specified lesson from the specified student in the address book.","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"eeliana"},"content":"Format: `ldelete INDEX LESSON_INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":295,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"eeliana"},"content":"* Deletes the lesson of specified `LESSON_INDEX` for the person at the specified `INDEX`.","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"eeliana"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"eeliana"},"content":"* The lesson index refers to the index number shown in the lesson list of the person. ","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"eeliana"},"content":"* The index and lesson index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":301,"author":{"gitId":"eeliana"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":302,"author":{"gitId":"eeliana"},"content":"* `list` followed by `ldelete 2 1` deletes the 1st lesson for the 2nd person in the address book.","lastModifiedDate":"2021-09-26"},{"lineNumber":303,"author":{"gitId":"eeliana"},"content":"* `find Betsy` followed by `ldelete 1 1` deletes the 1st lesson for the 1st person in the results ","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"eeliana"},"content":"  of the `find` command.","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"angkoonhwee"},"content":"### Undoing previous command : `undo`","lastModifiedDate":"2021-09-26"},{"lineNumber":313,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":314,"author":{"gitId":"angkoonhwee"},"content":"Undo the previous command that modified the Storage.","lastModifiedDate":"2021-09-26"},{"lineNumber":315,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":316,"author":{"gitId":"angkoonhwee"},"content":"Format: `undo`","lastModifiedDate":"2021-09-26"},{"lineNumber":317,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":318,"author":{"gitId":"angkoonhwee"},"content":"### Redoing undone command : `redo`","lastModifiedDate":"2021-09-26"},{"lineNumber":319,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":320,"author":{"gitId":"angkoonhwee"},"content":"Redo the previous command that has been undone.","lastModifiedDate":"2021-09-26"},{"lineNumber":321,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":322,"author":{"gitId":"angkoonhwee"},"content":"Format: `redo`","lastModifiedDate":"2021-09-26"},{"lineNumber":323,"author":{"gitId":"angkoonhwee"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Chesterwongz"},"content":"**Add** |`add n/NAME a/ADDRESS [p/PHONE_NUMBER] [e/EMAIL] [pp/PARENT_PHONE_NUMBER] [pe/PARENT_EMAIL] [sch/SCHOOL] [stream/ACAD_STREAM] [lvl/ACAD_LEVEL] [f/OUTSTANDING_FEES] [r/REMARKS] [t/TAG]…​` \u003cbr\u003e\u003cbr\u003e e.g., `add n/James Ho a/123, Clementi Rd, 1234665 p/22224444 e/jamesho@example.com pp/33335555 pe/danielho@example.com sch/DHS lvl/Y1 f/50 r/retainee t/cousin`","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Clear** |`clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"Xiaoyunnn"},"content":"**Delete** |`delete INDEX`\u003cbr\u003e\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-09-25"},{"lineNumber":362,"author":{"gitId":"Chesterwongz"},"content":"**Edit** |`edit INDEX [n/NAME] [a/ADDRESS] [p/PHONE] [e/EMAIL] [pp/PARENT_PHONE_NUMBER] [pe/PARENT_EMAIL] [sch/SCHOOL] [stream/ACAD_STREAM] [lvl/ACAD_LEVEL] [f/OUTSTANDING_FEES] [r/REMARK] [t/TAG]…​`\u003cbr\u003e\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"lingshanng"},"content":"**Find** |`find [n/NAME_KEYWORD …] [a/ADDRESS_KEYWORD …] [e/EMAIL_KEYWORD …] [p/PHONE_KEYWORD …] [sch/SCHOOL_KEYWORD …] [stream/ACAD_STREAM_KEYWORD …] [lvl/ACAD_LEVEL_KEYWORD …]`\u003cbr\u003e\u003cbr\u003e e.g., `find n/James Tan a/clementi sch/NUS`","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"lingshanng"},"content":"**Filter** |\u003ccode\u003efilter cond/{all \u0026#124; any \u0026#124; none} t/TAG [t/MORE_TAGS]…\u003c/code\u003e \u003cbr\u003e\u003cbr\u003e e.g., `filter cond/all t/Sec1 t/zoom`","lastModifiedDate":"2021-09-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**List** |`list`","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"angkoonhwee"},"content":"**View** | `view INDEX`","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"Chesterwongz"},"content":"**Schedule** | `schedule`","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Help** |`help`","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"angkoonhwee"},"content":"**Undo** | `undo`","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"angkoonhwee"},"content":"**Redo** | `redo`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Chesterwongz":56,"angkoonhwee":24,"lingshanng":53,"eeliana":61,"Xiaoyunnn":6,"-":170}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"angkoonhwee"},"content":"    content: \"TAB\";","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"angkoonhwee":1,"-":294}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_PARENT_PHONE + \"PARENT PHONE] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_PARENT_EMAIL + \"PARENT EMAIL] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_FEE + \"FEE] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"            + \"Note: at least one contact field must be present. \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"            + PREFIX_PARENT_PHONE + \"91234567 \"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"            + PREFIX_PARENT_EMAIL + \"jackd@example.com \"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"            + PREFIX_FEE + \"50 \"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"            + PREFIX_REMARK + \"He owes me a dinner! \"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"            + PREFIX_TAG + \"neighbour\";","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chesterwongz":16,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_PARENT_PHONE + \"PHONE] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_PARENT_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_FEE + \"FEE] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"    public static final String MESSAGE_CONTACT_REQUIRED \u003d \"This person must have at least one contact field.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"Chesterwongz"},"content":"        if (!editedPerson.hasContactField()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"Chesterwongz"},"content":"            throw new CommandException(MESSAGE_CONTACT_REQUIRED);","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"        Phone updatedParentPhone \u003d editPersonDescriptor.getParentPhone().orElse(personToEdit.getParentPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"Chesterwongz"},"content":"        Email updatedParentEmail \u003d editPersonDescriptor.getParentEmail().orElse(personToEdit.getParentEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"        Fee updatedFee \u003d editPersonDescriptor.getFee().orElse(personToEdit.getFee());","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"        // This command does not allow the editing of lessons.","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"        Set\u003cLesson\u003e updatedLessons \u003d editPersonDescriptor.getLessons().orElse(personToEdit.getLessons());","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedParentPhone, updatedParentEmail,","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"                updatedAddress, updatedFee, updatedRemark, updatedTags, updatedLessons);","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"Chesterwongz"},"content":"        private Phone parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"        private Email parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"Chesterwongz"},"content":"        private Fee outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Remark remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"eeliana"},"content":"        private Set\u003cLesson\u003e lessons;","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"Chesterwongz"},"content":"            setParentPhone(toCopy.parentPhone);","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"Chesterwongz"},"content":"            setParentEmail(toCopy.parentEmail);","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"Chesterwongz"},"content":"            setFee(toCopy.outstandingFee);","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"eeliana"},"content":"            setLessons(toCopy.lessons);","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"Chesterwongz"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, parentPhone, parentEmail, address,","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"Chesterwongz"},"content":"                    outstandingFee, remark, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"Chesterwongz"},"content":"        public void setParentPhone(Phone parentPhone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"Chesterwongz"},"content":"            this.parentPhone \u003d parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"Chesterwongz"},"content":"        public Optional\u003cPhone\u003e getParentPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"Chesterwongz"},"content":"            return Optional.ofNullable(parentPhone);","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"Chesterwongz"},"content":"        public void setParentEmail(Email parentEmail) {","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"Chesterwongz"},"content":"            this.parentEmail \u003d parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"Chesterwongz"},"content":"        public Optional\u003cEmail\u003e getParentEmail() {","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"Chesterwongz"},"content":"            return Optional.ofNullable(parentEmail);","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-09-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-09-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-09-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":245,"author":{"gitId":"Chesterwongz"},"content":"        public void setFee(Fee outstandingFee) {","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"Chesterwongz"},"content":"            this.outstandingFee \u003d outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"Chesterwongz"},"content":"        public Optional\u003cFee\u003e getFee() {","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"Chesterwongz"},"content":"            return Optional.ofNullable(outstandingFee);","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"eeliana"},"content":"        /**","lastModifiedDate":"2021-09-24"},{"lineNumber":271,"author":{"gitId":"eeliana"},"content":"         * Returns an unmodifiable lesson set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-24"},{"lineNumber":272,"author":{"gitId":"eeliana"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-09-24"},{"lineNumber":273,"author":{"gitId":"eeliana"},"content":"         * Returns {@code Optional#empty()} if {@code lessons} is null.","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"eeliana"},"content":"        public Optional\u003cSet\u003cLesson\u003e\u003e getLessons() {","lastModifiedDate":"2021-09-20"},{"lineNumber":276,"author":{"gitId":"eeliana"},"content":"            return (lessons !\u003d null) ? Optional.of(Collections.unmodifiableSet(lessons)) : Optional.empty();","lastModifiedDate":"2021-09-20"},{"lineNumber":277,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":278,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":279,"author":{"gitId":"eeliana"},"content":"        public void setLessons(Set\u003cLesson\u003e lessons) {","lastModifiedDate":"2021-09-20"},{"lineNumber":280,"author":{"gitId":"eeliana"},"content":"            this.lessons \u003d (lessons !\u003d null) ? new TreeSet\u003c\u003e(lessons) : null;","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":282,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":301,"author":{"gitId":"Chesterwongz"},"content":"                    \u0026\u0026 getParentPhone().equals(e.getParentPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":302,"author":{"gitId":"Chesterwongz"},"content":"                    \u0026\u0026 getParentEmail().equals(e.getParentEmail())","lastModifiedDate":"2021-09-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":304,"author":{"gitId":"Chesterwongz"},"content":"                    \u0026\u0026 getFee().equals(e.getFee())","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2021-09-16"},{"lineNumber":306,"author":{"gitId":"eeliana"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-09-20"},{"lineNumber":307,"author":{"gitId":"eeliana"},"content":"                    \u0026\u0026 getLessons().equals(e.getLessons());","lastModifiedDate":"2021-09-20"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Chesterwongz":52,"eeliana":22,"-":236}},{"path":"src/main/java/seedu/address/logic/commands/LessonAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.util.List;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"public class LessonAddCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    public static final String COMMAND_WORD \u003d \"ladd\";","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a lesson to the person identified \"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"        + \"by the index number\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        + \"[\" + PREFIX_RECURRING + \"] \"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        + PREFIX_DATE + \"dd MMM yyyy \"","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        + PREFIX_START_TIME + \"HH:mm \"","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        + PREFIX_END_TIME + \"HH:mm \"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"        + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        + \"[\" + PREFIX_HOMEWORK + \"HOMEWORK]...\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        + \"Examples:\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"        + \"Makeup lesson: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        + PREFIX_DATE + \"10 Oct 2021 \"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"        + PREFIX_START_TIME + \"14:30 \"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        + PREFIX_END_TIME + \"15:30 \"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"        + PREFIX_SUBJECT + \"Science \"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"        + PREFIX_HOMEWORK + \"TYS Page 2 \"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        + PREFIX_HOMEWORK + \"Textbook Page 52\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"        + \"Recurring lesson: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        + PREFIX_RECURRING + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        + PREFIX_DATE + \"09 Dec 2021 \"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"        + PREFIX_START_TIME + \"10:30 \"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        + PREFIX_END_TIME + \"12:30 \"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"        + PREFIX_SUBJECT + \"Math \"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        + PREFIX_HOMEWORK + \"TYS Page 2 \";","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_ADD_LESSON_SUCCESS \u003d \"Added new lesson: %1$s\\nfor Person: %2$s\";","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_DUPLICATE_LESSON \u003d \"This lesson already exists for this person.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CLASHING_LESSON \u003d \"This lesson clashes with an existing lesson.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"    private final Index index;","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"    private final Lesson toAdd;","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"     * Creates a LessonAddCommand to add the specified {@code Lesson}","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"    public LessonAddCommand(Index index, Lesson lesson) {","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"        requireNonNull(lesson);","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        toAdd \u003d lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"    private static Person createEditedPerson(Person personToEdit, Lesson lesson) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"        Phone updatedParentPhone \u003d personToEdit.getParentPhone();","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"        Email updatedParentEmail \u003d personToEdit.getParentEmail();","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"        Fee updatedOutstandingFee \u003d personToEdit.getFee();","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark();","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"        Set\u003cLesson\u003e lessons \u003d new TreeSet\u003c\u003e(personToEdit.getLessons());","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        lessons.add(lesson);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedParentPhone,","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"                updatedParentEmail, updatedAddress, updatedOutstandingFee, updatedRemark,","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"            updatedTags, lessons);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, toAdd);","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"        if (personToEdit.getLessons().stream().anyMatch(lesson -\u003e lesson.equals(toAdd))) {","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LESSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"        Stream\u003cLesson\u003e lessonsOnSameDate \u003d personToEdit.getLessons().stream()","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"            .filter(lesson -\u003e lesson.getDate().equals(toAdd.getDate()));","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"        /*","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"        Check if time ranges overlap each other or if one time range is","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"        completely contained in the other range.","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"        boolean isClashingLesson \u003d lessonsOnSameDate","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"            .anyMatch(lesson -\u003e lesson.getTimeRange().isClashing(toAdd.getTimeRange())","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"            || toAdd.getTimeRange().isClashing(lesson.getTimeRange()));","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"        if (isClashingLesson) {","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"            throw new CommandException(MESSAGE_CLASHING_LESSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_LESSON_SUCCESS, toAdd, editedPerson));","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"                || (other instanceof LessonAddCommand // instanceof handles nulls","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 index.equals(((LessonAddCommand) other).index)","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 toAdd.equals(((LessonAddCommand) other).toAdd));","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":148}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"                        PREFIX_PARENT_PHONE, PREFIX_PARENT_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"                        PREFIX_FEE, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"        if (!areAllPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS)","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"                || !areAnyPrefixesPresent(","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"                        argMultimap, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_PARENT_PHONE, PREFIX_PARENT_EMAIL)","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Chesterwongz"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"        Phone parentPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PARENT_PHONE).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"        Email parentEmail \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_PARENT_EMAIL).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"        Fee fee \u003d ParserUtil.parseFee(argMultimap.getValue(PREFIX_FEE).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"        // Don\u0027t allow adding of lessons with the adding of person.","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        Set\u003cLesson\u003e lessonList \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"        Person person \u003d new Person(name, phone, email, parentPhone, parentEmail,","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"            address, fee, remark, tagList, lessonList);","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"    private static boolean areAllPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"     * Returns true if at least one of the prefixes does not contain empty {@code Optional} values in the given","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Chesterwongz"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Chesterwongz":25,"eeliana":6,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.LessonAddCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"        case LessonAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"            return new LessonAddCommandParser().parse(arguments);","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eeliana":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    public static final Prefix PREFIX_PARENT_PHONE \u003d new Prefix(\"pp/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"    public static final Prefix PREFIX_PARENT_EMAIL \u003d new Prefix(\"pe/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"    public static final Prefix PREFIX_FEE \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    /* Prefix definitions for lesson */","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_RECURRING \u003d new Prefix(\"recurring/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"start/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"end/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"subject/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    public static final Prefix PREFIX_HOMEWORK \u003d new Prefix(\"hw/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Chesterwongz":3,"eeliana":7,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"                        PREFIX_PARENT_PHONE, PREFIX_PARENT_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"                        PREFIX_FEE, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"        if (argMultimap.getValue(PREFIX_PARENT_PHONE).isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"            editPersonDescriptor.setParentPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PARENT_PHONE).get()));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"        if (argMultimap.getValue(PREFIX_PARENT_EMAIL).isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"            editPersonDescriptor.setParentEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_PARENT_EMAIL).get()));","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"        if (argMultimap.getValue(PREFIX_FEE).isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"            editPersonDescriptor.setFee(ParserUtil.parseFee(argMultimap.getValue(PREFIX_FEE).get()));","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"Chesterwongz"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Chesterwongz":19,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/LessonAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.LessonAddCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Date;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.MakeUpLesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.RecurringLesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.TimeRange;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":" * Parses input arguments and creates a new LessonAddCommand object.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"public class LessonAddCommandParser {","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     * Parses the given {@code String} of arguments in the context of the LessonAddCommand","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"     * and returns a LessonAddCommand object for execution.","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    public LessonAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_RECURRING, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"                        PREFIX_END_TIME, PREFIX_SUBJECT, PREFIX_HOMEWORK);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_SUBJECT)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LessonAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        Index index;","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LessonAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        /* Parse time and check if range is valid.","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        Throws ParseException if either time is invalid","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"        or if range is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        String startTime \u003d argMultimap.getValue(PREFIX_START_TIME).get();","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        String endTime \u003d argMultimap.getValue(PREFIX_END_TIME).get();","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"        TimeRange timeRange \u003d ParserUtil.parseTimeRange(startTime, endTime);","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        Subject subject \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get());","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"        Set\u003cHomework\u003e homework \u003d parseHomeworkForLessonAdd(argMultimap.getAllValues(PREFIX_HOMEWORK))","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"                .orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"        // Is a recurring lesson","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        if (argMultimap.getValue(PREFIX_RECURRING).isPresent()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"            RecurringLesson lesson \u003d new RecurringLesson(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"            return new LessonAddCommand(index, lesson);","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        MakeUpLesson lesson \u003d new MakeUpLesson(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"        return new LessonAddCommand(index, lesson);","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"     * Parses {@code Collection\u003cString\u003e homework} into a {@code Set\u003cHomework\u003e} if {@code homework} is non-empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"     * If {@code homework} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"     * {@code Set\u003cHomework\u003e} containing zero homework.","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    private Optional\u003cSet\u003cHomework\u003e\u003e parseHomeworkForLessonAdd(Collection\u003cString\u003e homework) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        assert homework !\u003d null;","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"        if (homework.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"        Collection\u003cString\u003e homeworkSet \u003d homework.size() \u003d\u003d 1 \u0026\u0026 homework.contains(\"\")","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"                : homework;","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"        return Optional.of(ParserUtil.parseHomeworkList(homeworkSet));","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":106}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Date;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Time;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.TimeRange;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Chesterwongz"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Chesterwongz"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"Chesterwongz"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"     * Parses a {@code String fee} into an {@code Fee}.","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"     * @throws ParseException if the given {@code fee} is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"Chesterwongz"},"content":"    public static Fee parseFee(String fee) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"Chesterwongz"},"content":"        requireNonNull(fee);","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"Chesterwongz"},"content":"        String strippedFee \u003d fee.strip();","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"Chesterwongz"},"content":"        if (!Fee.isValidFee(strippedFee)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"            throw new ParseException(Fee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"Chesterwongz"},"content":"        return new Fee(strippedFee);","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"Chesterwongz"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"Chesterwongz"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"Chesterwongz"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"Chesterwongz"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"     * Parses a {@code String Time} into a {@code Time}.","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the given {@code Time} is invalid.","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"eeliana"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"eeliana"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"eeliana"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"eeliana"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"eeliana"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"eeliana"},"content":"     * Parses {@code String Time} and {@code String Time} into a {@code TimeRange}.","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"eeliana"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the given {@code Time} pr {@code TimeRange} is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"eeliana"},"content":"    public static TimeRange parseTimeRange(String start, String end) throws ParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"eeliana"},"content":"        requireNonNull(start);","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"eeliana"},"content":"        requireNonNull(end);","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"eeliana"},"content":"        Time startTime \u003d parseTime(start);","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"eeliana"},"content":"        Time endTime \u003d parseTime(end);","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"eeliana"},"content":"        if (!TimeRange.isValidTimeRange(startTime, endTime)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(TimeRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"eeliana"},"content":"        return new TimeRange(startTime, endTime);","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"eeliana"},"content":"     * Parses a {@code String subject} into a {@code Subject}.","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"eeliana"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the given {@code Subject} is invalid.","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"eeliana"},"content":"    public static Subject parseSubject(String subject) throws ParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"eeliana"},"content":"        requireNonNull(subject);","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"eeliana"},"content":"        String trimmedSubject \u003d subject.trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"eeliana"},"content":"        if (!Subject.isValidSubject(trimmedSubject)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":190,"author":{"gitId":"eeliana"},"content":"        return new Subject(trimmedSubject);","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"eeliana"},"content":"     * Parses a {@code String individualHomework} into a {@code Homework}.","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"eeliana"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-20"},{"lineNumber":223,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"eeliana"},"content":"     * @throws ParseException if the given {@code Homework} is invalid.","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"eeliana"},"content":"    public static Homework parseIndividualPieceOfHomework(String individualHomework) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"eeliana"},"content":"        requireNonNull(individualHomework);","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"eeliana"},"content":"        String trimmedHomework \u003d individualHomework.trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"eeliana"},"content":"        if (!Homework.isValidDescription(trimmedHomework)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"eeliana"},"content":"            throw new ParseException(Homework.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":231,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"eeliana"},"content":"        return new Homework(trimmedHomework);","lastModifiedDate":"2021-09-25"},{"lineNumber":233,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":234,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":235,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"eeliana"},"content":"     * Parses {@code Collection\u003cString\u003e homework} into a {@code Set\u003cHomework\u003e}.","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"eeliana"},"content":"    public static Set\u003cHomework\u003e parseHomeworkList(Collection\u003cString\u003e homework)","lastModifiedDate":"2021-09-27"},{"lineNumber":239,"author":{"gitId":"eeliana"},"content":"            throws ParseException {","lastModifiedDate":"2021-09-20"},{"lineNumber":240,"author":{"gitId":"eeliana"},"content":"        requireNonNull(homework);","lastModifiedDate":"2021-09-20"},{"lineNumber":241,"author":{"gitId":"eeliana"},"content":"        final Set\u003cHomework\u003e homeworkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":242,"author":{"gitId":"eeliana"},"content":"        for (String description : homework) {","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"eeliana"},"content":"            homeworkSet.add(parseIndividualPieceOfHomework(description));","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"eeliana"},"content":"        return homeworkSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":246,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Chesterwongz":32,"eeliana":94,"-":121}},{"path":"src/main/java/seedu/address/model/lesson/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":" * Represents a Lesson\u0027s date in the address book.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be of the format dd MMM yyyy \"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"        + \"1. dd and yyyy are numerical characters.\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"        + \"2. MMM are alphabetical characters. e.g. Jan, Feb, ..., Dec\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        + \"3. Must be a valid date for the year.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    // Date strings should be formatted as dd MMM uuuu, where dd and uuuu are digits.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    // and MMM are alphabets e.g. Jan, Mar, Nov, etc.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]{2}\\\\s[a-zA-Z]{3}\\\\s[0-9]{4}\";","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    public static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        .parseCaseInsensitive()","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        .appendPattern(\"dd MMM uuuu\")","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        .toFormatter(Locale.ENGLISH)","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    public final String value;","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     * @param date A valid Date.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    public Date(String date) {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        value \u003d date.toUpperCase();","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"     * Returns if a given string is a valid date.","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"            LocalDate.parse(test, FORMATTER);","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        } finally {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"            return test.matches(VALIDATION_REGEX) \u0026\u0026 isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"     * Returns the LocalDate representation of the date.","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"     * @return LocalDate representation of date.","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"        return LocalDate.parse(this.value, FORMATTER);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"     * Check if the date has passed.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"     * @return true if date is earlier than now.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"    public boolean isOver() {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"        return getLocalDate().compareTo(LocalDate.now()) \u003c 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        return value;","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"     * Compares this Date object with the other Date object.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"     * @param other The Date object to compare with.","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"     * @return 1, if this is later than other;0 if equal; -1 if this is earlier.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        return getLocalDate().compareTo(other.getLocalDate());","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":109}},{"path":"src/main/java/seedu/address/model/lesson/Homework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" * Represents a Homework for a Lesson in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"public class Homework {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Homework description can have a maximum of \"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"            + \"50 characters.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    public static final String VALIDATION_REGEX \u003d \".{0,50}\";","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    public final String description;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     * Constructs a {@code Homework}.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public Homework(String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     * Returns true if a given string is a valid homework description.","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     * @return True if test is a valid homework description.","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"                || (other instanceof Homework // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 description.equals(((Homework) other).description)); // state check","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        return description.hashCode();","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"        return \u0027[\u0027 + description + \u0027]\u0027;","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":59}},{"path":"src/main/java/seedu/address/model/lesson/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":" * Represents a Lesson in the address book.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"public abstract class Lesson implements Comparable\u003cLesson\u003e {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    // Types of lesson","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    private static final String RECURRING \u003d \"Recurring Lesson\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    private static final String MAKEUP \u003d \"Makeup Lesson\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    // Time fields","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    private final Date date;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    private final TimeRange timeRange;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    // Data fields","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    private final Subject subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    private final Set\u003cHomework\u003e homework \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * @param date Date of lesson.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     * @param timeRange Time range of the lesson.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"     * @param subject Subject of the lesson.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     * @param homework Homework for the lesson.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    public Lesson(Date date, TimeRange timeRange, Subject subject, Set\u003cHomework\u003e homework) {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        requireAllNonNull(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        this.timeRange \u003d timeRange;","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        this.homework.addAll(homework);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    public Date getDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"        return date;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"    public Subject getSubject() {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"        return subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"    public TimeRange getTimeRange() {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        return timeRange;","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"     * Returns an immutable homework set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"    public Set\u003cHomework\u003e getHomework() {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"        return Collections.unmodifiableSet(homework);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"     * Check if the Lesson object is recurring.","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"     * @return True if it is a recurring lesson, false otherwise.","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"    public abstract boolean isRecurring();","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"     * Update the lesson date to the same day on the following week.","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"     * @return newDate The date of the same day on the following week.","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"    public Date updateDateWithWeek() {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"        Date newDate \u003d new Date(getDate().getLocalDate().plusDays(7).format(Date.FORMATTER));","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"        return newDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"    public boolean isOver() {","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"        return getDate().isOver();","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"     * Edit the date of the particular type of lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"     * @param newDateString The date to be updated with.","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"     * @return {@code Lesson} with the updated date.","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"    public abstract Lesson updateDate(String newDateString);","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"     * Check if both lessons have the same data fields.","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"     * This defines a stronger notion of equality between two lessons.","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"     * @param other The other object to compare.","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"     * @return True if all fields are equal.","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"            return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        if (!(other instanceof Lesson)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        Lesson otherLesson \u003d (Lesson) other;","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        return otherLesson.getDate().equals(getDate())","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 otherLesson.getTimeRange().equals(getTimeRange())","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 otherLesson.getSubject().equals(getSubject())","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 otherLesson.getHomework().equals(getHomework())","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 otherLesson.isRecurring() \u003d\u003d isRecurring();","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"        return Objects.hash(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"        String typeOfLesson \u003d isRecurring() ? RECURRING : MAKEUP;","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"        builder.append(typeOfLesson)","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"            .append(\"\\n\")","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"            .append(getDate())","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"            .append(\"\\nTime: \")","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"            .append(getTimeRange())","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"            .append(\"\\nSubject: \")","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"            .append(getSubject());","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"        Set\u003cHomework\u003e homework \u003d getHomework();","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"        if (!homework.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"            builder.append(\"\\nHomework: \");","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"            homework.forEach(builder::append);","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"     * Compares this Lesson object with the other Lesson object.","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"     * @param other The Lesson object to compare with.","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"     * @return 1, if this is later than other;0 if equal; -1 if this is earlier.","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"eeliana"},"content":"    public int compareTo(Lesson other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"eeliana"},"content":"        int compareDate \u003d getDate().compareTo(other.getDate());","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"eeliana"},"content":"        int compareTime \u003d getTimeRange().compareTo(other.getTimeRange());","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"eeliana"},"content":"        // Compare time if date is equal","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"eeliana"},"content":"        return compareDate \u003d\u003d 0 ? compareTime : compareDate;","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":159}},{"path":"src/main/java/seedu/address/model/lesson/MakeUpLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":" * Represents a Make Up Lesson in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class MakeUpLesson extends Lesson {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"     * @param date Date of lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"     * @param timeRange Time range of the lesson.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"     * @param subject Subject of the lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     * @param homework Homework for the lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    public MakeUpLesson(Date date, TimeRange timeRange,","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"                           Subject subject, Set\u003cHomework\u003e homework) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"        super(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"     * Edit the date of the make-up lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     * @param newDateString The date to be updated with.","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     * @return {@code MakeUpLesson} with the updated date.","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    public Lesson updateDate(String newDateString) {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        Date newDate \u003d new Date(newDateString);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        return newDate.compareTo(getDate()) \u003e 0","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"            ? new MakeUpLesson(newDate, getTimeRange(), getSubject(), getHomework())","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"            : this;","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     * Check if the Lesson object is recurring.","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     * @return False","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":48}},{"path":"src/main/java/seedu/address/model/lesson/RecurringLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * Represents a Recurring Lesson in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"public class RecurringLesson extends Lesson {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"     * Count of the number of lessons taken this month for this recurring lesson.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"    private static int recurringLessonsCount \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"     * @param date Date of lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"     * @param timeRange Time range of the lesson.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"     * @param subject Subject of the lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"     * @param homework Homework for the lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    public RecurringLesson(Date date, TimeRange timeRange,","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"                           Subject subject, Set\u003cHomework\u003e homework) {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        super(date, timeRange, subject, homework);","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"        updateRecurringLessonCount();","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"     * Returns the number of lessons attended.","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"     * @return The number of lessons attended for this recurring lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    public static int getRecurringLessonsCount() {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"        return recurringLessonsCount;","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     * Check if the Lesson object is recurring.","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"     * @return true.","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"     * Edit the date of the recurring lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"     * @param newDateString The date to be updated with.","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"     * @return {@code RecurringLesson} with the updated date.","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    public Lesson updateDate(String newDateString) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"        Date newDate \u003d new Date(newDateString);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        return newDate.compareTo(getDate()) \u003e 0","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"            ? new RecurringLesson(new Date(newDateString), getTimeRange(),","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"            getSubject(), getHomework())","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"            : this;","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"     * Checks if the date has passed and update the recurring lesson count accordingly.","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"     * @return {@code RecurringLesson} with the updated date.","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"    private RecurringLesson updateRecurringLessonCount() {","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        // Compare lesson date to current date","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"        // Increment count if date has passed","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        LocalDate lessonDate \u003d getDate().getLocalDate();","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        boolean isLessonEarlierThanCurrentDate \u003d lessonDate.compareTo(LocalDate.now()) \u003e 0;","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"        if (isLessonEarlierThanCurrentDate) {","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"            return this;","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"        recurringLessonsCount++;","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"        // Update the date","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"        Date newDate \u003d super.updateDateWithWeek();","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"        return new RecurringLesson(newDate, getTimeRange(),","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"                getSubject(), getHomework());","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":85}},{"path":"src/main/java/seedu/address/model/lesson/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":" * Represents a Lesson\u0027s subject in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSubject(String)}","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"public class Subject {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"            \"Subject should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    /*","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    public final String subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     * @param subject A valid subject.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    public Subject(String subject) {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        requireNonNull(subject);","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        checkArgument(isValidSubject(subject), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"     * Returns true if a given string is a valid subject.","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     * @return true if test is a valid subject","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        return subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"                || (other instanceof Subject // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 subject.equals(((Subject) other).subject)); // state check","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        return subject.hashCode();","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":62}},{"path":"src/main/java/seedu/address/model/lesson/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":" * Represents a Lesson\u0027s time in the address book.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be of the format HH:mm \"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"            + \"1. Both HH and mm are numerical characters.\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"            + \"2. HH \u003c 24 and mm \u003c 60\";","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    Specifies that the first 2 digits must be \u003c 24","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    and the second last digit must be \u003c 6.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(([0-1]\\\\d)|(2[0-3])):([0-5]\\\\d)$\";","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ISO_LOCAL_TIME","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    public final String value;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"     * Constructs an {@code Time}.","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"     * @param time A valid Time.","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    public Time(String time) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        value \u003d time;","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"     * Returns if a given string is a valid time.","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"     * @return True is test is valid.","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"            LocalTime.parse(test, FORMATTER);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"        } finally {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"            return test.matches(VALIDATION_REGEX) \u0026\u0026 isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"     * Get the LocalTime representation of the time string.","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"     * @return {@code LocalTime} of the time string.","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"    public LocalTime getLocalTime() {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        return LocalTime.parse(value);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        return value;","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 value.equals(((Time) other).value)); // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"     * Compares this Time object with the other time object.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"     * @param other The Time object to compare with.","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"     * @return 1, if this is later than other;0 if equal; -1 if this is earlier.","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    public int compareTo(Time other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        return getLocalTime().compareTo(other.getLocalTime());","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":97}},{"path":"src/main/java/seedu/address/model/lesson/TimeRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":" * Represents a Lesson\u0027s TimeRange in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeRange(Time, Time)}","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"public class TimeRange implements Comparable\u003cTimeRange\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Lesson time range should adhere to the following constraints:\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"        + \"1. End time cannot be earlier than start time.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"        + \"2. Lesson should be conducted between 8am and 10pm, inclusive\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    private static final Time DAY_START \u003d new Time(\"08:00\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"    private static final Time DAY_END \u003d new Time(\"22:00\");","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    private final Time start;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    private final Time end;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"     * Constructs a TimeRange object.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     * @param start Start of the range.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     * @param end End of the range.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    public TimeRange(Time start, Time end) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        requireNonNull(start);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"        requireNonNull(end);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        checkArgument(isValidTimeRange(start, end), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    public Time getStart() {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        return start;","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    public Time getEnd() {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"        return end;","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"     * Checks if the start is earlier than the end and","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"     * the range is between 8am and 10pm, inclusive.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"     * @param start Start of the range.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"     * @param end End of the range.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"     * @return True if start is earlier than or same time as end.","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"    public static boolean isValidTimeRange(Time start, Time end) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        return end.compareTo(start) \u003e\u003d 0","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 start.compareTo(DAY_START) \u003e\u003d 0 // Same or later than 8am","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 end.compareTo(DAY_END) \u003c\u003d 0; // Same or earlier than 10pm","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"     * Checks if the given start time is within the time range.","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"     * @param time The time to be tested.","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"    private boolean isStartClashing(Time time) {","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"        return start.compareTo(time) \u003c\u003d 0 // same or later than start time","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 end.compareTo(time) \u003e 0; // earlier than end time","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"     * Checks if the given end time is within the time range.","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"     * @param time The time to be tested.","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"    private boolean isEndClashing(Time time) {","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"        return start.compareTo(time) \u003c 0 // later than start time","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 end.compareTo(time) \u003e 0; // earlier than end time","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"     * Checks if the given time range overlaps with this time range.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"     * @param other The TimeRange to be tested.","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"    public boolean isClashing(TimeRange other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"        return isStartClashing(other.start) || isEndClashing(other.end);","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"    public String toString() {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"        return start.toString() + \" to \" + end.toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"            || (other instanceof TimeRange) // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 start.equals(((TimeRange) other).start)","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"            \u0026\u0026 end.equals(((TimeRange) other).end); // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"        return Objects.hash(start, end);","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"     * Compares this TimeRange object with the other TimeRange object.","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"     * @param other The TimeRange object to compare with.","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"     * @return 1, if this is later than other;0 if clashing; -1 if this is earlier.","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"    public int compareTo(TimeRange other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"        /*","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"        start.compareTo(other.start) will not return 0 because it will","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"        be labelled as clashing with this time range.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"         */","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"        return isClashing(other) ? 0 : start.compareTo(other.start);","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"eeliana":120}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chesterwongz":1,"-":70}},{"path":"src/main/java/seedu/address/model/person/Fee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":" * Represents a Person\u0027s outstanding fees in TAB.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFee(String)}","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"public class Fee {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"            \"Fees should be formatted with a decimal point \u0027.\u0027 as a separator between the dollars and cents, \"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"            + \"1. Fees should only contain numbers and at most one decimal point.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"            + \"2. Fees should not start or end with a decimal point and should have at most two decimal places.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]+(\\\\.[0-9]{1,2})?$\";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"    public final String value;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"     * Constructs an outstanding {@code Fee}.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"     * @param fee A valid outstanding fee.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"    public Fee(String fee) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"        requireNonNull(fee);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Chesterwongz"},"content":"        checkArgument(isValidFee(fee), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"        value \u003d formatFee(fee);","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"     * Removes leading zeroes and postfixes decimal places.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"     * @param fee A valid fee.","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"     * @return The formatted fee.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"    private String formatFee(String fee) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"        String formattedFee \u003d fee;","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"        if (formattedFee.startsWith(\"0\")) { // remove all leading zeroes","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"            formattedFee \u003d formattedFee.replaceFirst(\"^0+\", \"\");","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"        if (formattedFee.startsWith(\".\")) { // prefix missing zero that was removed","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"            formattedFee \u003d \"0\" + formattedFee;","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"        if (!formattedFee.isEmpty() \u0026\u0026 !formattedFee.contains(\".\")) { // postfix missing decimal places","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"            formattedFee \u003d formattedFee + \".00\";","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"        int length \u003d fee.length();","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"        if (length \u003e\u003d 2 \u0026\u0026 fee.charAt(length - 2) \u003d\u003d \u0027.\u0027) { // postfix missing zero","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"            formattedFee \u003d formattedFee + \"0\";","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Chesterwongz"},"content":"        return fillEmptyString(formattedFee);","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"    private String fillEmptyString(String fee) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Chesterwongz"},"content":"        return fee.isEmpty() ? \"0.00\" : fee;","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"     * Returns true if a given string is a valid fee.","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"    public static boolean isValidFee(String test) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"        return value;","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"Chesterwongz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"                || (other instanceof Fee // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"                \u0026\u0026 value.equals(((Fee) other).value)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Chesterwongz":83}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"    private final Phone parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"    private final Email parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"    private final Remark remark;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    private final Fee outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    private final Set\u003cLesson\u003e lessons \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"    public Person(Name name, Phone phone, Email email, Phone parentPhone, Email parentEmail,","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"                  Address address, Fee outstandingFee, Remark remark, Set\u003cTag\u003e tags, Set\u003cLesson\u003e lessons) {","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags, lessons);","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"        this.parentPhone \u003d parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"        this.parentEmail \u003d parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"        this.outstandingFee \u003d outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"        this.lessons.addAll(lessons);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"    public Phone getParentPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"        return parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"    public Email getParentEmail() {","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"        return parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"    public Fee getFee() {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"        return outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"     * Returns an immutable lesson set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"    public Set\u003cLesson\u003e getLessons() {","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        return Collections.unmodifiableSet(lessons);","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"     * Returns true if this person has at least one contact field not empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"Chesterwongz"},"content":"    public boolean hasContactField() {","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"        return !(phone.value.isEmpty() \u0026\u0026 email.value.isEmpty()","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"                \u0026\u0026 parentPhone.value.isEmpty() \u0026\u0026 parentEmail.value.isEmpty());","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"                \u0026\u0026 otherPerson.getParentPhone().equals(getParentPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"                \u0026\u0026 otherPerson.getParentEmail().equals(getParentEmail())","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"                \u0026\u0026 otherPerson.getFee().equals(getFee())","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"                \u0026\u0026 otherPerson.getLessons().equals(getLessons());","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"Chesterwongz"},"content":"                .append(\"; Parent Phone: \")","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"Chesterwongz"},"content":"                .append(getParentPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"Chesterwongz"},"content":"                .append(\"; Parent Email: \")","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"Chesterwongz"},"content":"                .append(getParentEmail())","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(getAddress())","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"Chesterwongz"},"content":"                .append(\"; Outstanding Fees: \")","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"Chesterwongz"},"content":"                .append(getFee())","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .append(getRemark());","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chesterwongz":37,"eeliana":17,"-":128}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":" * Represents a Person\u0027s phone number in the TAB.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"     * @param phone An empty string, or valid phone number.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"        return test.isEmpty() || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chesterwongz":4,"-":48}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Date;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.MakeUpLesson;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.RecurringLesson;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Time;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.TimeRange;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    public static final TreeSet\u003cLesson\u003e EMPTY_LESSON_SET \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"    public static final Phone EMPTY_PHONE \u003d new Phone(\"\");","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"    public static final Email EMPTY_EMAIL \u003d new Email(\"\");","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"    public static final Fee EMPTY_FEE \u003d new Fee(\"\");","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"                    new Phone(\"87477708\"), new Email(\"alenyeoh@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Fee(\"50\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"friends\"), EMPTY_LESSON_SET),","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"                    EMPTY_PHONE, EMPTY_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Fee(\"80\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"colleagues\", \"friends\"), EMPTY_LESSON_SET),","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"                    EMPTY_PHONE, new Email(\"olivealice@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_FEE, EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"neighbours\"), EMPTY_LESSON_SET),","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"                    new Phone(\"91009182\"), EMPTY_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_FEE, EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"family\"), EMPTY_LESSON_SET),","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"                    EMPTY_PHONE, EMPTY_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_FEE, EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"classmates\"), EMPTY_LESSON_SET),","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"                    EMPTY_PHONE, EMPTY_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Fee(\"35\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"                getTagSet(\"colleagues\"), EMPTY_LESSON_SET)","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"    public static Set\u003cLesson\u003e getSampleLessons() {","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"        Set\u003cLesson\u003e sampleLessons \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"        sampleLessons.add(new RecurringLesson(new Date(\"14 Jan 2022\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"            new TimeRange(new Time(\"14:30\"), new Time(\"15:30\")),","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"                new Subject(\"Math\"), getSampleHomeworkSet()));","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        sampleLessons.add(new MakeUpLesson(new Date(\"24 Mar 2022\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"            new TimeRange(new Time(\"12:30\"), new Time(\"14:00\")),","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"                new Subject(\"Science\"), getSampleHomeworkSet()));","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        sampleLessons.add(new RecurringLesson(new Date(\"09 Feb 2022\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"            new TimeRange(new Time(\"17:30\"), new Time(\"19:30\")),","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"                new Subject(\"GP\"), getSampleHomeworkSet()));","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"        return sampleLessons;","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"    public static Lesson getSampleLesson() {","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"        return new RecurringLesson(new Date(\"14 Jan 2022\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"            new TimeRange(new Time(\"14:30\"), new Time(\"15:30\")),","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"                new Subject(\"Math\"), getSampleHomeworkSet());","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"     * Returns a sample homework set.","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"    public static Set\u003cHomework\u003e getSampleHomeworkSet() {","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        HashSet\u003cHomework\u003e hw \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        hw.add(new Homework(\"TYS Page 20\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"        hw.add(new Homework(\"Onsponge textbook\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"        hw.add(new Homework(\"Tutorial 12\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"        return hw;","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Chesterwongz":16,"eeliana":50,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHomework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":" * Jackson-friendly version of {@link Homework}.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"class JsonAdaptedHomework {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"    private final String description;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"     * Constructs a {@code JsonAdaptedHomework} with the given {@code description}.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    public JsonAdaptedHomework(String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"     * Converts a given {@code Homework} into this class for Jackson use.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    public JsonAdaptedHomework(Homework source) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        description \u003d source.description;","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    @JsonValue","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        return description;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     * Converts this Jackson-friendly adapted homework object into the model\u0027s {@code Homework} object.","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted homework.","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    public Homework toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"        if (!Homework.isValidDescription(description)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(Homework.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"        return new Homework(description);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import java.util.List;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Date;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.MakeUpLesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.RecurringLesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Time;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.TimeRange;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":" * Jackson-friendly version of {@link Lesson}.","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"class JsonAdaptedLesson {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Lesson\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    private final String date;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    private final String startTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    private final String endTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"    private final String subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    private final boolean isRecurring;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    private final List\u003cJsonAdaptedHomework\u003e homework \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"     * Constructs a {@code JsonAdaptedLesson} with the given Lesson details.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    public JsonAdaptedLesson(@JsonProperty(\"date\") String date,","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"subject\") String subject,","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"homework\") List\u003cJsonAdaptedHomework\u003e homework) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"        if (homework !\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"            this.homework.addAll(homework);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"        isRecurring \u003d true;","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"     * Converts a given {@code Lesson} into this class for Json use.","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"    public JsonAdaptedLesson(Lesson source) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"        startTime \u003d source.getTimeRange().getStart().value;","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"        endTime \u003d source.getTimeRange().getEnd().value;","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        subject \u003d source.getSubject().subject;","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        homework.addAll(source.getHomework().stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"                .map(JsonAdaptedHomework::new)","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        isRecurring \u003d source.isRecurring();","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"     * Converts this Jackson-friendly adapted lesson object into the model\u0027s {@code Lesson} object.","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"    public Lesson toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        final List\u003cHomework\u003e lessonHomework \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"        for (JsonAdaptedHomework hw : homework) {","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"            lessonHomework.add(hw.toModelType());","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"        if (!Time.isValidTime(startTime)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"        final Time modelStartTime \u003d new Time(startTime);","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"        if (!Time.isValidTime(endTime)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"        final Time modelEndTime \u003d new Time(endTime);","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"        if (!TimeRange.isValidTimeRange(modelStartTime, modelEndTime)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(TimeRange.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"        final TimeRange modelTimeRange \u003d new TimeRange(modelStartTime, modelEndTime);","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Subject.class.getSimpleName()));","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"        if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"        final Subject modelSubject \u003d new Subject(subject);","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"        final Set\u003cHomework\u003e modelHomework \u003d new HashSet\u003c\u003e(lessonHomework);","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"        return isRecurring","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"                ? new RecurringLesson(modelDate, modelTimeRange, modelSubject, modelHomework)","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"                : new MakeUpLesson(modelDate, modelTimeRange, modelSubject, modelHomework);","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"eeliana":126}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"    private final String parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"    private final String parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"    private final String outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    private final List\u003cJsonAdaptedLesson\u003e lessons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"parent phone\") String parentPhone,","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"                             @JsonProperty(\"parent email\") String parentEmail, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"                             @JsonProperty(\"outstanding fee\") String outstandingFee,","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"                             @JsonProperty(\"lessons\") List\u003cJsonAdaptedLesson\u003e lessons) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"        this.parentPhone \u003d parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"Chesterwongz"},"content":"        this.parentEmail \u003d parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"        this.outstandingFee \u003d outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"        if (lessons !\u003d null) {","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"            this.lessons.addAll(lessons);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"        parentPhone \u003d source.getParentPhone().value;","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"        parentEmail \u003d source.getParentEmail().value;","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"        outstandingFee \u003d source.getFee().value;","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"        lessons.addAll(source.getLessons().stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"                .map(JsonAdaptedLesson::new)","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"        final List\u003cLesson\u003e personLessons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"        for (JsonAdaptedLesson lesson : lessons) {","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"            personLessons.add(lesson.toModelType());","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"Chesterwongz"},"content":"        if (parentPhone \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"Chesterwongz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"Chesterwongz"},"content":"        if (!Phone.isValidPhone(parentPhone)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"Chesterwongz"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"Chesterwongz"},"content":"        final Phone modelParentPhone \u003d new Phone(parentPhone);","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"Chesterwongz"},"content":"        if (parentEmail \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"Chesterwongz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"        if (!Email.isValidEmail(parentEmail)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"Chesterwongz"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"Chesterwongz"},"content":"        final Email modelParentEmail \u003d new Email(parentEmail);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"Chesterwongz"},"content":"        if (outstandingFee \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Fee.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"Chesterwongz"},"content":"        final Fee modelFee \u003d new Fee(outstandingFee);","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"eeliana"},"content":"        final Set\u003cLesson\u003e modelLessons \u003d new TreeSet\u003c\u003e(personLessons);","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"Chesterwongz"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelParentPhone, modelParentEmail,","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"eeliana"},"content":"                modelAddress, modelFee, modelRemark, modelTags, modelLessons);","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Chesterwongz":37,"eeliana":20,"-":115}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"    private Label name;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"    private Label parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"    private Label parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"    private Label outstandingFee;","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"    private FlowPane lessons;","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"        parentPhone.setText(\"Parent Phone: \" + person.getParentPhone().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"        parentEmail.setText(\"Parent Email: \" + person.getParentEmail().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"        outstandingFee.setText(\"Outstanding Fees: $\" + person.getFee().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"        remark.setText(\"Remarks: \" + person.getRemark().value);","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"        person.getLessons().stream().sorted()","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"            .forEach(lesson -\u003e lessons.getChildren()","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"                .add(new Label(\"\\n\" + lesson.toString())));","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Chesterwongz":13,"eeliana":5,"-":76}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"      \u003cLabel fx:id\u003d\"parentPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentPhone\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"      \u003cLabel fx:id\u003d\"parentEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentEmail\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"      \u003cLabel fx:id\u003d\"outstandingFee\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$outstandingFee\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"      \u003cFlowPane fx:id\u003d\"lessons\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chesterwongz":4,"eeliana":1,"-":36}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\": \"94351253\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\": \"alice@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\": \"94351253\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\": \"alice@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"remark\" : \"\"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Chesterwongz":6,"-":16}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"93251352\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"papapauline@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"    \"remark\" : \"She likes Cheesecake\",","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"94328765\",","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"ben@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"99.99\",","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"    \"remark\" : \"He likes chocolate ice cream\",","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"    \"remark\" : \"He likes french fries\",","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"    \"phone\" : \"94822244\",","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"    \"phone\" : \"94824278\",","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"    \"phone\" : \"94824422\",","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"    \"parentPhone\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"    \"parentEmail\" : \"\",","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"    \"outstandingFee\": \"0\",","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Chesterwongz":27,"-":47}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEE_DESC_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_AMY + PARENT_EMAIL_DESC_AMY + ADDRESS_DESC_AMY + FEE_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Chesterwongz":5,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"    public static final String EMPTY_FIELD \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_PARENT_PHONE_AMY \u003d \"33333333\";","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_PARENT_PHONE_BOB \u003d \"44444444\";","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_PARENT_EMAIL_AMY \u003d \"amyparent@example.com\";","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_PARENT_EMAIL_BOB \u003d \"bobparent@example.com\";","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_FEE_AMY \u003d \"12345.67\";","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_FEE_BOB \u003d \"0.50\";","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Amy loves sushi!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Bob loves sashimi!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"Chesterwongz"},"content":"    public static final String PARENT_PHONE_DESC_AMY \u003d \" \" + PREFIX_PARENT_PHONE + VALID_PARENT_PHONE_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"    public static final String PARENT_PHONE_DESC_BOB \u003d \" \" + PREFIX_PARENT_PHONE + VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"    public static final String PARENT_EMAIL_DESC_AMY \u003d \" \" + PREFIX_PARENT_EMAIL + VALID_PARENT_EMAIL_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"    public static final String PARENT_EMAIL_DESC_BOB \u003d \" \" + PREFIX_PARENT_EMAIL + VALID_PARENT_EMAIL_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"    public static final String FEE_DESC_AMY \u003d \" \" + PREFIX_FEE + VALID_FEE_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"    public static final String FEE_DESC_BOB \u003d \" \" + PREFIX_FEE + VALID_FEE_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"8765432a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"    public static final String INVALID_PARENT_PHONE_DESC \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"            \" \" + PREFIX_PARENT_PHONE + \"8765 4321\"; // \u0027 \u0027 spaces not allowed in phones","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"    public static final String INVALID_PARENT_EMAIL_DESC \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"            \" \" + PREFIX_PARENT_EMAIL + \"bobparent.yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"    public static final String INVALID_FEE_DESC \u003d \" \" + PREFIX_FEE + \"$999.99\"; // \u0027$\u0027 not allowed in fees","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"Chesterwongz"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(VALID_PARENT_PHONE_AMY).withParentEmail(VALID_PARENT_EMAIL_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"Chesterwongz"},"content":"                .withAddress(VALID_ADDRESS_AMY).withFee(VALID_FEE_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"Chesterwongz"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(VALID_PARENT_PHONE_BOB).withParentEmail(VALID_PARENT_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"Chesterwongz"},"content":"                .withAddress(VALID_ADDRESS_BOB).withFee(VALID_FEE_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Chesterwongz":34,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_FIELD;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"Chesterwongz"},"content":"    public void execute_noContactFieldUnfilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"Chesterwongz"},"content":"                .withPhone(EMPTY_FIELD).withEmail(EMPTY_FIELD)","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(EMPTY_FIELD).withParentEmail(EMPTY_FIELD).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"Chesterwongz"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"Chesterwongz"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_CONTACT_REQUIRED);","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"Chesterwongz"},"content":"    public void execute_noContactFieldFilteredList_failure() {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"Chesterwongz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"Chesterwongz"},"content":"        // edit person in filtered list to have all contact fields empty","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"Chesterwongz"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"Chesterwongz"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(personInList)","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"Chesterwongz"},"content":"                .withPhone(EMPTY_FIELD).withEmail(EMPTY_FIELD)","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(EMPTY_FIELD).withParentEmail(EMPTY_FIELD).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_CONTACT_REQUIRED);","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Chesterwongz":25,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEE_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_EMAIL_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"        // different parent phone -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"        // different parent email -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withParentEmail(VALID_PARENT_EMAIL_BOB).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"        // different outstanding fees -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withFee(VALID_FEE_BOB).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Chesterwongz":20,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/LessonAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":" * Contains integration tests (interaction with the Model) and unit tests for LessonAddCommand.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"public class LessonAddCommandTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    public void constructor_nullLesson_throwsNullPointerException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LessonAddCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    public void execute_duplicateLesson_throwsCommandException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withSampleLesson().build();","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand lessonAddCommand \u003d new LessonAddCommand(INDEX_FIRST_PERSON, SampleDataUtil.getSampleLesson());","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(editedPerson);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"                LessonAddCommand.MESSAGE_DUPLICATE_LESSON, () -\u003e lessonAddCommand.execute(modelStub));","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"    public void equals() {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand addSampleLessonCommand \u003d new LessonAddCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"                SampleDataUtil.getSampleLesson());","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand addSampleLessonCommand2 \u003d new LessonAddCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"                SampleDataUtil.getSampleLesson());","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"        assertTrue(addSampleLessonCommand.equals(addSampleLessonCommand));","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand addSampleLessonCommandCopy \u003d new LessonAddCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"                SampleDataUtil.getSampleLesson());","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"        assertTrue(addSampleLessonCommand.equals(addSampleLessonCommandCopy));","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"        assertFalse(addSampleLessonCommand.equals(1));","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        assertFalse(addSampleLessonCommand.equals(null));","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        assertFalse(addSampleLessonCommand.equals(addSampleLessonCommand2));","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"eeliana"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"eeliana"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"eeliana"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"eeliana"},"content":"        private final Person person;","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"eeliana"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"eeliana"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"eeliana"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"eeliana"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"eeliana"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"eeliana"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"eeliana"},"content":"            UniquePersonList list \u003d new UniquePersonList();","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"eeliana"},"content":"            list.add(this.person);","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"eeliana"},"content":"            return list.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"eeliana":178}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEE_DESC_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEE_DESC_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"                + FEE_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"                + FEE_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"                + FEE_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"                + FEE_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"                + FEE_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"        // multiple remarks - last fee accepted","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FEE_DESC_AMY + FEE_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Chesterwongz"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"Chesterwongz"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + ADDRESS_DESC_BOB + FEE_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"Chesterwongz"},"content":"                + REMARK_DESC_AMY + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_PHONE_DESC_BOB + PARENT_EMAIL_DESC_BOB + FEE_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"Chesterwongz"},"content":"        // zero tags and no remarks","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withEmail(\"\")","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(\"\").withParentEmail(\"\").withFee(\"\").withRemark(\"\").withTags().build();","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"Chesterwongz"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"        // missing all contact prefixes","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Chesterwongz":36,"-":126}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.LessonAddCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"import seedu.address.testutil.LessonUtil;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"    public void parseCommand_ladd() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"        Lesson lesson \u003d SampleDataUtil.getSampleLesson();","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand command \u003d (LessonAddCommand) parser.parseCommand(","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"            LessonUtil.getLessonAddCommand(","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"                INDEX_FIRST_PERSON.getOneBased(),","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"                lesson));","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"        LessonAddCommand other \u003d new LessonAddCommand(INDEX_FIRST_PERSON, lesson);","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"        assertEquals(other, command);","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eeliana":15,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FEE_DESC;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PARENT_EMAIL_DESC;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PARENT_PHONE_DESC;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEE_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_EMAIL_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"Chesterwongz"},"content":"        // invalid name","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"        // invalid phone","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"Chesterwongz"},"content":"        // invalid email","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"        // invalid parent phone","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PARENT_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"        // invalid parent email","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PARENT_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"        // invalid address","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"Chesterwongz"},"content":"        // invalid fee","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FEE_DESC, Fee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"Chesterwongz"},"content":"        // invalid tag","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"Chesterwongz"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":135,"author":{"gitId":"Chesterwongz"},"content":"                + PARENT_EMAIL_DESC_AMY + PARENT_PHONE_DESC_AMY + FEE_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(VALID_PARENT_PHONE_AMY).withParentEmail(VALID_PARENT_EMAIL_AMY)","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"                .withFee(VALID_FEE_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"Chesterwongz"},"content":"        // parent phone","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"Chesterwongz"},"content":"        userInput \u003d targetIndex.getOneBased() + PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"Chesterwongz"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withParentPhone(VALID_PARENT_PHONE_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"Chesterwongz"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"Chesterwongz"},"content":"        // parent email","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"Chesterwongz"},"content":"        userInput \u003d targetIndex.getOneBased() + PARENT_EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"Chesterwongz"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withParentEmail(VALID_PARENT_EMAIL_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"Chesterwongz"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"Chesterwongz"},"content":"        // fee","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"Chesterwongz"},"content":"        userInput \u003d targetIndex.getOneBased() + FEE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"Chesterwongz"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withFee(VALID_FEE_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"Chesterwongz"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"Chesterwongz"},"content":"        // remark","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"Chesterwongz"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"Chesterwongz"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"Chesterwongz"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"Chesterwongz"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":210,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Chesterwongz":55,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Date;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Homework;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Time;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    // TODO: Tests for parsing fees","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"    private static final String INVALID_FEE \u003d \"$9,999.999\";","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    private static final String INVALID_TIME \u003d \"1200\";","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    private static final String INVALID_DATE \u003d \"32 Dec 2021\";","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"    private static final String INVALID_SUBJECT \u003d \"^%123\";","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    private static final String INVALID_HOMEWORK \u003d \"this string contains more than 50 characters\"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"        + \"and is far too long to be accepted as a homework description string\";","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"    private static final String VALID_FEE \u003d \"999.99\";","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"    private static final String VALID_REMARK \u003d \"She\u0027s gr3@t with algebra, bu+ trig0 needs work.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"    private static final String VALID_TIME \u003d \"12:00\";","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"    private static final String VALID_DATE \u003d \"12 Dec 2021\";","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"    private static final String VALID_SUBJECT \u003d \"Math\";","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"    private static final String VALID_HOMEWORK_1 \u003d \"TYS Page 2\";","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"    private static final String VALID_HOMEWORK_2 \u003d \"Textbook Page 204\";","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"Chesterwongz"},"content":"    public void parseFee_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFee((String) null));","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"Chesterwongz"},"content":"    public void parseFee_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFee(INVALID_FEE));","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"Chesterwongz"},"content":"    public void parseFee_validValueWithoutWhitespace_returnsFee() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"Chesterwongz"},"content":"        Fee expectedFee \u003d new Fee(VALID_FEE);","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"Chesterwongz"},"content":"        assertEquals(expectedFee, ParserUtil.parseFee(VALID_FEE));","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"Chesterwongz"},"content":"    public void parseFee_validValueWithWhitespace_returnsTrimmedFee() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"Chesterwongz"},"content":"        String feeWithWhitespace \u003d WHITESPACE + VALID_FEE + WHITESPACE;","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"Chesterwongz"},"content":"        Fee expectedFee \u003d new Fee(VALID_FEE);","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"Chesterwongz"},"content":"        assertEquals(expectedFee, ParserUtil.parseFee(feeWithWhitespace));","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"Chesterwongz"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"Chesterwongz"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsFee() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"Chesterwongz"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"Chesterwongz"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"Chesterwongz"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedFee() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"Chesterwongz"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"Chesterwongz"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"Chesterwongz"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"eeliana"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"eeliana"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"eeliana"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"eeliana"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"eeliana"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"eeliana"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"eeliana"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"eeliana"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"eeliana"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":286,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"eeliana"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"eeliana"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"eeliana"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"eeliana"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"eeliana"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"eeliana"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"eeliana"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(timeWithWhitespace));","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"eeliana"},"content":"    public void parseSubject_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSubject((String) null));","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"eeliana"},"content":"    public void parseSubject_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"eeliana"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSubject(INVALID_SUBJECT));","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"eeliana"},"content":"    public void parseSubject_validValueWithoutWhitespace_returnsSubject() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"eeliana"},"content":"        Subject expectedSubject \u003d new Subject(VALID_SUBJECT);","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedSubject, ParserUtil.parseSubject(VALID_SUBJECT));","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"eeliana"},"content":"    public void parseSubject_validValueWithWhitespace_returnsTrimmedSubject() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"eeliana"},"content":"        String subjectWithWhitespace \u003d WHITESPACE + VALID_SUBJECT + WHITESPACE;","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"eeliana"},"content":"        Subject expectedSubject \u003d new Subject(VALID_SUBJECT);","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedSubject, ParserUtil.parseSubject(subjectWithWhitespace));","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"eeliana"},"content":"    public void parseIndividualPieceOfHomework_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"eeliana"},"content":"            .parseIndividualPieceOfHomework(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"eeliana"},"content":"    public void parseIndividualPieceOfHomework_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"eeliana"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"eeliana"},"content":"            .parseIndividualPieceOfHomework(INVALID_HOMEWORK));","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"eeliana"},"content":"    public void parseIndividualPieceOfHomework_validValueWithoutWhitespace_returnsHomework()","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"eeliana"},"content":"        throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"eeliana"},"content":"        Homework expectedHomework \u003d new Homework(VALID_HOMEWORK_1);","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"eeliana"},"content":"        assertEquals(","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"eeliana"},"content":"            expectedHomework,","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"eeliana"},"content":"            ParserUtil.parseIndividualPieceOfHomework(VALID_HOMEWORK_1));","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"eeliana"},"content":"    public void parseIndividualPieceOfHomework_validValueWithWhitespace_returnsTrimmedHomework()","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"eeliana"},"content":"        throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"eeliana"},"content":"        String homeworkWithWhitespace \u003d WHITESPACE + VALID_HOMEWORK_1 + WHITESPACE;","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"eeliana"},"content":"        Homework expectedHomework \u003d new Homework(VALID_HOMEWORK_1);","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedHomework,","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"eeliana"},"content":"            ParserUtil.parseIndividualPieceOfHomework(homeworkWithWhitespace));","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"eeliana"},"content":"    public void parseHomeworkList_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHomeworkList(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"eeliana"},"content":"    public void parseHomeworkList_collectionWithInvalidHomeworks_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"eeliana"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"eeliana"},"content":"            .parseHomeworkList(Arrays.asList(VALID_HOMEWORK_1, INVALID_HOMEWORK)));","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"eeliana"},"content":"    public void parseHomeworkList_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"eeliana"},"content":"        assertTrue(ParserUtil.parseHomeworkList(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"eeliana"},"content":"    public void parseHomeworkList_collectionWithValidHomeworks_returnsHomeworkSet()","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"eeliana"},"content":"        throws Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"eeliana"},"content":"        Set\u003cHomework\u003e actualHomeworkSet \u003d ParserUtil.parseHomeworkList(","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"eeliana"},"content":"            Arrays.asList(VALID_HOMEWORK_1, VALID_HOMEWORK_2));","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"eeliana"},"content":"        Set\u003cHomework\u003e expectedHomeworkSet \u003d new HashSet\u003cHomework\u003e(","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"eeliana"},"content":"            Arrays.asList(new Homework(VALID_HOMEWORK_1), new Homework(VALID_HOMEWORK_2)));","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"eeliana"},"content":"        assertEquals(expectedHomeworkSet, actualHomeworkSet);","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Chesterwongz":48,"eeliana":143,"-":195}},{"path":"src/test/java/seedu/address/model/lesson/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class DateTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        // null date","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        // invalid date","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        assertFalse(Date.isValidDate(\"31 Feb 2021\")); // no such date","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        assertFalse(Date.isValidDate(\"12 Top 1234\")); // contains invalid month","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        // valid date","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        assertTrue(Date.isValidDate(\"23 Feb 2021\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        assertTrue(Date.isValidDate(\"12 Jan 2022\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        assertTrue(Date.isValidDate(\"29 Feb 2020\")); // leap year","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"eeliana":39}},{"path":"src/test/java/seedu/address/model/lesson/HomeworkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"public class HomeworkTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Homework(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    public void constructor_invalidHomeworkDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"        String invalidHomeworkDescription \u003d \"1234567890 this is more than 50 characters including\"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"            + \"spaces\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Homework(invalidHomeworkDescription));","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public void isValidHomeworkDescription() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        // null homework description","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e Homework.isValidDescription(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"eeliana":27}},{"path":"src/test/java/seedu/address/model/lesson/LessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"public class LessonTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"    /** Arbitrary constants for lesson */","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"    private static final String DATE \u003d \"14 Jan 2022\";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    private static final String START_TIME \u003d \"14:30\";","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"    private static final String END_TIME \u003d \"15:30\";","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"    private static final String SUBJECT \u003d \"Math\";","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"    private static final Set\u003cHomework\u003e HOMEWORK \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"    private static final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    public void updateDateWithWeek_validDateString_success() {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        String validOneWeekLaterDateString \u003d \"21 Jan 2022\";","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"        Lesson lesson \u003d new RecurringLesson(new Date(DATE),","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"            new TimeRange(new Time(START_TIME), new Time(END_TIME)),","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"            new Subject(SUBJECT), HOMEWORK);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        assertEquals(new Date(validOneWeekLaterDateString), lesson.updateDateWithWeek());","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"eeliana"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"eeliana"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"eeliana"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"eeliana"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"eeliana"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"eeliana"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"eeliana"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"eeliana"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"eeliana"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"eeliana"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"eeliana"},"content":"    private static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"        private final Person person;","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"eeliana"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"eeliana"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"eeliana"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"eeliana"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"eeliana"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"eeliana"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"eeliana"},"content":"            UniquePersonList list \u003d new UniquePersonList();","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"eeliana"},"content":"            list.add(this.person);","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"eeliana"},"content":"            return list.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"eeliana":146}},{"path":"src/test/java/seedu/address/model/lesson/TimeRangeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class TimeRangeTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TimeRange(null, null));","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    public void constructor_invalidTimeRange_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"        Time validStartTime \u003d new Time(\"12:00\");","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"        Time validEndTime \u003d new Time(\"10:00\");","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"            new TimeRange(validStartTime, validEndTime));","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"    public void isValidTimeRange() {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"        // null date","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimeRange.isValidTimeRange(null, null));","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        // invalid time range","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        assertFalse(TimeRange.isValidTimeRange(new Time(\"23:00\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"            new Time(\"19:00\"))); // end time earlier than start","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        // valid time","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        assertTrue(TimeRange.isValidTimeRange(new Time(\"13:00\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"            new Time(\"14:30\")));","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"    public void isClashing_timeRange() {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        TimeRange timeRange \u003d new TimeRange(new Time(\"09:00\"), new Time(\"12:00\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        TimeRange clashingTimeRange \u003d new TimeRange(new Time(\"09:00\"), new Time(\"10:00\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"        TimeRange nonClashingTimeRange \u003d new TimeRange(new Time(\"13:00\"), new Time(\"15:00\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"        // time ranges not clashing","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"eeliana"},"content":"        assertFalse(timeRange.isClashing(nonClashingTimeRange));","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"eeliana"},"content":"        // time ranges clashing","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"eeliana"},"content":"        assertTrue(timeRange.isClashing(clashingTimeRange));","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"eeliana":49}},{"path":"src/test/java/seedu/address/model/lesson/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"public class TimeTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"        // null date","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"        // invalid time","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        assertFalse(Time.isValidTime(\"24:30\")); // over 24h","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        assertFalse(Time.isValidTime(\"12.34\")); // invalid format","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        // valid time","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        assertTrue(Time.isValidTime(\"12:00\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        assertTrue(Time.isValidTime(\"02:00\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        assertTrue(Time.isValidTime(\"19:59\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"eeliana":40}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Chesterwongz":1,"-":67}},{"path":"src/test/java/seedu/address/model/person/FeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"class FeeTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Fee(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"    public void constructor_invalidFee_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"        String invalidFee \u003d \" \";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Fee(invalidFee));","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"    public void isValidFee() {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"        // null fee","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(NullPointerException.class, () -\u003e Fee.isValidFee(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"        // invalid fees","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\" \")); // spaces only","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\".12\")); // no dollars before decimal","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"50.\")); // no cents after decimal","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"43..21\")); // more than one decimal","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"3.999\")); // more than two dp","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"a\")); // non-numeric in dollars","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"a.a\")); // non-numeric in dollars and cents","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"50cents\")); // non-numeric with digits","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"99,999\")); // commas within digits","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"10+10\")); // non-numeric, non-period within digits","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"$50.05\")); // starting with dollar sign","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Fee.isValidFee(\"99 999\")); // spaces within digits","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"        // valid fees","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"\")); // empty string","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"0\")); // zero dollars","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"0.0\")); // zero dollars and zero cents","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"123\")); // only dollars","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"0.50\")); // zero dollars and 50 cents","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"765.4\")); // dollars and cents to 1 decimal places","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"99999.99\")); // dollars and cents to 2 decimal places","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"00123.45\")); // leading zeroes","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Fee.isValidFee(\"124293842033123.99\")); // large fee","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Chesterwongz":52}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Chesterwongz":2,"-":73}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_FIELD;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEE_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_EMAIL_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"    public void hasContactField() {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"        // all contact fields present -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(ALICE.hasContactField());","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"        // some contact fields not present -\u003e returns true","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(EMPTY_FIELD).withEmail(EMPTY_FIELD).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(editedAlice.hasContactField());","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"        //all contact fields missing -\u003e returns false","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(EMPTY_FIELD).withEmail(EMPTY_FIELD)","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(EMPTY_FIELD).withParentEmail(EMPTY_FIELD).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(editedAlice.hasContactField());","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"                .withParentPhone(VALID_PARENT_PHONE_BOB).withParentEmail(VALID_PARENT_EMAIL_BOB)","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"                .withFee(VALID_FEE_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Chesterwongz":21,"-":90}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"        assertFalse(Phone.isValidPhone(\"12\")); // less than 3 numbers","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"        assertTrue(Phone.isValidPhone(\"123\")); // exactly 3 numbers","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Chesterwongz":3,"-":37}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"    private static final String INVALID_FEE \u003d \"$50.005\";","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"    private static final String VALID_FEE \u003d BENSON.getFee().toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"    private static final List\u003cJsonAdaptedLesson\u003e EMPTY_LESSONS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"    public void toModelType_invalidParentPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Chesterwongz"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"Chesterwongz"},"content":"    public void toModelType_nullParentPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"Chesterwongz"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_EMAIL,","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"Chesterwongz"},"content":"    public void toModelType_invalidParentEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"Chesterwongz"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"Chesterwongz"},"content":"    public void toModelType_nullParentEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"Chesterwongz"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, null,","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"eeliana"},"content":"                        INVALID_ADDRESS, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"eeliana"},"content":"                        null, VALID_FEE, VALID_REMARK, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"Chesterwongz"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"Chesterwongz"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, null, VALID_TAGS, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"Chesterwongz"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"Chesterwongz"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"Chesterwongz"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"eeliana"},"content":"                        VALID_ADDRESS, VALID_FEE, VALID_REMARK, invalidTags, EMPTY_LESSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Chesterwongz":47,"eeliana":17,"-":110}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setParentPhone(person.getParentPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setParentEmail(person.getParentEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setFee(person.getFee());","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the Parent {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"    public EditPersonDescriptorBuilder withParentPhone(String parentPhone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setParentPhone(new Phone(parentPhone));","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the Parent {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"    public EditPersonDescriptorBuilder withParentEmail(String parentEmail) {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setParentEmail(new Email(parentEmail));","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"Chesterwongz"},"content":"    public EditPersonDescriptorBuilder withFee(String fee) {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setFee(new Fee(fee));","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"Chesterwongz"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Chesterwongz":38,"-":87}},{"path":"src/test/java/seedu/address/testutil/LessonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eeliana"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRING;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"eeliana"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"eeliana"},"content":"import seedu.address.logic.commands.LessonAddCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"eeliana"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"eeliana"},"content":" * A utility class for Lesson.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"eeliana"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"eeliana"},"content":"public class LessonUtil {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"eeliana"},"content":"     * Returns an add command string for adding the {@code lesson}.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"eeliana"},"content":"    public static String getLessonAddCommand(int index, Lesson lesson) {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"eeliana"},"content":"        return LessonAddCommand.COMMAND_WORD + \" \" + index + \" \"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"eeliana"},"content":"            + getLessonDetails(lesson);","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"eeliana"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"eeliana"},"content":"    public static String getLessonDetails(Lesson lesson) {","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"eeliana"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"eeliana"},"content":"        if (lesson.isRecurring()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"eeliana"},"content":"            sb.append(PREFIX_RECURRING + \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"eeliana"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"eeliana"},"content":"        sb.append(PREFIX_DATE + lesson.getDate().toString() + \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"eeliana"},"content":"        sb.append(PREFIX_START_TIME + lesson.getTimeRange().getStart().value + \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"eeliana"},"content":"        sb.append(PREFIX_END_TIME + lesson.getTimeRange().getEnd().value + \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"eeliana"},"content":"        sb.append(PREFIX_SUBJECT + lesson.getSubject().toString() + \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"eeliana"},"content":"        lesson.getHomework().stream().forEach(","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"eeliana"},"content":"            s -\u003e sb.append(PREFIX_HOMEWORK + s.description + \" \")","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"eeliana"},"content":"        );","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"eeliana"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"eeliana"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"eeliana":43}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"eeliana"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"eeliana"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import seedu.address.model.person.Fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355655\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Chesterwongz"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@example.com\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"    public static final String DEFAULT_PARENT_PHONE \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"    public static final String DEFAULT_PARENT_EMAIL \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"    public static final String DEFAULT_FEE \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"    private Phone parentPhone;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"    private Email parentEmail;","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"    private Fee fee;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"eeliana"},"content":"    private Set\u003cLesson\u003e lessons;","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"        parentPhone \u003d new Phone(DEFAULT_PARENT_PHONE);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"        parentEmail \u003d new Email(DEFAULT_PARENT_EMAIL);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Chesterwongz"},"content":"        fee \u003d new Fee(DEFAULT_FEE);","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"eeliana"},"content":"        lessons \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"        parentPhone \u003d personToCopy.getParentPhone();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"        parentEmail \u003d personToCopy.getParentEmail();","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"        fee \u003d personToCopy.getFee();","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"eeliana"},"content":"        lessons \u003d new TreeSet\u003c\u003e(personToCopy.getLessons());","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"eeliana"},"content":"     * Parses the {@code lessons} into a {@code Set\u003cLesson\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"eeliana"},"content":"    public PersonBuilder withLessons() {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"eeliana"},"content":"        this.lessons \u003d SampleDataUtil.getSampleLessons();","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"eeliana"},"content":"        return this;","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"eeliana"},"content":"     * Sets the {@code Set\u003cLesson\u003e} of the {@code Person} that we are building with one sample lesson.","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"eeliana"},"content":"    public PersonBuilder withSampleLesson() {","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"eeliana"},"content":"        Set\u003cLesson\u003e lessonSetWithOneLesson \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"eeliana"},"content":"        lessonSetWithOneLesson.add(SampleDataUtil.getSampleLesson());","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"eeliana"},"content":"        this.lessons \u003d lessonSetWithOneLesson;","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"eeliana"},"content":"        return this;","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"eeliana"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"eeliana"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the Parent {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"Chesterwongz"},"content":"    public PersonBuilder withParentPhone(String parentPhone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"Chesterwongz"},"content":"        this.parentPhone \u003d new Phone(parentPhone);","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the Parent {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"Chesterwongz"},"content":"    public PersonBuilder withParentEmail(String parentEmail) {","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"Chesterwongz"},"content":"        this.parentEmail \u003d new Email(parentEmail);","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the {@code Fee} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"Chesterwongz"},"content":"    public PersonBuilder withFee(String fee) {","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"Chesterwongz"},"content":"        this.fee \u003d new Fee(fee);","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"Chesterwongz"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building as blank.","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"Chesterwongz"},"content":"    public PersonBuilder withRemark() {","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"Chesterwongz"},"content":"        this.remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"Chesterwongz"},"content":"        return this;","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"eeliana"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"eeliana"},"content":"     * Builds a person with the specified information.","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"eeliana"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"eeliana"},"content":"     * @return {@code Person} container the information given.","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"eeliana"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":179,"author":{"gitId":"eeliana"},"content":"        return new Person(name, phone, email, parentPhone, parentEmail,","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"eeliana"},"content":"            address, fee, remark, tags, lessons);","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Chesterwongz":45,"eeliana":30,"-":107}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"        sb.append(PREFIX_PARENT_PHONE + person.getParentPhone().value + \" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"        sb.append(PREFIX_PARENT_EMAIL + person.getParentEmail().value + \" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"        sb.append(PREFIX_FEE + person.getFee().value + \" \");","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.getParentPhone().ifPresent(phone -\u003e sb.append(PREFIX_PARENT_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.getParentEmail().ifPresent(email -\u003e sb.append(PREFIX_PARENT_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.getFee().ifPresent(fee -\u003e sb.append(PREFIX_FEE).append(fee.value).append(\" \"));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Chesterwongz":12,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEE_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEE_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_EMAIL_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_EMAIL_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"    // all fields present","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"            .withParentPhone(\"93251352\").withParentEmail(\"papapauline@example.com\")","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"            .withFee(\"\").withRemark(\"She likes Cheesecake\")","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"    // all fields present with multiple tags","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"            .withParentPhone(\"94328765\").withParentEmail(\"ben@example.com\")","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"            .withFee(\"99.99\").withRemark(\"He likes chocolate ice cream\")","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"    // some optional fields missing","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRemark(\"He likes french fries\").build();","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822244\")","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"Chesterwongz"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824278\")","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824422\")","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84842424\")","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84832131\")","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"            .withEmail(VALID_EMAIL_AMY).withParentPhone(VALID_PARENT_PHONE_AMY).withParentEmail(VALID_PARENT_EMAIL_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"            .withAddress(VALID_ADDRESS_AMY).withFee(VALID_FEE_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"            .withEmail(VALID_EMAIL_BOB).withParentPhone(VALID_PARENT_PHONE_BOB).withParentEmail(VALID_PARENT_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"            .withAddress(VALID_ADDRESS_BOB).withFee(VALID_FEE_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Chesterwongz":30,"-":62}}]
