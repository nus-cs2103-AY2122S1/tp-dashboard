[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"# ezFoodie :takeout_box:","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-F12-4/tp)","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"* Have you faced some issues when managing the members in your restaurant? `ezFoodie` is here!","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"* `ezFoodie` is a desktop application that helps restaurants **keep track of their ever-growing list of members**. It is optimized for using via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. If you can type fast, ezFoodie can get your member management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"* If you are interested in using `ezFoodie`, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s1-cs2103t-f12-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"* If you are interested in developing `ezFoodie`, the [**Developer Guide**](https://ay2122s1-cs2103t-f12-4.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"This project developed based on the **[Address Book Product Website](https://se-education.org/addressbook-level3)** project. Which is a part of the se-education.org initiative.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more information.","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"zzybluebell":16,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    archiveName \u003d \u0027ezfoodie.jar\u0027","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"HolmesJJ":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"You can reach us via email, as indicated below.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"---","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"### Hu Jiajun `e0556371@u.nus.edu`","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"\u003cimg src\u003d\"images/holmesjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"[[github@holmesjj](http://github.com/holmesjj)]","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"[[portfolio@holmesjj](team/holmesjj.md)]","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"* Role: Tech lead, Git expert","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"---","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"### Raja Sudalaimuthu Mukund `mukundrs001@gmail.com`","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"\u003cimg src\u003d\"images/mukundrs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"[[github@mukundrs](https://github.com/mukundrs)]","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"* Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"* Responsibilities: Documentation, deliverables and deadlines","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"---","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"### Zhang Zhiyao `e0449925@u.nus.edu`","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"\u003cimg src\u003d\"images/zzybluebell.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"[[github@zzybluebell](http://github.com/zzybluebell)]","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"[[portfolio@zzybluebell](team/zzybluebell.md)]","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"---","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"### Chen Shi Yao, Stephanie `stephaniechenshiyao@gmail.com`","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"\u003cimg src\u003d\"images/stephanie-csy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"[[github@stephanie-csy](http://github.com/stephanie-csy)]","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"---","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"### Yang Yuzhao `e0425130@u.nus.edu`","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"\u003cimg src\u003d\"images/morrow1ndy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"[[github@Morrow1ndy](http://github.com/Morrow1ndy)]","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"---","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Morrow1ndy":29,"-":32,"HolmesJJ":8}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"1. When `Logic` is called upon to execute a command, it uses the `EzFoodieParser` class to parse the user command.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"![ParserClasses](images/ParserClasses.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"mukundrs"},"content":"* When called upon to parse a user command, the `EzFoodieParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `EzFoodieParser` returns back as a `Command` object.","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"mukundrs"},"content":"* stores the ezFoodie data i.e., all `Member` objects (which are contained in a `UniqueMemberList` object).","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"mukundrs"},"content":"* stores the currently \u0027selected\u0027 `Member` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cMember\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"mukundrs"},"content":"* inherits from both `EzFoodieStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"mukundrs"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"### Find feature","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"`[written by: Hu Jiajun]`","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step.","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"1. The user executes `find -m -id 10001 10002` command to find the members with the member ids `10001` and `10002` in the application.","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"2. The command is handled by `LogicManager#execute(String)`, which then calls and passes this command to the `EzFoodieParser#parseCommand(String)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"3. The `EzFoodieParser` detects the command word `find` in the string and extracts the argument string `-m -id 10001 10002`.","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"4. The `EzFoodieParser` creates a new `FindCommandParser` instance to parse the argument string according to the format specified for `FindCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"5. The argument string is parsed to the member ids array `[10001, 10002]` using the `FindCommandParser#parse(String)` method, which also performs validation.","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"6. The `FindCommandParser` creates a new `IdContainsKeywordsPredicate` instance with the member ids array `[10001, 10002]` to handle the filter.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"7. The `FindCommandParser` creates a new `FindCommand` instance with the `IdContainsKeywordsPredicate` instance and returns it to `EzFoodieParser`, which in turn returns it to `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"8. The `LogicManager` calls the `FindCommand#execute(Model)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"9. The `FindCommand` calls the `Model#updateFilteredMemberList(IdContainsKeywordsPredicate)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"10. The `Model` calls the `FilteredList#setPredicate(IdContainsKeywordsPredicate)` to filter the members by the member ids `10001` and `10002`","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"11. The application lists the filtered members.","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"12. Lastly, the `FindCommand` creates a `CommandResult` with a `SuccessMessage` and returns it to `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"The above process is shown in the following sequence diagram:","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"**Sequence diagram showcasing the find command process**","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommandParser`, `IdContainsKeywordsPredicate` and `FindCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"The following activity diagram summarizes what happens when a user executes a new command to find the members by keywords:","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"**Activity diagram showcasing the find command execution flow**","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"#### Design consideration","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"**Aspect: How to execute different types of keywords with `FindCommand`**","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"* **Alternative 1 (current choice):** Add corresponding constructors for different types of keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"  * Pros: Easy to implement, only need to make a few changes to the source code.","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"  * Cons: Insufficient use of object-oriented features (inheritance and polymorphic).","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"* **Alternative 2:** Abstract `FindCommand`, create different classes according to different types of keywords to inherit `FindCommand`, such as `FindIdCommand`, `FindNameCommand`, `FindEmailCommand`, etc.","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"  * Pros: Sufficient use of object-oriented features (inheritance and polymorphic).","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"  * Cons: Have to make more changes to the source code, it may cause potential bugs.","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"### Sort feature","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"`[written by: Hu Jiajun]`","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"1. The user executes `sort -m -c -a` command to sort the members by their credits in ascending order in the application.","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"2. The command is handled by `LogicManager#execute(String)`, which then calls and passes this command to the `EzFoodieParser#parseCommand(String)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"3. The `EzFoodieParser` detects the command word `sort` in the string and extracts the argument string `-m -c -a`.","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"HolmesJJ"},"content":"4. The `EzFoodieParser` creates a new `SortCommandParser` instance to parse the argument string according to the format specified for `SortCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"5. The argument string is parsed to `a` (ascending order) and converted to the enum tpye `SortStatus.ASC` using the `SortCommandParser#parse(String)` method, which also performs validation.","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"6. The `SortCommandParser` creates a new `CreditSortComparator` instance with the enum tpye `SortStatus.ASC` to handle the sort.","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"HolmesJJ"},"content":"7. The `SortCommandParser` creates a new `SortCommand` instance with the `CreditSortComparator` instance and returns it to `EzFoodieParser`, which in turn returns it to `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"HolmesJJ"},"content":"8. The `LogicManager` calls the `SortCommand#execute(Model)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"9. The `SortCommand` calls the `Model#updateSortedMemberList(CreditSortComparator)` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"HolmesJJ"},"content":"10. The `Model` calls the `SortedList#setComparator(CreditSortComparator)` method to sort the members by their credits in ascending order","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"11. The application lists the sorted members.","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"12. Lastly, the `SortCommand` creates a `CommandResult` with a `SuccessMessage` and returns it to `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"HolmesJJ"},"content":"The above process is shown in the following sequence diagram:","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"HolmesJJ"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"HolmesJJ"},"content":"**Sequence diagram showcasing the sort command process**","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"HolmesJJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SortCommandParser`, `CreditSortComparator` and `SortCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"HolmesJJ"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"HolmesJJ"},"content":"The following activity diagram summarizes what happens when a user executes a new command to sort the members by their credits:","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"HolmesJJ"},"content":"![SortActivityDiagram](images/SortActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"HolmesJJ"},"content":"**Activity diagram showcasing the sort command execution flow**","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"HolmesJJ"},"content":"#### Design consideration","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"HolmesJJ"},"content":"**Aspect: How to sort by different types of fields with `SortCommand`**","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"HolmesJJ"},"content":"* **Alternative 1 (current choice):** Add corresponding constructors for different types of fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"HolmesJJ"},"content":"  * Pros: Easy to implement, only need to make a few changes to the source code.","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"HolmesJJ"},"content":"  * Cons: Insufficient use of object-oriented features (inheritance and polymorphic).","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"HolmesJJ"},"content":"* **Alternative 2:** Abstract `SortCommand`, create different classes according to different types of fields to inherit `SortCommand`, such as `SortPointCommand`, `SortCreditCommand`, etc.","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"HolmesJJ"},"content":"  * Pros: Sufficient use of object-oriented features (inheritance and polymorphic).","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"HolmesJJ"},"content":"  * Cons: Have to make more changes to the source code, it may cause potential bugs.","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"zzybluebell"},"content":"### Add member feature","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"HolmesJJ"},"content":"`[written by: Zhang Zhiyao]`","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"zzybluebell"},"content":"#### Implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"zzybluebell"},"content":"Given below is an example usage scenario and how the adding members behaves at each step.","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"zzybluebell"},"content":"1. The user executes `add -m -n -p -e -a` command to add a member in the Ezfoodie and its\u0027 storage","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"zzybluebell"},"content":"#### Design consideration","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"zzybluebell"},"content":"### Update Credit feature","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"HolmesJJ"},"content":"`[written by: Zhang Zhiyao]`","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"zzybluebell"},"content":"#### Implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"zzybluebell"},"content":"Given below is an example usage scenario and how the update credit feature behaves at each step.","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"zzybluebell"},"content":"1. when user add transaction , it will auto-trigger update new credit","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"zzybluebell"},"content":"#### Design consideration","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"zzybluebell"},"content":"### Update Point feature","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"HolmesJJ"},"content":"`[written by: Zhang Zhiyao]`","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"zzybluebell"},"content":"#### Implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"zzybluebell"},"content":"Given below is an example usage scenario and how the update point feature behaves at each step.","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"zzybluebell"},"content":"1. when user add transaction, it will auto update new point","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"zzybluebell"},"content":"2. The user executes `redeem -r -id` command to redeem point from exist credit by user id.","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"zzybluebell"},"content":"3. The user executes `redeem -r -index` command to redeem point from exist credit by user index listed in page.","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"zzybluebell"},"content":"#### Design consideration","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"mukundrs"},"content":"### Add Reservation Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"mukundrs"},"content":"`[written by: Raja Sudalaimuthu Mukund]`","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"mukundrs"},"content":"#### Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"mukundrs"},"content":"Given below is an example usage scenario and how the add reservation mechanism behaves at each step.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"mukundrs"},"content":"1. The user executes `add -rs/ -dt/2021-01-01 00:00 -rm/2 people -id/10001` command to add a reservation for 2 people at","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"mukundrs"},"content":"    2021-01-01 00:00 hrs to member id 10001\u0027s reservation list.","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"mukundrs"},"content":"2. The command is handled by `LogicManager#execute(String)`, which then calls and passes this command to the ","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"mukundrs"},"content":"    `EzFoodieParser#parseCommand(String)` method.","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"mukundrs"},"content":"3. The EzFoodieParser detects the command word `add` in the string and extracts the argument string ","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"mukundrs"},"content":"    `-rs/ -dt/2021-01-01 00:00 -rm/2 people -id/10001`.","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":333,"author":{"gitId":"mukundrs"},"content":"4. The EzFoodieParser creates a new `AddCommandPrefixParser` instance to parse the argument string according to the ","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"mukundrs"},"content":"    format specified for `AddCommand` and calls `AddCommandPrefixParser#parse(arguments)`.","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"mukundrs"},"content":"5. `AddCommandPrefixParser#parse(arguments)` detects the prefix `-rs/` and creates a new instance of ","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"mukundrs"},"content":"    `AddReservationCommandParser` and calls `AddReservationCommandParser#parse(arguments)`.","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"mukundrs"},"content":"6. `AddReservationCommandParser#parse(arguments)` detects the prefixes `-dt/`, `-rm/` and `-id/` and parses them through ","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"mukundrs"},"content":"    `ParseUtil` to obtain the `dateTime`, `remark` and the `memberID`.","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"mukundrs"},"content":"7. Using the obtained `dateTime` and `remark`, a new instance of `Reservation` is created.","lastModifiedDate":"2021-11-06"},{"lineNumber":343,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":344,"author":{"gitId":"mukundrs"},"content":"8. Using the new instance of `Reservation` and the obtained `memberID`, a new instance of `AddReservationCommand` is created and returned to ","lastModifiedDate":"2021-11-06"},{"lineNumber":345,"author":{"gitId":"mukundrs"},"content":"    ezFoodieParser which in turn returns it to `LogicManager`.","lastModifiedDate":"2021-11-06"},{"lineNumber":346,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"mukundrs"},"content":"9. `LogicManager` calls the `AddReservationCommand#execute(Model)` method.","lastModifiedDate":"2021-11-06"},{"lineNumber":348,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"mukundrs"},"content":"10. The `AddReservationCommand` calls `Model#getUpdatedMemberList()` and searches the list to find the member with the respective","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"mukundrs"},"content":"    `memberID` to obtain `memberToEdit`.","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":352,"author":{"gitId":"mukundrs"},"content":"11. The `AddReservationCommand` calls `Model#createUpdatedReservations(memberToEdit, reservationToAdd)` to create a new ","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"mukundrs"},"content":"    instance of the same member but with the new reservation added to the member\u0027s reservation list.","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"mukundrs"},"content":"12. The `AddReservationCommand` calls `Model#setMember(memberToEdit, editedMember)` to replace the old instance of the member","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"mukundrs"},"content":"    with its new instance.","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"mukundrs"},"content":"13. The `AddReservationCommand` calls `Model#updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS)` to update the current","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"mukundrs"},"content":"    member list with the updated member list.","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":361,"author":{"gitId":"mukundrs"},"content":"14. The application lists the updated member list.","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":363,"author":{"gitId":"mukundrs"},"content":"15. Lastly, `AddReservationCommand` creates a new instance of `CommandResult` with a success message, and returns it to Logic Manager.","lastModifiedDate":"2021-11-06"},{"lineNumber":364,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":365,"author":{"gitId":"mukundrs"},"content":"![AddReservationSequenceDiagram](images/AddReservationSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":366,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"HolmesJJ"},"content":"#### Design considerations","lastModifiedDate":"2021-10-20"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"HolmesJJ"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-10-20"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"HolmesJJ"},"content":"**Target user profile story**:","lastModifiedDate":"2021-09-30"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"mukundrs"},"content":"Ben is a restaurant manager. He found that restaurants are becoming more and more popular, the number of members is increasing, and there are a large number of reservations every day. Every day the front desk staffs spend a lot of time in excel or on paper to record new members, record reservations and transactions, and find reservations. With the need to handle multiple tasks at the same time, the staffs are also prone to make careless mistakes at work due to fatigue. 😞","lastModifiedDate":"2021-11-07"},{"lineNumber":470,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":471,"author":{"gitId":"HolmesJJ"},"content":"More importantly, the member list is only stored in excel, it makes it difficult for Ben to manage and analyze members to formulate targeted promotional strategies, which will have bad impact on the profit expansion of the restaurant. 😞","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":473,"author":{"gitId":"HolmesJJ"},"content":"As a manager who is proficient in technology and has commendable experience in Unix, Ben hopes to develop an easy-to-operate application to improve the work efficiency of himself and the staffs. 🤩","lastModifiedDate":"2021-09-30"},{"lineNumber":474,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"HolmesJJ"},"content":"**Target user profile summary**:","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":477,"author":{"gitId":"HolmesJJ"},"content":"Managers and staffs who","lastModifiedDate":"2021-09-30"},{"lineNumber":478,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":479,"author":{"gitId":"mukundrs"},"content":"* work in highly popular restaurants whose number of members is increasing","lastModifiedDate":"2021-11-07"},{"lineNumber":480,"author":{"gitId":"mukundrs"},"content":"* are responsible for managing a large number of member registrations, transactions and reservations daily","lastModifiedDate":"2021-11-07"},{"lineNumber":481,"author":{"gitId":"HolmesJJ"},"content":"* are required to multi-task (manage member registrations and reservations)","lastModifiedDate":"2021-09-30"},{"lineNumber":482,"author":{"gitId":"mukundrs"},"content":"* need to manage and analyze members to formulate promotional strategies","lastModifiedDate":"2021-11-07"},{"lineNumber":483,"author":{"gitId":"HolmesJJ"},"content":"* are proficient in technology","lastModifiedDate":"2021-09-30"},{"lineNumber":484,"author":{"gitId":"HolmesJJ"},"content":"* want to get things done quickly","lastModifiedDate":"2021-09-30"},{"lineNumber":485,"author":{"gitId":"HolmesJJ"},"content":"* are tired of tracking member details from paper or excel","lastModifiedDate":"2021-09-30"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"mukundrs"},"content":"* prefer typing to using mouse","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"HolmesJJ"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-30"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"HolmesJJ"},"content":"**Value proposition**: ","lastModifiedDate":"2021-09-30"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"HolmesJJ"},"content":"helps restaurants keep track of their ever-growing list of members. Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members based on various criteria faster than a typical mouse/GUI driven application.","lastModifiedDate":"2021-09-30"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                                               | So that I can …​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"HolmesJJ"},"content":"| -------- | --------| --------------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-30"},{"lineNumber":501,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | view help                                                 | easily check how to use the commands and access the user guide         |","lastModifiedDate":"2021-09-30"},{"lineNumber":502,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | exit the program                                          |                                                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":503,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | list out a certain number of members                      | easily view and access the member basic information                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":504,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | add new members                                           | easily the track member statuses                                       |","lastModifiedDate":"2021-09-30"},{"lineNumber":505,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | find members by name                                      | easily find the specific members to check their details                |","lastModifiedDate":"2021-10-20"},{"lineNumber":506,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | find member by phone                                      | easily find the specific member to check his/her details               |","lastModifiedDate":"2021-10-20"},{"lineNumber":507,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | find member by email                                      | easily find the specific member to check his/her details               |","lastModifiedDate":"2021-10-20"},{"lineNumber":508,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | find members by registration date                         | easily find a member to check their details                            |","lastModifiedDate":"2021-10-20"},{"lineNumber":509,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | find member by member ID                                  | easily find the specific member to check his/her details               |","lastModifiedDate":"2021-10-20"},{"lineNumber":510,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | view member profile                                       | easily check the specific member\u0027s details                             |","lastModifiedDate":"2021-09-30"},{"lineNumber":511,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | add transaction for members                               | easily track the transaction history of members                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":512,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | redeem a member’s points                                  |                                                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":513,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | staff   | mark reservation for member                               |                                                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":514,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | clear the program                                         | Initialize the entire program                                          |","lastModifiedDate":"2021-09-30"},{"lineNumber":515,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | login as a manager                                        | access manager-only features, e.g. sort the members by their credits   |","lastModifiedDate":"2021-10-20"},{"lineNumber":516,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | logout as a manager                                       | prevent staff from accessing manager-only features                     |","lastModifiedDate":"2021-09-30"},{"lineNumber":517,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | sort members by tier                                      | easily analyze the members\u0027 consumption and distribution               |","lastModifiedDate":"2021-09-30"},{"lineNumber":518,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | sort members by credit                                    | easily offer promotions to the members with the highest consumption    |","lastModifiedDate":"2021-09-30"},{"lineNumber":519,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | edit member name                                          | update member information to latest                                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":520,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | edit member phone                                         | update member information to latest                                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":521,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | edit member email                                         | update member information to latest                                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":522,"author":{"gitId":"HolmesJJ"},"content":"| `* * *`  | manager | delete member by member ID                                | remove member that I no longer need                                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":523,"author":{"gitId":"HolmesJJ"},"content":"| `* *  `  | staff   | unmark reservation for member                             | remove reservation for member that I no longer need                    |","lastModifiedDate":"2021-09-30"},{"lineNumber":524,"author":{"gitId":"HolmesJJ"},"content":"| `* *  `  | staff   | edit reservation for member                               | update reservation for member to latest                                |","lastModifiedDate":"2021-09-30"},{"lineNumber":525,"author":{"gitId":"HolmesJJ"},"content":"| `* *  `  | staff   | find reservations by date                                 | easily find the coming reservations                                    |","lastModifiedDate":"2021-10-20"},{"lineNumber":526,"author":{"gitId":"HolmesJJ"},"content":"| `* *  `  | staff   | be automatically reminded when a reservation is coming    | prepare for seats for the member in time                               |","lastModifiedDate":"2021-09-30"},{"lineNumber":527,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | staff   | undo previous command                                     | easily cancel previous command with accidental mistakes                |","lastModifiedDate":"2021-09-30"},{"lineNumber":528,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | staff   | redo previous command                                     | easily speed up the typing speed of command                            |","lastModifiedDate":"2021-09-30"},{"lineNumber":529,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | staff   | retrieve previous command                                 | easily speed up the typing speed of command                            |","lastModifiedDate":"2021-09-30"},{"lineNumber":530,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | delete a transaction detail                               | correct any accidental mistakes                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":531,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | edit a transaction detail                                 | correct any accidental mistakes                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":532,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | view a visualisation of the summary in a certain period   | know the summary details in a certain period, e.g. total registrations |","lastModifiedDate":"2021-09-30"},{"lineNumber":533,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | edit the amount of credit needed for each membership tier | easily control the number of members for each tier                     |","lastModifiedDate":"2021-09-30"},{"lineNumber":534,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | list number of registrations in a certain month           | easily manage and analyze members                                      |","lastModifiedDate":"2021-09-30"},{"lineNumber":535,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | list number of registrations in a few past weeks          | easily manage and analyze members                                      |","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | manager | list number of registrations in a certain period          | easily manage and analyze members                                      |","lastModifiedDate":"2021-09-30"},{"lineNumber":537,"author":{"gitId":"HolmesJJ"},"content":"| `*    `  | Manager | add promo code for members                                | easily implement promotional strategies                                |","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"HolmesJJ"},"content":"(For all use cases below, the **System** is the `ezFoodie` and the **Actor** is the `Staff` or only the `Manager`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":544,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":545,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC01 - View help**","lastModifiedDate":"2021-09-30"},{"lineNumber":546,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":547,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":548,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":549,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":550,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":551,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to view help.","lastModifiedDate":"2021-09-30"},{"lineNumber":552,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie shows a dialog contains how to use the commands and access the user guide.","lastModifiedDate":"2021-09-30"},{"lineNumber":553,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":554,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":555,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":556,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":557,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":558,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":559,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":560,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":561,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":562,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":563,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":564,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC02 - Exit the program**","lastModifiedDate":"2021-09-30"},{"lineNumber":565,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":566,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":567,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":568,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":569,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":570,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to exits the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":571,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie exits.","lastModifiedDate":"2021-09-30"},{"lineNumber":572,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":573,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":574,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":575,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":576,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":577,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":578,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":579,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":580,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":581,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":582,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":583,"author":{"gitId":"HolmesJJ"},"content":"\u003cb\u003eUse case: \u003clabel id\u003d\"UC03\"\u003eUC03\u003c/label\u003e - List out a certain number of members\u003c/b\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":584,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":585,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":586,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":587,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":588,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":589,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to list out a certain number of members by page.","lastModifiedDate":"2021-09-30"},{"lineNumber":590,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie shows a list of members by page.","lastModifiedDate":"2021-09-30"},{"lineNumber":591,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":592,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":593,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":594,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":595,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":596,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":597,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":598,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":599,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":600,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":601,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":602,"author":{"gitId":"HolmesJJ"},"content":"* 1b. The given page number exceeded the maximum number of pages.","lastModifiedDate":"2021-09-30"},{"lineNumber":603,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":604,"author":{"gitId":"HolmesJJ"},"content":"    * 1b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":605,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":606,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":607,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":608,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":609,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":610,"author":{"gitId":"HolmesJJ"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":611,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":612,"author":{"gitId":"HolmesJJ"},"content":"**Use Case: UC04 - Add a member**","lastModifiedDate":"2021-09-30"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":614,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":616,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":618,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to add the information of a member to the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":619,"author":{"gitId":"HolmesJJ"},"content":"2.  The member is created in ezFoodie with the given information.","lastModifiedDate":"2021-09-30"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":623,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":625,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":626,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":627,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":628,"author":{"gitId":"HolmesJJ"},"content":"      ","lastModifiedDate":"2021-09-30"},{"lineNumber":629,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":630,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":631,"author":{"gitId":"HolmesJJ"},"content":"* 1b. The member (phone or email) already exists in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":632,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":633,"author":{"gitId":"HolmesJJ"},"content":"    * 1b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":634,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":635,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":636,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":637,"author":{"gitId":"HolmesJJ"},"content":"\u003cb\u003eUse case: \u003clabel id\u003d\"UC05\"\u003eUC05\u003c/label\u003e - find a member by [field]\u003c/b\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":638,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":639,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":640,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":641,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":642,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":643,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to find a member by [field] with keywords, [field] can be member ID, name, phone, email or registration date.","lastModifiedDate":"2021-10-20"},{"lineNumber":644,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie shows a list of members whose [field] matches the keywords.","lastModifiedDate":"2021-09-30"},{"lineNumber":645,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":646,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":647,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":648,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":649,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":650,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":651,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":652,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":653,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":654,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":655,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":656,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":658,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":660,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC06 - View member profile**","lastModifiedDate":"2021-09-30"},{"lineNumber":661,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":662,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":663,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":664,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":665,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":666,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":667,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to view a specific member in the list by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":668,"author":{"gitId":"HolmesJJ"},"content":"3.  ezFoodie shows the specific member\u0027s details.","lastModifiedDate":"2021-09-30"},{"lineNumber":669,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":670,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":671,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":672,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":673,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":674,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":675,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":676,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":677,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":678,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":680,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":682,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":683,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":684,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":685,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":686,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC07 - Add a transaction for a member**","lastModifiedDate":"2021-09-30"},{"lineNumber":687,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":688,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":689,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":690,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":691,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":692,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":693,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to add transaction details for a member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":694,"author":{"gitId":"HolmesJJ"},"content":"3.  The transaction of the member is created in ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":695,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":696,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":697,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":698,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":699,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":700,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":701,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":702,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":703,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":704,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":705,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":706,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":707,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":708,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":709,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":710,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":711,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":712,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC08 - Redeem a member’s points**","lastModifiedDate":"2021-09-30"},{"lineNumber":713,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":714,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":715,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":716,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":717,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":718,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":719,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to redeem one gift (e.g. 1 item \u003d 100 points) for a member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":720,"author":{"gitId":"HolmesJJ"},"content":"3.  The points of the member are deducted (e.g. -100 points) in ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":721,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":722,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":723,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":724,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":725,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":726,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":727,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":728,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":729,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":730,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":731,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":732,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":733,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":734,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":735,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":736,"author":{"gitId":"HolmesJJ"},"content":"* 2c. The member does not have enough points.","lastModifiedDate":"2021-09-30"},{"lineNumber":737,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":738,"author":{"gitId":"HolmesJJ"},"content":"    * 2c1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":739,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":740,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":741,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":742,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC09 - Mark reservation for member**","lastModifiedDate":"2021-09-30"},{"lineNumber":743,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":744,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":745,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":746,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":747,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":748,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":749,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to mark reservation for the member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":750,"author":{"gitId":"HolmesJJ"},"content":"3.  A reservation date time of the member is marked in ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":751,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":752,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":753,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":754,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":755,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":756,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":757,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":758,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":759,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":760,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":761,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":762,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":763,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":764,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":765,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":766,"author":{"gitId":"HolmesJJ"},"content":"* 2c. The reservation date time is not after the current date time.","lastModifiedDate":"2021-09-30"},{"lineNumber":767,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":768,"author":{"gitId":"HolmesJJ"},"content":"    * 2c1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":771,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":772,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC10 - Clear the program**","lastModifiedDate":"2021-09-30"},{"lineNumber":773,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":774,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":775,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":776,"author":{"gitId":"HolmesJJ"},"content":"**Preconditions**","lastModifiedDate":"2021-09-30"},{"lineNumber":777,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":778,"author":{"gitId":"HolmesJJ"},"content":"Manager is logged in","lastModifiedDate":"2021-09-30"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to clear and initialize the entire program.","lastModifiedDate":"2021-09-30"},{"lineNumber":783,"author":{"gitId":"HolmesJJ"},"content":"2.  All the data in ezFoodie is removed.","lastModifiedDate":"2021-09-30"},{"lineNumber":784,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":785,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":786,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":787,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":788,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":789,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC11 - Login as a manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":794,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":795,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":796,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":797,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":798,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":799,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to login as a manager.","lastModifiedDate":"2021-09-30"},{"lineNumber":800,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie switch to Manager Mode.","lastModifiedDate":"2021-09-30"},{"lineNumber":801,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":802,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":805,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":806,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":807,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":808,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":809,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":810,"author":{"gitId":"HolmesJJ"},"content":"* 1b. The password is not correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":811,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":812,"author":{"gitId":"HolmesJJ"},"content":"    * 1b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":813,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":814,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":815,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":816,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC12 - Logout as a manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":817,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":818,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":819,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":820,"author":{"gitId":"HolmesJJ"},"content":"**Preconditions**","lastModifiedDate":"2021-09-30"},{"lineNumber":821,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":822,"author":{"gitId":"HolmesJJ"},"content":"Manager is logged in","lastModifiedDate":"2021-09-30"},{"lineNumber":823,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":824,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":825,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":826,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to logout as a manager.","lastModifiedDate":"2021-09-30"},{"lineNumber":827,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie switch to Normal Mode.","lastModifiedDate":"2021-09-30"},{"lineNumber":828,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":829,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":830,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":831,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":832,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":833,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":834,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":835,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":836,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":837,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC13 - Sort members by [field]**","lastModifiedDate":"2021-09-30"},{"lineNumber":838,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":839,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":840,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":841,"author":{"gitId":"HolmesJJ"},"content":"**Preconditions**","lastModifiedDate":"2021-09-30"},{"lineNumber":842,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":843,"author":{"gitId":"HolmesJJ"},"content":"Manager is logged in","lastModifiedDate":"2021-09-30"},{"lineNumber":844,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":845,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":846,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":847,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to sort members by [field], [field] can be name, phone or email.","lastModifiedDate":"2021-09-30"},{"lineNumber":848,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie shows a list of members sorted by the [field].","lastModifiedDate":"2021-09-30"},{"lineNumber":849,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":850,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":851,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":852,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":853,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":854,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":855,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":856,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":857,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":858,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":859,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":860,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC14 - Edit member [field]**","lastModifiedDate":"2021-09-30"},{"lineNumber":865,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":866,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":867,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":868,"author":{"gitId":"HolmesJJ"},"content":"**Preconditions**","lastModifiedDate":"2021-09-30"},{"lineNumber":869,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":870,"author":{"gitId":"HolmesJJ"},"content":"Manager is logged in","lastModifiedDate":"2021-09-30"},{"lineNumber":871,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":872,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":873,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":874,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":875,"author":{"gitId":"HolmesJJ"},"content":"2.  Manager requests to edit member [field] by member ID, [field] can be name, phone or email.","lastModifiedDate":"2021-09-30"},{"lineNumber":876,"author":{"gitId":"HolmesJJ"},"content":"3.  ezFoodie shows the updated information of the member.","lastModifiedDate":"2021-09-30"},{"lineNumber":877,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":878,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":879,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":880,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":881,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":882,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":883,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":884,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":885,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":886,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":887,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":888,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":889,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":890,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":891,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":892,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":893,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":894,"author":{"gitId":"HolmesJJ"},"content":"* 2c. The new phone or email already exists in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":895,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":896,"author":{"gitId":"HolmesJJ"},"content":"    * 2c1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":897,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":898,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":899,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":900,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC15 - Delete member by member ID**","lastModifiedDate":"2021-09-30"},{"lineNumber":901,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":902,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Manager**","lastModifiedDate":"2021-09-30"},{"lineNumber":903,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":904,"author":{"gitId":"HolmesJJ"},"content":"**Preconditions**","lastModifiedDate":"2021-09-30"},{"lineNumber":905,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":906,"author":{"gitId":"HolmesJJ"},"content":"Manager is logged in","lastModifiedDate":"2021-09-30"},{"lineNumber":907,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":908,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":909,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":910,"author":{"gitId":"HolmesJJ"},"content":"1.  Manager requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":911,"author":{"gitId":"HolmesJJ"},"content":"2.  Manager requests to delete the member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":912,"author":{"gitId":"HolmesJJ"},"content":"3.  The member is deleted from ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":913,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":914,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":915,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":916,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":917,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":918,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":919,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":920,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":921,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":922,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":923,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":924,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":925,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":926,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":927,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":928,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":929,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":930,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC16 - Unmark reservation for member**","lastModifiedDate":"2021-09-30"},{"lineNumber":931,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":932,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":933,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":934,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":935,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":936,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":937,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to unmark reservation for the member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":938,"author":{"gitId":"HolmesJJ"},"content":"3.  A reservation date time of the member is unmarked in ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":939,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":940,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":941,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":942,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":943,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":944,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":945,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":946,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":951,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":952,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":953,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":954,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC17 - Edit reservation for member**","lastModifiedDate":"2021-09-30"},{"lineNumber":955,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":956,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":957,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":958,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":959,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":960,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to \u003cu\u003elist a set of members (\u003ca href\u003d\"#UC03\"\u003eUC03\u003c/a\u003e or \u003ca href\u003d\"#UC05\"\u003eUC05\u003c/a\u003e)\u003c/u\u003e.","lastModifiedDate":"2021-09-30"},{"lineNumber":961,"author":{"gitId":"HolmesJJ"},"content":"2.  Staff requests to edit reservation for the member by member ID.","lastModifiedDate":"2021-09-30"},{"lineNumber":962,"author":{"gitId":"HolmesJJ"},"content":"3.  A reservation date time of the member is updated in ezFoodie.","lastModifiedDate":"2021-09-30"},{"lineNumber":963,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":964,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":965,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":966,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":967,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":968,"author":{"gitId":"HolmesJJ"},"content":"    * 2a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":969,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":970,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":971,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":972,"author":{"gitId":"HolmesJJ"},"content":"* 2b. The given member ID does not exist in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":973,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":974,"author":{"gitId":"HolmesJJ"},"content":"    * 2b1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":975,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":976,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":977,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":978,"author":{"gitId":"HolmesJJ"},"content":"* 2c. The reservation date time is not after the current date time.","lastModifiedDate":"2021-09-30"},{"lineNumber":979,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":980,"author":{"gitId":"HolmesJJ"},"content":"    * 2c1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":981,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":982,"author":{"gitId":"HolmesJJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":983,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":984,"author":{"gitId":"HolmesJJ"},"content":"**Use case: UC18 - find reservations by date**","lastModifiedDate":"2021-10-20"},{"lineNumber":985,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":986,"author":{"gitId":"HolmesJJ"},"content":"**Actors: Staff**","lastModifiedDate":"2021-09-30"},{"lineNumber":987,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":988,"author":{"gitId":"HolmesJJ"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":989,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":990,"author":{"gitId":"HolmesJJ"},"content":"1.  Staff requests to find reservations by date.","lastModifiedDate":"2021-10-20"},{"lineNumber":991,"author":{"gitId":"HolmesJJ"},"content":"2.  ezFoodie shows a list of reservations for the date.","lastModifiedDate":"2021-09-30"},{"lineNumber":992,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":993,"author":{"gitId":"HolmesJJ"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":994,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":995,"author":{"gitId":"HolmesJJ"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":996,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":997,"author":{"gitId":"HolmesJJ"},"content":"* 1a. The given input is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":998,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":999,"author":{"gitId":"HolmesJJ"},"content":"    * 1a1. ezFoodie shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":1000,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":1001,"author":{"gitId":"HolmesJJ"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":1002,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":1003,"author":{"gitId":"HolmesJJ"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":1004,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":1005,"author":{"gitId":"HolmesJJ"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"HolmesJJ"},"content":"2.  Should be able to hold up to 1000 members without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":1013,"author":{"gitId":"HolmesJJ"},"content":"3.  Should be able to hold up to 5000 transactions without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":1014,"author":{"gitId":"HolmesJJ"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-30"},{"lineNumber":1015,"author":{"gitId":"HolmesJJ"},"content":"5.  The application should not exceed 50mb in size.","lastModifiedDate":"2021-10-20"},{"lineNumber":1016,"author":{"gitId":"HolmesJJ"},"content":"6.  The documentation should be easy to understand.","lastModifiedDate":"2021-10-20"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"HolmesJJ"},"content":"* **CSV File**: A comma-separated values file is a delimited text file that uses a comma to separate values. Each line of the file is a data record. Each record consists of one or more fields, separated by commas. And it can be opened using Microsoft Excel (Ref: https://en.wikipedia.org/wiki/Comma-separated_values)","lastModifiedDate":"2021-10-20"},{"lineNumber":1024,"author":{"gitId":"HolmesJJ"},"content":"* **JSON file**: A file that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays (or other serializable values) (Ref: https://en.wikipedia.org/wiki/JSON)","lastModifiedDate":"2021-10-20"},{"lineNumber":1025,"author":{"gitId":"HolmesJJ"},"content":"* **Staff**: All employees of the restaurant who will be using the product","lastModifiedDate":"2021-09-30"},{"lineNumber":1026,"author":{"gitId":"HolmesJJ"},"content":"* **Manager**: A special subset of staff with higher permission who can get special access to certain higher level features","lastModifiedDate":"2021-09-30"},{"lineNumber":1027,"author":{"gitId":"HolmesJJ"},"content":"* **Normal Mode**: The mode before the manager login, Normal Mode by default","lastModifiedDate":"2021-09-30"},{"lineNumber":1028,"author":{"gitId":"HolmesJJ"},"content":"* **Manager Mode**: The mode after the manager login","lastModifiedDate":"2021-09-30"},{"lineNumber":1029,"author":{"gitId":"HolmesJJ"},"content":"* **Membership Tiers**: Different membership tiers give members different benefits. Tiers include Silver, Gold, and Platinum","lastModifiedDate":"2021-09-30"},{"lineNumber":1030,"author":{"gitId":"HolmesJJ"},"content":"* **Member Details**: Member ID, Name, Phone, Membership Tiers, Registration Date, Email, Credits, Points, Transaction","lastModifiedDate":"2021-09-30"},{"lineNumber":1031,"author":{"gitId":"HolmesJJ"},"content":"* **Credits**: Represents total amount of money spent at the restaurant (S$1 \u003d 1 credit), accumulated and cannot be decreased","lastModifiedDate":"2021-09-30"},{"lineNumber":1032,"author":{"gitId":"HolmesJJ"},"content":"* **Points**: Earned by 6 times of spending money, can be used to redeem gifts and will be spent","lastModifiedDate":"2021-09-30"},{"lineNumber":1033,"author":{"gitId":"HolmesJJ"},"content":"* **Transaction**: A payment made by a customer at the restaurant","lastModifiedDate":"2021-09-30"},{"lineNumber":1034,"author":{"gitId":"HolmesJJ"},"content":"* **Promo Code**: A string that when used by the customer, gives customer benefits such as discounts or free items","lastModifiedDate":"2021-09-30"},{"lineNumber":1035,"author":{"gitId":"HolmesJJ"},"content":"* **Redemption**: Points that a member has can be redeemed for free items, and the points will then be deducted from the member’s account","lastModifiedDate":"2021-09-30"},{"lineNumber":1036,"author":{"gitId":"HolmesJJ"},"content":"* **Reservation**: A tag contains specific date time represents when the member will come for a meal","lastModifiedDate":"2021-09-30"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zzybluebell":34,"mukundrs":63,"-":358,"HolmesJJ":634}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"\u003cdiv align\u003d\"center\"\u003e\u003cimg height\u003d\"200\" alt\u003d\"ezFoodie Logo\" src\u003d\"images/Logo.png\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"## Introduction","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"Welcome to ezFoodie’s User Guide! 🤩","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"Have you faced issues when managing the members of your restaurant? ezFoodie is here!","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"ezFoodie is a desktop application that helps restaurants **keep track of their ever-growing list of members**. Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"ezFoodie is simple and user-friendly. It is optimized for using via a **Command Line Interface (CLI)** while still enjoying the benefits of a Graphical User Interface (GUI). If you can type fast, ezFoodie can get your member management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"Continue reading to explore the wonders of ezFoodie and enhance the way you manage and analyze your restaurant\u0027s members 🤩","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"# Purpose","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"This User Guide aims to:","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"1. Help new users get familiar with ezFoodie.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"2. Provide a summary of all available commands in ezFoodie and their usages.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"3. Show detailed explanations of all commands and possible issues users may face.","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"4. Frequently asked questions and answers.","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"# Quick start","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"1. Ensure you have Java `11` or above installed in your Computer from [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"2. Download the latest `ezFoodie.jar` from [here](https://github.com/AY2122S1-CS2103T-F12-4/tp/releases).","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ezFoodie.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"4. Double-click the file to start the application. The GUI similar to the one shown below should appear in a few seconds. The application comes preloaded with sample data to test its features.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"    Main window GUI includes the following member fields:","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"   * Index number in the list","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"   * Name","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"   * Tier - *Bronze, Silver, Gold, etc.*","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"     * *This is automatically calculated from a member\u0027s credit.*","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"     * *Upgrade (e.g. Bronze -\u003e Silver) is also automatically handled by ezFoodie.*","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"   * Member ID","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"   * Phone number","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"   * Email address","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"   * Credit","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"     * *Credit refers to the overall accumulated transaction amount of a member,","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"     starting from his registration date.*","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"     * *Credit is forever increasing.*","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"   * Point","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"     * *The way point is accumulated is similar to credit.*","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"     * *However, point can be redeemed as voucher/cash deduction to a member, and point will be deducted","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"     accordingly with redemption.*","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"   * Seat Booking Information","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"   * `login 123456` : Changes user permissions from staff permissions to manager permissions.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"   * `logout` : Logout of manager and change permissions to staff permissions.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"   * `list -mem/` : Lists all members.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"   * `add -mem/ -n/John Doe -p/98765432 -e/johndoe@gmail.com -a/112 Amoy Street, 069907, Singapore` : Adds a contact named `John Doe` to the member list.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"   * `del -mem/ -i/3` : Deletes the member with index number 3 shown in the current list.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"stephanie-csy"},"content":"      **Note:**: Only managers can delete members. Login as a manager before entering the delete command.","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"   * `add -txn/ -id/10001 -b/200.00` : add transaction with a bill $100.00 to member ID 10001 shown in the current list.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"   * `add -rs/ -dt/2021-01-02 00:00 -rm/2 people -id/10001` : add a reservation for 2 people for 2021-01-01 00:00 to member ID 10001 shown in the current list","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"   * `redeem -rd/100 -id/10006` : redeem 100 points from member id 10006 shown in the current list.","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"   * `summary` : View a summary of all the data in the application in one page (**e.g.** No. of members, Past transactions).","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"      **Note:**: Only managers are allowed to view the summary of data. Login as a manager before entering the summary command.","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"   * `clear` : Clears the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"   * `exit` : Exits the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"stephanie-csy"},"content":"  e.g. in `find -mem/ -n/\u003cNAME\u003e`, `NAME` is a parameter which can be used as `find -mem/ -n/John Doe`.","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"  **e.g.** if you specify `-p/12341234 -p/56785678`, only `-p/56785678` will be taken.","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"  **e.g.** if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"stephanie-csy"},"content":"* Meanings of shortcuts:","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"mukundrs"},"content":"    * `-id/`: member ID or transaction ID","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Morrow1ndy"},"content":"    * `-i/`: index number of a member in member list","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"mukundrs"},"content":"    * `-mem/`: member","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"mukundrs"},"content":"    * `-n/`: name","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"mukundrs"},"content":"    * `-p/`: phone no.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"mukundrs"},"content":"    * `-e/`: email ID","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"mukundrs"},"content":"    * `-a/`: address","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"mukundrs"},"content":"    * `-txn/`: transaction","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"mukundrs"},"content":"    * `-rs/`: reservation","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"mukundrs"},"content":"    * `-dt/`: dateTime","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"mukundrs"},"content":"    * `-d/`: date","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"mukundrs"},"content":"    * `-c/`: credit","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"mukundrs"},"content":"    * `-b/`: bill amount","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"mukundrs"},"content":"    * `-rm/`: remark","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"mukundrs"},"content":"    * `-rd/`: redeem","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"mukundrs"},"content":"    * `-pass/`: pass","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"mukundrs"},"content":"    * `-tag/`: tag","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"mukundrs"},"content":"    **ONLY USED IN SORT COMMAND**","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"mukundrs"},"content":"    * `-a/`: ascending","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"mukundrs"},"content":"    * `-d/`: descending","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"mukundrs"},"content":"### 1. Viewing help : `help`","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Morrow1ndy"},"content":"Opens a new window to show how to use the commands, and a link to the User Guide.","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"mukundrs"},"content":"### 2. Exiting the program : `exit`","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"Morrow1ndy"},"content":"Exits the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"Format: `exit`","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"mukundrs"},"content":"### 3. Logging in as a manager : `login`","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Morrow1ndy"},"content":"Logs in as a manager.","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"mukundrs"},"content":"Format: `login \u003cPASSWORD\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"mukundrs"},"content":"*Default Manager Password is `123456`*","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"mukundrs"},"content":"Example: `login 123456`","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"mukundrs"},"content":"### 4. Logging out as a manager : `logout`","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Morrow1ndy"},"content":"Logs out as a manager.","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"mukundrs"},"content":"Format: `logout`","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"mukundrs"},"content":"Example: `logout`","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"mukundrs"},"content":"### 5. Listing out a certain number of members : `list -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Morrow1ndy"},"content":"Lists out a certain number of members.","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"mukundrs"},"content":"Format: `list -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"mukundrs"},"content":"Example: `list -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"mukundrs"},"content":"### 6. Adding a member : `add -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"Morrow1ndy"},"content":"Adds a new member to the member list.","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"mukundrs"},"content":"Format: `add -mem/ -n/\u003cNAME\u003e -p/\u003cPHONE\u003e -e/\u003cEMAIL\u003e -a/\u003cADDRESS\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"mukundrs"},"content":"Example: `add -mem/ -n/John Doe -p/98765432 -e/johndoe@gmail.com -a/112 Amoy Street, 069907, Singapore`","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"stephanie-csy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"stephanie-csy"},"content":"**:information_source: Duplicate members: **\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"stephanie-csy"},"content":"* ezFoodie will not allow adding members with the same **phone number** or **email address** as an existing member.","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"mukundrs"},"content":"### 7. Deleting a member : `del -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Morrow1ndy"},"content":"Deletes a member from the member list","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"stephanie-csy"},"content":"**Note:**: Only managers are allowed to delete members. Login as manager before entering command.","lastModifiedDate":"2021-11-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"mukundrs"},"content":"#### 7.1. Delete by ID","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Morrow1ndy"},"content":"Deletes a member using member id","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"mukundrs"},"content":"Format: `del -mem/ -id/\u003cMEMBER_ID\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"mukundrs"},"content":"Example: `del -mem/ -id/10001`","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"mukundrs"},"content":"#### 7.2. Delete by index number","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Morrow1ndy"},"content":"Deletes a member using member index number from the list","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"mukundrs"},"content":"Format: `del -mem/ -i/\u003cMEMBER_INDEX\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"mukundrs"},"content":"Example: `del -mem/ -i/1`","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"mukundrs"},"content":"### 8. Finding members : `find -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Morrow1ndy"},"content":"Finds members by different fields which contain any of the given keywords, show top 50 records by default.","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"stephanie-csy"},"content":"* The find is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"Morrow1ndy"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"Morrow1ndy"},"content":"**Note:** No member will be listed when an invalid member field is entered.","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"mukundrs"},"content":"#### 8.1. Finding member by member ID","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"mukundrs"},"content":"Format: `find -mem/ -id/\u003cMEMBER_ID\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"mukundrs"},"content":"Example: `find -mem/ -id/10001`","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"mukundrs"},"content":"#### 8.2. Finding members by name","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"mukundrs"},"content":"Format: `find -mem/ -n/\u003cNAME\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"mukundrs"},"content":"Example: `find -mem/ -n/John Doe`","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"mukundrs"},"content":"#### 8.3. Finding members by phone","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"mukundrs"},"content":"Format: `find -mem/ -p/\u003cPHONE\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"mukundrs"},"content":"Example: `find -mem/ -p/98765432`","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":268,"author":{"gitId":"mukundrs"},"content":"#### 8.4. Finding members by email","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":270,"author":{"gitId":"mukundrs"},"content":"Format: `find -mem/ -e/\u003cEMAIL\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"mukundrs"},"content":"Example: `find -mem/ -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"mukundrs"},"content":"#### 8.5. Finding members by registration date","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"mukundrs"},"content":"Format: `find -mem/ -d/\u003cyyyy-MM-dd\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"mukundrs"},"content":"Example: `find -mem/ -d/2021-01-02`","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"mukundrs"},"content":"### 9. Viewing member profile : `show -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"HolmesJJ"},"content":"Views member from member list by member ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"Morrow1ndy"},"content":"**Note:** No member details will be shown when an invalid member ID is entered.","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"mukundrs"},"content":"Format: `show -mem/ -id/ \u003cMEMBER_ID\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"mukundrs"},"content":"Example: `show -mem/ -id/10001`","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"mukundrs"},"content":"### 10. Editing a member : `edit -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":292,"author":{"gitId":"Morrow1ndy"},"content":"Edits different fields in a member\u0027s profile, where the member is specified by member ID.","lastModifiedDate":"2021-11-06"},{"lineNumber":293,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"Morrow1ndy"},"content":"**Note:** #10 only deals with editing member details.","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"Morrow1ndy"},"content":"If a member\u0027s transactions need to be edited, refer to #13 below.","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"Morrow1ndy"},"content":"Do not mix `-mem/`and `-txn/` in one `edit` command.","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"mukundrs"},"content":"#### 10.1. Editing member name by member ID","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -id/\u003cMEMBER_ID\u003e -n/\u003cNAME\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":302,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -id/10001 -n/John Doe`","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":304,"author":{"gitId":"mukundrs"},"content":"#### 10.2. Editing member phone by member ID","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":306,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -id/\u003cMEMBER_ID\u003e -p/\u003cPHONE\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -id/10001 -p/98765432`","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"mukundrs"},"content":"#### 10.3. Editing member email by member ID","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -id/\u003cMEMBER_ID\u003e -e/\u003cEMAIL\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":314,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -id/10001 -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":316,"author":{"gitId":"mukundrs"},"content":"#### 10.4. Editing member address by member ID","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":318,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -id/\u003cMEMBER_ID\u003e -a/\u003cADDRESS\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":320,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -id/10001 -a/33 Benoi Crescent, 629979, Singapore`","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":322,"author":{"gitId":"mukundrs"},"content":"#### 10.5. Editing member name by index number","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":324,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -i/\u003cINDEX\u003e -n/\u003cNAME\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":326,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -i/1 -n/John Doe`","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":328,"author":{"gitId":"mukundrs"},"content":"#### 10.6. Editing member phone by index number","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":330,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -i/\u003cINDEX\u003e -p/\u003cPHONE\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":332,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -i/1 -p/98765432`","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":334,"author":{"gitId":"mukundrs"},"content":"#### 10.7. Editing member email by index number","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":336,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -i/\u003cINDEX\u003e -e/\u003cEMAIL\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -i/1 -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":340,"author":{"gitId":"mukundrs"},"content":"#### 10.8. Editing member address by index number","lastModifiedDate":"2021-11-04"},{"lineNumber":341,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":342,"author":{"gitId":"mukundrs"},"content":"Format: `edit -mem/ -i/\u003cINDEX\u003e -a/\u003cADDRESS\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":344,"author":{"gitId":"mukundrs"},"content":"Example: `edit -mem/ -i/1 -a/33 Benoi Crescent, 629979, Singapore`","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"mukundrs"},"content":"### 11. Adding transaction for members : `add -txn/`","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"Morrow1ndy"},"content":"Adds transaction amount corresponding to member ID.","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":350,"author":{"gitId":"stephanie-csy"},"content":"Format: `add -txn/ -id/\u003cMEMBER_ID\u003e -b/\u003cBILL_AMOUNT\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":352,"author":{"gitId":"mukundrs"},"content":"Example: `add -txn/ -id/10001 -b/200.00`","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":354,"author":{"gitId":"stephanie-csy"},"content":"**Note:** Transaction date and time is automatically assigned by local date and time when a transaction is added,","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"stephanie-csy"},"content":"there is no need to manually enter the transaction date or time.","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"mukundrs"},"content":"### 12. Deleting transaction for members: `del -txn/`","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"Morrow1ndy"},"content":"Deletes a transaction.","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"stephanie-csy"},"content":"**Note:**: Only managers are allowed to delete transactions. Login as manager before entering command.","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"mukundrs"},"content":"Format: `del -txn/ -id/\u003cMEMBER_ID + TRANSACTION_ID\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"mukundrs"},"content":"Example: `del -txn/ -id/10001100001`","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"mukundrs"},"content":"### 13. Editing transaction of a member: `edit -txn/`","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"Morrow1ndy"},"content":"Edits a member\u0027s transaction.","lastModifiedDate":"2021-11-06"},{"lineNumber":370,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"mukundrs"},"content":"Format: `edit -txn/ -id/\u003cMEMBER_ID + TRANSACTION_ID\u003e -b/ \u003cBILL_AMMOUNT\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":373,"author":{"gitId":"mukundrs"},"content":"Example: `edit -txn/ -id/10001100002 -b/ 10.00`","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":375,"author":{"gitId":"Morrow1ndy"},"content":"**Note:** Transaction date and time cannot be modified once a transaction is added.","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"mukundrs"},"content":"### 14. Adding a reservation: `add -rs/`","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":379,"author":{"gitId":"Morrow1ndy"},"content":"Adds a reservation to a member.","lastModifiedDate":"2021-11-06"},{"lineNumber":380,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":381,"author":{"gitId":"mukundrs"},"content":"Format: `add -rs/ -dt/\u003cyyyy-MM-dd HH:mm\u003e -rm/ \u003cREMARK\u003e -id/ \u003cMEMBER_ID\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":382,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":383,"author":{"gitId":"mukundrs"},"content":"Example: `add -rs/ -dt/2021-01-02 00:00 -rm/2 people -id/10001`","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"mukundrs"},"content":"### 15. Deleting a reservation: `del -rs/`","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"Morrow1ndy"},"content":"Deletes a reservation from a member\u0027s reservation list.","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":389,"author":{"gitId":"stephanie-csy"},"content":"**Note:**: Only managers are allowed to delete reservations. Login as manager before entering command.","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"mukundrs"},"content":"Format: `del -rs/ -id/\u003cMEMBER_ID + RESERVATION_ID\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"mukundrs"},"content":"Example: `del -rs/ -id/10001100001`","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"mukundrs"},"content":"### 16. Editing a reservation: `edit -rs/`","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":397,"author":{"gitId":"Morrow1ndy"},"content":"Edits a member\u0027s reservation details.","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":399,"author":{"gitId":"mukundrs"},"content":"Format: `edit -rs/ -id/\u003cMEMBER_ID + RESERVATION_ID\u003e [-dt/ \u003cDATE_TIME\u003e][-rm/ \u003cREMARK\u003e]`","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":401,"author":{"gitId":"mukundrs"},"content":"Example: `edit -rs/ -id/10001100001 -dt/2021-12-01 13:00 -rm/3 people`","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":403,"author":{"gitId":"mukundrs"},"content":"### 17. Sorting members by credit : `sort -mem/`","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":405,"author":{"gitId":"mukundrs"},"content":"#### 17.1. Sorting member by credit in ascending order","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":407,"author":{"gitId":"mukundrs"},"content":"Format: `sort -mem/ -c/ -a/`","lastModifiedDate":"2021-11-04"},{"lineNumber":408,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":409,"author":{"gitId":"mukundrs"},"content":"Example: `sort -mem/ -c/ -a/`","lastModifiedDate":"2021-11-04"},{"lineNumber":410,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":411,"author":{"gitId":"mukundrs"},"content":"#### 17.2. Sorting member by credit in descending order","lastModifiedDate":"2021-11-04"},{"lineNumber":412,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":413,"author":{"gitId":"mukundrs"},"content":"Format: `sort -mem/ -c/ -d/`","lastModifiedDate":"2021-11-04"},{"lineNumber":414,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":415,"author":{"gitId":"mukundrs"},"content":"Example: `sort -mem/ -c/ -d/`","lastModifiedDate":"2021-11-04"},{"lineNumber":416,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":417,"author":{"gitId":"mukundrs"},"content":"### 18. Redeeming point `redeem -rd/`","lastModifiedDate":"2021-11-06"},{"lineNumber":418,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":419,"author":{"gitId":"Morrow1ndy"},"content":"#### 18.1. Redeeming point for a member by member id: `redeem -f/ -id/`","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"Morrow1ndy"},"content":"Redeems point for a member, who is identified by his member id.","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":422,"author":{"gitId":"mukundrs"},"content":"Format: `redeem -rd/\u003cPOINTS\u003e -id/\u003cMEMBER_ID\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":424,"author":{"gitId":"mukundrs"},"content":"Example: `redeem -rd/100 -id/10006`","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":426,"author":{"gitId":"Morrow1ndy"},"content":"#### 18.2. Redeeming point for a member by index: `redeem -f/ -i/`","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"Morrow1ndy"},"content":"Redeems point for a member, who is identified by his index in the member list.","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"mukundrs"},"content":"Format: `redeem -rd/\u003cpoint\u003e -i/\u003cINDEX\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":431,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":432,"author":{"gitId":"mukundrs"},"content":"Example: `redeem -rd/100 -i/1`","lastModifiedDate":"2021-11-05"},{"lineNumber":433,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"mukundrs"},"content":"### 19. Summary: `summary`","lastModifiedDate":"2021-11-04"},{"lineNumber":435,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":436,"author":{"gitId":"Morrow1ndy"},"content":"Views the summary of stored data in ezFoodie.","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"stephanie-csy"},"content":"**Note:**: Only managers are allowed to view summary. Login as manager before entering command.","lastModifiedDate":"2021-11-06"},{"lineNumber":439,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":440,"author":{"gitId":"mukundrs"},"content":"Format: `summary`","lastModifiedDate":"2021-11-04"},{"lineNumber":441,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"Morrow1ndy"},"content":"### 20. Clearing ezFoodie data : `clear`","lastModifiedDate":"2021-11-06"},{"lineNumber":443,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"Morrow1ndy"},"content":"Clears all data stored in ezFoodie. Use with Caution!","lastModifiedDate":"2021-11-06"},{"lineNumber":445,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":446,"author":{"gitId":"mukundrs"},"content":"Format: `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":447,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":448,"author":{"gitId":"stephanie-csy"},"content":"**Note:**:Only managers are allowed to clear.","lastModifiedDate":"2021-11-06"},{"lineNumber":449,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":450,"author":{"gitId":"mukundrs"},"content":"### 21. Saving the data","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":452,"author":{"gitId":"Morrow1ndy"},"content":"ezFoodie data are saved in a JSON file in hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-11-06"},{"lineNumber":453,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":454,"author":{"gitId":"mukundrs"},"content":"### 22. Editing the data file","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":456,"author":{"gitId":"Morrow1ndy"},"content":"ezFoodie data are located at `[JAR file location]/data/ezFoodie.json`. Advanced users are welcome to update data directly by editing the data file.","lastModifiedDate":"2021-11-06"},{"lineNumber":457,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":458,"author":{"gitId":"HolmesJJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-20"},{"lineNumber":459,"author":{"gitId":"Morrow1ndy"},"content":"If any changes to the JSON file make it invalid, ezFoodie will discard all data and restart with an empty data file at the next run.","lastModifiedDate":"2021-11-06"},{"lineNumber":460,"author":{"gitId":"HolmesJJ"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":462,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"zzybluebell"},"content":"**A**: Install the application in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ezFoodie home folder.","lastModifiedDate":"2021-11-03"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"Morrow1ndy"},"content":"**Q**: Why my ezFoodie does not have any populated sample member data?\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":470,"author":{"gitId":"Morrow1ndy"},"content":"**A**: Delete `ezFoodie.json` and restart the application. Refer to #22 in *Features* above to find this JSON file.","lastModifiedDate":"2021-11-06"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":472,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"stephanie-csy"},"content":"Action | Manager Only? (Y/N) | Format, Examples","lastModifiedDate":"2021-11-06"},{"lineNumber":477,"author":{"gitId":"stephanie-csy"},"content":"--------|---|------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":478,"author":{"gitId":"stephanie-csy"},"content":"**View Help** | N | `help`","lastModifiedDate":"2021-11-06"},{"lineNumber":479,"author":{"gitId":"stephanie-csy"},"content":"**Exit Program** | N | `exit`","lastModifiedDate":"2021-11-06"},{"lineNumber":480,"author":{"gitId":"stephanie-csy"},"content":"**Login as Manager** | Y | *Format* \u003cbr\u003e `login \u003cPASSWORD\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `login 123456`","lastModifiedDate":"2021-11-06"},{"lineNumber":481,"author":{"gitId":"stephanie-csy"},"content":"**Logout as Manager** | Y | `logout`","lastModifiedDate":"2021-11-06"},{"lineNumber":482,"author":{"gitId":"stephanie-csy"},"content":"**List Members** | N | *Format* \u003cbr\u003e `list -mem/` \u003cbr\u003e *Example* \u003cbr\u003e `list -mem/`","lastModifiedDate":"2021-11-06"},{"lineNumber":483,"author":{"gitId":"stephanie-csy"},"content":"**Add New Member** | N | *Format* \u003cbr\u003e `add -mem/ -n/\u003cNAME\u003e -p/\u003cPHONE\u003e -e/\u003cEMAIL\u003e -a/\u003cADDRESS\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `add -mem/ -n/John Doe -p/98765432 -e/johndoe@gmail.com -a/112 Amoy Street, 069907, Singapore`","lastModifiedDate":"2021-11-06"},{"lineNumber":484,"author":{"gitId":"mukundrs"},"content":"**Delete Member by Member ID** | Y | *Format* \u003cbr\u003e `del -mem/ -id/\u003cMEMBER_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `del -mem/ -id/ 10001` \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":485,"author":{"gitId":"mukundrs"},"content":"**Delete Member by Index Number** | Y | *Format* \u003cbr\u003e `del -mem/ -i/\u003cMEMBER_INDEX\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `del -mem/ -i/1`","lastModifiedDate":"2021-11-06"},{"lineNumber":486,"author":{"gitId":"stephanie-csy"},"content":"**Find Member by Member ID** | N | *Format* \u003cbr\u003e `find -mem/ -id/\u003cMEMBER_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `find -mem/ -id/10001`","lastModifiedDate":"2021-11-06"},{"lineNumber":487,"author":{"gitId":"stephanie-csy"},"content":"**Find Members by Name** | N | *Format* \u003cbr\u003e `find -mem/ -n/\u003cNAME\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `find -mem/ -n/John Doe`","lastModifiedDate":"2021-11-06"},{"lineNumber":488,"author":{"gitId":"stephanie-csy"},"content":"**Find Members by Phone** | N | *Format* \u003cbr\u003e `find -mem/ -p/\u003cPHONE\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `find -mem/ -p/98765432`","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"stephanie-csy"},"content":"**Find Members by Email** | N | *Format* \u003cbr\u003e `find -mem/ -e/\u003cEMAIL\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `find -mem/ -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-06"},{"lineNumber":490,"author":{"gitId":"stephanie-csy"},"content":"**Find Members by Registration Date** | N | *Format* \u003cbr\u003e `find -mem/ -d/\u003cREGISTRATION_DATE yyyy-MM-dd\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `find -mem/ -d/2021-01-02`","lastModifiedDate":"2021-11-06"},{"lineNumber":491,"author":{"gitId":"stephanie-csy"},"content":"**View Member Profile** | N | *Format* \u003cbr\u003e `show -mem/ -id/\u003cMEMBER_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `show -mem/ -id/10001`","lastModifiedDate":"2021-11-06"},{"lineNumber":492,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Name by Member ID** | N | *Format* \u003cbr\u003e `edit -mem/ -id/\u003cMEMBER_ID\u003e -n/\u003cNAME\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -id/10001 -n/John Doe`","lastModifiedDate":"2021-11-06"},{"lineNumber":493,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Phone by Member ID** | N | *Format* \u003cbr\u003e `edit -mem/ -id/\u003cMEMBER_ID\u003e -p/\u003cPHONE\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -id/10001 -p/98765432`","lastModifiedDate":"2021-11-06"},{"lineNumber":494,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Email by Member ID** | N | *Format* \u003cbr\u003e `edit -mem/ -id/\u003cMEMBER_ID\u003e -e/\u003cEMAIL\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -id/10001 -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-06"},{"lineNumber":495,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Address by Member ID** | N | *Format* \u003cbr\u003e `edit -mem/ -id/\u003cMEMBER_ID\u003e -a/\u003cADDRESS\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -id/10001 -a/33 Benoi Crescent, 629979, Singapore`","lastModifiedDate":"2021-11-06"},{"lineNumber":496,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Name by Index Number** | N | *Format* \u003cbr\u003e `edit -mem/ -i/\u003cINDEX\u003e -n/ \u003cNAME\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -i/1 -n/John Doe`","lastModifiedDate":"2021-11-06"},{"lineNumber":497,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Phone by Index Number** | N | *Format* \u003cbr\u003e `edit -mem/ -i/\u003cINDEX\u003e -p/\u003cPHONE\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -i/1 -p/98765432`","lastModifiedDate":"2021-11-06"},{"lineNumber":498,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Email by Index Number** | N | *Format* \u003cbr\u003e `edit -mem/ -i/\u003cINDEX\u003e -e/\u003cEMAIL\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -i/1 -e/johndoe@gmail.com`","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"stephanie-csy"},"content":"**Edit Member Address by Index Number** | N | *Format* \u003cbr\u003e `edit -mem/ -i/\u003cINDEX\u003e -a/\u003cADDRESS\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -mem/ -i/1 -a/33 Benoi Crescent, 629979, Singapore`","lastModifiedDate":"2021-11-06"},{"lineNumber":500,"author":{"gitId":"mukundrs"},"content":"**Add Transaction for Member** | N | *Format* \u003cbr\u003e `add -txn/ -id/\u003cMEMBER_ID\u003e -b/\u003cBILLING\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `add -txn/ -id/10001 -b/200.00`","lastModifiedDate":"2021-11-06"},{"lineNumber":501,"author":{"gitId":"mukundrs"},"content":"**Delete Transaction for Member** | Y | *Format* \u003cbr\u003e `del -txn/ -id/\u003cMEMBER_ID + TRANSACTION_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `del -txn/ -id/10001100001`","lastModifiedDate":"2021-11-06"},{"lineNumber":502,"author":{"gitId":"stephanie-csy"},"content":"**Edit Transaction** | N | *Format* \u003cbr\u003e `edit -txn/ -id/ \u003cMEMBER_ID + TRANSACTION_ID\u003e -b/ \u003cBILL_AMMOUNT\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `edit -txn/ -id/ 10001100002 -b/ 10.00`","lastModifiedDate":"2021-11-06"},{"lineNumber":503,"author":{"gitId":"stephanie-csy"},"content":"**Add Reservation** | N | *Format* \u003cbr\u003e `add -rs/ -dt/ \u003cDATE_TIME yyyy-MM-dd HH:mm\u003e -rm/ \u003cREMARK\u003e -id/ \u003cMEMBER_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `add -rs/ -dt/ 2021-01-02 00:00 -rm/ 2 people -id/ 10001`","lastModifiedDate":"2021-11-06"},{"lineNumber":504,"author":{"gitId":"mukundrs"},"content":"**Delete Reservation** | Y | *Format* \u003cbr\u003e `del -rs/ -id/ \u003cMEMBER_ID + RESERVATION_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `del -rs/ -id/ 10001100001`","lastModifiedDate":"2021-11-06"},{"lineNumber":505,"author":{"gitId":"stephanie-csy"},"content":"**Edit Reservation** | N | *Format* \u003cbr\u003e `edit -rs/ -id/\u003cMEMBER_ID + RESERVATION_ID\u003e [-dt/\u003cDATE_TIME\u003e][-rm/\u003cREMARK\u003e]` \u003cbr\u003e *Example* \u003cbr\u003e `edit -rs/ -id/10001100001 -dt/2021-12-01 13:00 -rm/3 people`","lastModifiedDate":"2021-11-06"},{"lineNumber":506,"author":{"gitId":"stephanie-csy"},"content":"**Sort Members by Credit in Ascending Order** | N | *Format* \u003cbr\u003e `sort -mem/ -c/ -a/` \u003cbr\u003e *Example* \u003cbr\u003e `sort -mem/ -c/ -a/`","lastModifiedDate":"2021-11-06"},{"lineNumber":507,"author":{"gitId":"stephanie-csy"},"content":"**Sort Members by Credit in Descending Order** | N | *Format* \u003cbr\u003e `sort -mem/ -c/ -d/` \u003cbr\u003e *Example* \u003cbr\u003e `sort -mem/ -c/ -d/`","lastModifiedDate":"2021-11-06"},{"lineNumber":508,"author":{"gitId":"stephanie-csy"},"content":"**Redeem Point from Member by Member Id** | N | *Format* \u003cbr\u003e `redeem -rd/\u003cPOINTS\u003e -id/\u003cMEMBER_ID\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `redeem -rd/100 -id/10006`","lastModifiedDate":"2021-11-06"},{"lineNumber":509,"author":{"gitId":"stephanie-csy"},"content":"**Redeem Point from Member by Member Index** | N | *Format* \u003cbr\u003e `redeem -rd/\u003cpoint\u003e -i/\u003cINDEX\u003e` \u003cbr\u003e *Example* \u003cbr\u003e `redeem -rd/100 -i/1`","lastModifiedDate":"2021-11-06"},{"lineNumber":510,"author":{"gitId":"mukundrs"},"content":"**Summary** | Y | *Format* \u003cbr\u003e `summary`","lastModifiedDate":"2021-11-06"},{"lineNumber":511,"author":{"gitId":"stephanie-csy"},"content":"**Clear ezFoodie Data** | Y | `clear`","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":88,"stephanie-csy":49,"zzybluebell":15,"mukundrs":166,"-":115,"HolmesJJ":78}},{"path":"docs/diagrams/AddReservationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"participant \":EzFoodieParser\" as EzFoodieParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"participant \":AddCommandPrefixParser\" as AddCommandPrefixParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"participant \":AddReservationCommandParser\" as AddReservationCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"participant \":AddReservationCommand\" as AddReservationCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"participant \"EzFoodie\" as EzFoodie MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"participant \"UniqueMemberList\" as UniqueMemberList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"participant \"FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"[-\u003e LogicManager : execute(add -rs/...)","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"LogicManager -\u003e EzFoodieParser : parseCommand(add -rs/...)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"activate EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"create AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser -\u003e AddCommandPrefixParser : AddCommandPrefixParser()","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"activate AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"AddCommandPrefixParser --\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"deactivate AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser -\u003e AddCommandPrefixParser : parse(arguments)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"activate AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"create AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"AddCommandPrefixParser -\u003e AddReservationCommandParser : AddReservationCommandParser()","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"activate AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser --\u003e AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"deactivate AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"AddCommandPrefixParser --\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"deactivate AddCommandPrefixParser","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser -\u003e AddReservationCommandParser : parse(arguments)","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"activate AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser -\u003e ParserUtil : parseDateTime(datetime)","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"ParserUtil --\u003e AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser -\u003e ParserUtil : parseRemark(remark)","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"ParserUtil --\u003e AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser -\u003e ParserUtil : parseReservationId(id)","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"ParserUtil --\u003e AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"create AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser -\u003e AddReservationCommand : AddReservationCommand(id, datetime, remark)","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"activate AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"AddReservationCommand --\u003e AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"deactivate AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"AddReservationCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"deactivate AddReservationCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser --\u003e LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"deactivate EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"LogicManager -\u003e AddReservationCommand : execute(model)","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"activate AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"AddReservationCommand -\u003e Model : getUpdatedMemberList()","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"mukundrs"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"mukundrs"},"content":"Model --\u003e AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"mukundrs"},"content":"AddReservationCommand -\u003e Model : setMember(memberToEdit, editedMember)","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"mukundrs"},"content":"Model -\u003e EzFoodie : setMember(target, editedMember)","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"activate EzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"EzFoodie -\u003e UniqueMemberList : setMember(target, editedMember)","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"mukundrs"},"content":"activate UniqueMemberList","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"deactivate UniqueMemberList","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"deactivate EzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"AddReservationCommand -\u003e Model : updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS)","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"Model -\u003e FilteredList : setPredicate(predicate)","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"activate FilteredList","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"FilteredList --\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"mukundrs"},"content":"deactivate FilteredList","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"mukundrs"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"mukundrs"},"content":"AddReservationCommand --\u003e LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"mukundrs"},"content":"deactivate AddReservationCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"mukundrs"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"mukundrs"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"mukundrs":111}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"participant \":EzFoodieParser\" as EzFoodieParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"LogicManager -\u003e EzFoodieParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"activate EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"DeleteCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"DeleteCommandParser --\u003e EzFoodieParser : d","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"DeleteCommandParser -[hidden]-\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"deactivate EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mukundrs":10,"-":59}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":":User executes command start with \"find\";","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":":Check command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"if () then ([user command is valid])","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    :Parse arguments from command;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    :Extract keywords from arguments;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    :Create predicate with keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    :Filter members based on predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    :List filtered members;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    :Show success message to user;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"else ([user command is invalid])","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    :Show error message to user;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"HolmesJJ":19}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"participant \":EzFoodieParser\" as EzFoodieParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"participant \"predicate:IdContainsKeywordsPredicate\" as IdContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"participant \"command:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"[-\u003e LogicManager : execute(\"find -m -id 10001 10002\")","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"LogicManager -\u003e EzFoodieParser : parseCommand(\"find -m -id 10001 10002\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"activate EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"create FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser -\u003e FindCommandParser : FindCommandParser()","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"FindCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser -\u003e FindCommandParser : parse(\" -m -id 10001 10002\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"create IdContainsKeywordsPredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"FindCommandParser -\u003e IdContainsKeywordsPredicate : IdContainsKeywordsPredicate([10001, 10002])","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"activate IdContainsKeywordsPredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"IdContainsKeywordsPredicate --\u003e FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"deactivate IdContainsKeywordsPredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"create FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicate)","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"activate FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"FindCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"FindCommandParser -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser --\u003e LogicManager : command","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"deactivate EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"activate FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"FindCommand -\u003e Model : updateFilteredMemberList(predicate)","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"Model -\u003e FilteredList : setPredicate(predicate)","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"activate FilteredList","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"FilteredList --\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"deactivate FilteredList","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"FindCommand -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"destroy FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"IdContainsKeywordsPredicate -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"destroy IdContainsKeywordsPredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"HolmesJJ":81}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"Interface ReadOnlyEzFoodie \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"Class EzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"Class ReadOnlyEzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"Class UniqueMemberList","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"Class Member","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"EzFoodie .up.|\u003e ReadOnlyEzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"Model .left.\u003e ReadOnlyEzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"ModelManager -left-\u003e \"1\" EzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"EzFoodie *--\u003e \"1\" UniqueMemberList","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"UniqueMemberList --\u003e \"~* all\" Member","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"Member *--\u003e Name","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"Member *--\u003e Phone","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"Member *--\u003e Email","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"Member *--\u003e Address","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"Member *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"ModelManager --\u003e\"~* filtered\" Member","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mukundrs":16,"-":38}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"Class EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"HiddenOutside ..\u003e EzFoodieParser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"EzFoodieParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"mukundrs":4,"-":34}},{"path":"docs/diagrams/SortActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":":User executes command start with \"sort\";","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":":Check command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"if () then ([user command is valid])","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    :Parse arguments from command;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    :Extract sort order from arguments;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    :Create comparator with sort order;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    :Sort members based on comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    :List sorted members;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    :Show success message to user;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"else ([user command is invalid])","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    :Show error message to user;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"HolmesJJ":19}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"participant \":EzFoodieParser\" as EzFoodieParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"participant \"comparator:CreditSortComparator\" as CreditSortComparator LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"participant \"command:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"participant \":SortedList\" as SortedList MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"[-\u003e LogicManager : execute(\"sort -m -c -a\")","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"LogicManager -\u003e EzFoodieParser : parseCommand(\"sort -m -c -a\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"activate EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"create SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser -\u003e SortCommandParser : SortCommandParser()","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"activate SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"SortCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser -\u003e SortCommandParser : parse(\" -m -c -a\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"activate SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"create CreditSortComparator","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"SortCommandParser -\u003e CreditSortComparator : CreditSortComparator(SortStatus.ASC)","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"activate CreditSortComparator","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"CreditSortComparator --\u003e SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"deactivate CreditSortComparator","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"create SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"SortCommandParser -\u003e SortCommand : SortCommand(comparator)","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"activate SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"deactivate SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"SortCommandParser --\u003e EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"SortCommandParser -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"destroy SortCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"EzFoodieParser --\u003e LogicManager : command","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"deactivate EzFoodieParser","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"LogicManager -\u003e SortCommand : execute(model)","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"activate SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"SortCommand -\u003e Model : updateSortedMemberList(comparator)","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"Model -\u003e SortedList : setComparator(comparator)","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"activate SortedList","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"SortedList --\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"deactivate SortedList","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"deactivate SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"SortCommand -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"destroy SortCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"CreditSortComparator -[hidden]-\u003e LogicManager : return","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"destroy CreditSortComparator","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"HolmesJJ":81}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"package \"EzFoodie Storage\" #F4F6F6{","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"Interface EzFoodieStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"Class JsonEzFoodieStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"Class JsonSerializableEzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"Class JsonAdaptedMember","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"StorageManager -up-\u003e \"1\" EzFoodieStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"Storage -right-|\u003e EzFoodieStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"JsonEzFoodieStorage .up.|\u003e EzFoodieStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"JsonEzFoodieStorage ..\u003e JsonSerializableEzFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"JsonSerializableEzFoodie --\u003e \"*\" JsonAdaptedMember","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"JsonAdaptedMember --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mukundrs":11,"-":32}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"title: ezFoodie","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F12-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-F12-4/tp)","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"* Have you faced some issues when managing the members in your restaurant? `ezFoodie` is here!","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"* `ezFoodie` is a desktop application that helps restaurants **keep track of their ever-growing list of members**. It is optimized for using via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. If you can type fast, ezFoodie can get your member management tasks done faster than traditional GUI applications.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"* If you are interested in using `ezFoodie`, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s1-cs2103t-f12-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"* If you are interested in developing `ezFoodie`, the [**Developer Guide**](https://ay2122s1-cs2103t-f12-4.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"## Acknowledgements","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"This project developed based on the **[Address Book Product Website](https://se-education.org/addressbook-level3)** project. Which is a part of the se-education.org initiative.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"The icons of the project were obtained from [ezfoodie_icon](https://www.brandcrowd.com/), [member_icon](https://www.percici.com/), [summary_icon](https://www.pngwing.com/)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"Libraries used:","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"* [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"* [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"* [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"* [PlantUML](https://plantuml.com/)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more information.","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Morrow1ndy":9,"zzybluebell":10,"-":11,"HolmesJJ":2}},{"path":"docs/team/holmesjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"title: Hu Jiajun\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"### Introduction","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"This page serves to document my contributions to the project ezFoodie under NUS module CS2103T in AY21/22 semester 1.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"### Project: ezFoodie","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"ezFoodie is a desktop application that helps restaurants **keep track of their ever-growing list of members**.","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"Restaurant managers and staffs interact with ezFoodie using a Command Line Interface (CLI), and has a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"It is written in Java, and has about 35 kLoC, of which I contributed about 10 kLoC.","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?breakdown\u003dtrue\u0026search\u003dholmesjj)","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"* **New Model**: Created the `Account` model to support implementing `login` and `logout` features as a manager. [\\#74](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/74)","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: stores the `Account` information for the manager to `login`.","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: This model is essential, since some advanced features such as `delete` and `sort` are required the manager permission. It is a bridge between the staff and manager.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"  * **Highlights**: This enhancement requires understanding on how `hash` works. The implementation was challenging as the `Account` information need to be hashed when it is storing in the file for the purpose of high security.","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `login` as a manager [\\#74](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/74)","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the manager to `login` as a manager.","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: The staff and manager should not have the full permission to control the application. Some advanced features such as `delete` and `sort` should only be accessed by manager.","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `logout` as a manager [\\#72](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/72)","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the manager to `logout` as a manager.","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: The manager should be able to `logout` the application to prevent the staff from operating the advanced features such as `delete` and `sort` that it should only be accessed by manager.","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `edit` `Transaction` by `Transaction ID` [\\#75](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/75), [\\#112](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/112)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the staff and manager to `edit` `Transaction` by `Transaction ID`.","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: The staff and manager should be able to correct any accidental mistakes conveniently when he/she adds some incorrect `Transaction` records.","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"  * **Highlights**: This enhancement requires understanding on how polymorphism works and implement it so that the application will use Object-oriented programming (OOP) sufficiently. The implementation was challenging as the `EditCommand` need to be abstracted, and inherit `EditCommand` by `EditCommandPrefixParser`, and further inherit `EditCommandPrefixParser` by `EditTransactionCommand`. Similarly, the `EditCommandParser` also need to be abstracted, and inherit it with `EditTransactionCommandParser`.","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `edit` `Reservation` by `Reservation ID` [\\#114](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/114)","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the staff and manager to `edit` `Reservation` by `Reservation ID`.","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: The staff and manager should be able to correct any accidental mistakes conveniently when he/she adds some incorrect `Reservation` records.","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"  * **Highlights**: This enhancement requires understanding on how polymorphism works and implement it so that the application will use Object-oriented programming (OOP) sufficiently. The implementation was challenging as the `EditCommand` need to be abstracted, and inherit `EditCommand` by `EditCommandPrefixParser`, and further inherit `EditCommandPrefixParser` by `EditReservationCommand`. Similarly, the `EditCommandParser` also need to be abstracted, and inherit it with `EditReservationCommandParser`.","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `delete` `Member` by `Member ID` [\\#77](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/77)","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the manager to `delete` `Member` by `Member ID`.","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: This feature is essential, since the `Transaction` and `Reservation` is based on each member, it is necessary to use `Member ID` to identify the `Member` so that his/her `Transaction` and `Reservation` can be identified properly as well (Currently the application is using `Member ID` + `Transaction ID` to retrieve the `Transaction`, so is `Reservation`).","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `delete` `Transaction` by `Transaction ID` [\\#101](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/101)","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the manager to `delete` `Transaction` by `Transaction ID`","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: This feature is essential, since each `Transaction` has its own `ID`, and the application is not able to list all the `Transactions`, it is impossible to `delete` `Transaction` by `Index`. Therefore, the `Transaction ID` is the only attribute to identify the `Transaction`.","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"  * **Highlights**: This enhancement requires understanding on how polymorphism works and implement it so that the application will use Object-oriented programming (OOP) sufficiently. The implementation was challenging as the `DeleteCommand` need to be abstracted, and inherit `DeleteCommand` by `DeleteCommandPrefixParser`, and further inherit `DeleteCommandPrefixParser` by `DeleteTransactionCommand`. Similarly, the `DeleteCommandParser` also need to be abstracted, and inherit it with `DeleteTransactionCommandParser`.","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `sort` `Member` by `Credit` [\\#79](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/79)","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the manager to `sort` `Member` by `Credit`.","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: This feature improves the product significantly because the manager can formulate promotional strategies by analyzing the member data like how many credit the member has earned.","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"  * **Highlights**: This enhancement requires understanding on how `javafx.collections` package works. The implementation was challenging as it requires combining and synchronizing the object of the `FilteredList` and the `SortedList` so that data will not be messed up when the `find` or `sort` feature is called.","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"* **New Feature**: Added the ability to `retrieve` history commands [\\#113](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/113)","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"  * **What it does**: allows the staff and manager to `retrieve` previous commands using up/down keys.","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"  * **Justification**: This feature improves the product significantly because the staff and manager can execute the similar commands much faster without retyping.","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"* **Enhancements to existing models**:","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"  * Updated the `AddressBook` to the `ezFoodie` [\\#45](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/45)","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"  * Updated the `Person` model to the `Member` model [\\#48](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/48)","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"  * Added the `ID` for the `Member` model so that the staff and manager can do operations based on the `Member ID` [\\#51](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/51)","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"  * Added the `ID` for the `Transaction` model so that the staff and manager can do operations based on the `Transaction ID` [\\#100](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/100)","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"  * Added the `Timestamp` for the `Member` model and `Transaction` model so that the application can record down the registration `Timestamp` of the `Member` and the payment `Timestamp` of the `Transaction` [\\#59](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/59)","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"  * Added the `Credit` for the `Member` model so that the application can record down the `Credit` that the `Member` has earned. [\\#79](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/79)","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"  * Added the `Tier` for the `Member` model so that the application can show the `Tier` of the `Member` based on his/her `Credit`. [\\#81](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/81)","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"  * Updated the `add` feature so that it can supoort `add` member ID [\\#55](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/55)","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"  * Updated the `list` feature so that it can supoort `list -mem` instead of `list` [\\#78](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/78)","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"  * Updated the `find` feature so that it can supoort `find` `Member` by `Member ID`, `Name`, `Phone`, `Email` and `Registration Date` [\\#64](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/64)","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"* **Project management**:","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"  * Maintained the [issues](https://github.com/AY2122S1-CS2103T-F12-4/tp/issues), [milestones](https://github.com/AY2122S1-CS2103T-F12-4/tp/milestones) and [projects](https://github.com/AY2122S1-CS2103T-F12-4/tp/projects)","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"  * Managed releases `v1.2.1`, `v1.3`, `v1.4` (3 [releases](https://github.com/AY2122S1-CS2103T-F12-4/tp/releases)) on GitHub","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"  * index:","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    * Fixed hyperlink bugs [\\#89](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/89)","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"  * README:","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    * Updated formats [\\#42](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/42)","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"  * User Guide:","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    * Added documentation for the features `find` and `sort`","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    [\\#89](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/89)","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"    * Updated formats and fixed bugs","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    [\\#40](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/40),","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    [\\#41](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/41)","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    * Updated formats for all commands [\\#116](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/116)","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    * Updated `Product scope`, `User stories`, `Use cases`, `Non-Functional Requirements`, `Glossary`","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    [\\#24](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/24)","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    * Added documentation for the features `find` and `sort`","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    [\\#89](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/89)","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"  * About Us:","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    * Updated formats [\\#43](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/43)","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"* **Community**:","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"  [\\#46](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/46),","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"  [\\#52](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/52),","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"  [\\#56](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/56),","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"  [\\#69](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/69),","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"  [\\#71](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/71),","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"  [\\#102](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/102),","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"  [\\#103](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/103)","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"  * Contributed to forum discussions: ","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"  [\\#12](https://github.com/nus-cs2103-AY2122S1/forum/issues/12),","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"  [\\#13](https://github.com/nus-cs2103-AY2122S1/forum/issues/13#issuecomment-899985208),","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"  [\\#24](https://github.com/nus-cs2103-AY2122S1/forum/issues/24#issuecomment-899953855),","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"  [\\#45](https://github.com/nus-cs2103-AY2122S1/forum/issues/45),","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"  [\\#50](https://github.com/nus-cs2103-AY2122S1/forum/issues/50),","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"  [\\#65](https://github.com/nus-cs2103-AY2122S1/forum/issues/65),","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"  [\\#109](https://github.com/nus-cs2103-AY2122S1/forum/issues/109#issuecomment-907304027),","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"  [\\#141](https://github.com/nus-cs2103-AY2122S1/forum/issues/141#issuecomment-910317016),","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"  [\\#160](https://github.com/nus-cs2103-AY2122S1/forum/issues/160#issuecomment-909923810),","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"  [\\#200](https://github.com/nus-cs2103-AY2122S1/forum/issues/200#issuecomment-914391124),","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"  [\\#203](https://github.com/nus-cs2103-AY2122S1/forum/issues/203#issuecomment-914375528),","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"  [\\#209](https://github.com/nus-cs2103-AY2122S1/forum/issues/209)","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"  * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"  [\\#1](https://github.com/holmesjj/ped/issues/1),","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"  [\\#2](https://github.com/holmesjj/ped/issues/2),","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"  [\\#3](https://github.com/holmesjj/ped/issues/3),","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"  [\\#4](https://github.com/holmesjj/ped/issues/4),","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"  [\\#5](https://github.com/holmesjj/ped/issues/5),","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"  [\\#6](https://github.com/holmesjj/ped/issues/6),","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"  [\\#7](https://github.com/holmesjj/ped/issues/7),","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"  [\\#8](https://github.com/holmesjj/ped/issues/8),","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"  [\\#9](https://github.com/holmesjj/ped/issues/9),","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"  [\\#10](https://github.com/holmesjj/ped/issues/10),","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"  [\\#11](https://github.com/holmesjj/ped/issues/11),","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"  [\\#12](https://github.com/holmesjj/ped/issues/12),","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"  [\\#13](https://github.com/holmesjj/ped/issues/13),","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"  [\\#14](https://github.com/holmesjj/ped/issues/14),","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"  [\\#15](https://github.com/holmesjj/ped/issues/15),","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"  [\\#16](https://github.com/holmesjj/ped/issues/16),","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"  [\\#17](https://github.com/holmesjj/ped/issues/17),","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"  [\\#18](https://github.com/holmesjj/ped/issues/18),","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"  [\\#19](https://github.com/holmesjj/ped/issues/19),","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"  [\\#20](https://github.com/holmesjj/ped/issues/20),","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"  [\\#21](https://github.com/holmesjj/ped/issues/21)","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"HolmesJJ":144}},{"path":"docs/team/mukundrs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"layout: page","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"title: Raja Sudalaimuthu Mukund\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"### Introduction","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"This page serves to document my contributions to the project ezFoodie under NUS module CS2103T in AY21/22 semester 1.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"### Project: ezFoodie","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"ezFoodie is a desktop application that helps restaurants **keep track of their ever-growing list of members**.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"Restaurant managers and staffs interact with ezFoodie using a Command Line Interface (CLI), and has a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"It is written in Java, and has about 35 kLoC, of which I contributed about 1 kLoC.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dmukundrs)","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"* **New Model**: Created the `Reservation` model to support adding reservation details for each member. [\\#94](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/94)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    * **What it does**: stores the details of each reservation under each `member`.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    * **Justification**: This model is essential as it is one of the core features of ezFoodie.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"    * **Highlights**: This enhancement requires understanding on how `hash` works. The implementation was challenging as the `Account` information need to be hashed when it is storing in the file for the purpose of high security.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"* **New Feature**: Added the ability to `add``Reservation` to a member. [\\#94](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/94)","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"    * **What it does**: adds a new reservation to the reservation list of a `member`.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    * **Justification**: This feature is essential as it is one of the core features of ezFoodie.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"    * **Highlights**: This enhancement requires understanding on how polymorphism works and implement it so that the application will use Object-oriented programming (OOP) sufficiently. The implementation was challenging as the `AddCommand` need to be abstracted, and inherit `AddCommand` by `AddCommandPrefixParser`, and further inherit `AddCommandPrefixParser` by `AddReservationCommand`. Similarly, the `AddCommandParser` also need to be abstracted, and inherit it with `AddReservationCommandParser`.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"    * Updated the help window UI to suit the needs of ezFoodie [\\#56](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/56)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"* **Project management**:","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    * Maintained the [milestones](https://github.com/AY2122S1-CS2103T-F12-4/tp/milestones)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    * User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"mukundrs"},"content":"        * Updated according to changes to code, fixed mistakes","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"          [\\#185](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/185)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"* **Community**:","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"      [\\197](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/197),","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"      [\\55](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/55),","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"mukundrs"},"content":"      [\\51](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/51),","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"mukundrs"},"content":"      [\\48](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/48),","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"mukundrs"},"content":"      [\\45](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/45),","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"mukundrs"},"content":"      [\\37](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/37)","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"    * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"      [\\#1](https://github.com/mukundrs/ped/issues/1),","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"      [\\#2](https://github.com/mukundrs/ped/issues/2),","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"      [\\#3](https://github.com/mukundrs/ped/issues/3),","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"      [\\#4](https://github.com/mukundrs/ped/issues/4),","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"mukundrs"},"content":"      [\\#5](https://github.com/mukundrs/ped/issues/5),","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"      [\\#6](https://github.com/mukundrs/ped/issues/6)","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"mukundrs":59}},{"path":"docs/team/stephanie-csy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"layout: page","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"title: Stephanie Chen\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"### Introduction","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"stephanie-csy"},"content":"This page serves to document my contributions to the project ezFoodie under NUS module CS2103T in AY21/22 semester 1.","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"### Project: ezFoodie","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"ezFoodie is a desktop application that helps restaurants **keep track of their ever-growing list of members**.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members.","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"Restaurant managers and staffs interact with ezFoodie using a Command Line Interface (CLI), and has a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":"It is written in Java, and has about 35 kLoC, of which I contributed about 1 kLoC.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?breakdown\u003dtrue\u0026search\u003dstephanie-csy)","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"* **New Model**: Created the `Transaction` model to support adding transaction details for each member. [\\#69](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/69)","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":"    * **What it does**: stores the details of each transaction under each `member`.","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"stephanie-csy"},"content":"    * **Justification**: This model is essential as it is one of the core features of ezFoodie.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"    * **Highlights**: This enhancement requires understanding on how `hash` works. The implementation was challenging as the `Account` information need to be hashed when it is storing in the file for the purpose of high security.","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"* **New Feature**: Added the ability to `delete` `Reservation` by `Reservation ID` [\\#106](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/106)","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"    * **What it does**: allows the manager to `delete` `Reservation` by `Reservation ID`","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"    * **Justification**: This feature is essential, since each `Reservation` has its own `ID`, and the application is not able to list all the `Reservations`, it is impossible to `delete` `Reservation` by `Index`. Therefore, the `Reservation ID` is the only attribute to identify the `Reservation`.","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":"    * **Highlights**: This enhancement requires understanding on how polymorphism works and implement it so that the application will use Object-oriented programming (OOP) sufficiently. The implementation was challenging as the `DeleteCommand` need to be abstracted, and inherit `DeleteCommand` by `DeleteCommandPrefixParser`, and further inherit `DeleteCommandPrefixParser` by `DeleteReservationCommand`. Similarly, the `DeleteCommandParser` also need to be abstracted, and inherit it with `DeleteReservationCommandParser`.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"* **Enhancements to existing models**:","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"    * Added the `ID` for the `Reservation` model so that the staff and manager can do operations based on the `Reservation ID` [\\#106](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/106)","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"stephanie-csy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"    * Updated the regex of `Phone` such that it will only accept numbers that are strictly 8 digits long, compared to the original which allowed any number at least 3 digits long. [\\#184](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/184)","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"* **Project management**:","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"    * Maintained the [milestones](https://github.com/AY2122S1-CS2103T-F12-4/tp/milestones)","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"    * User Guide:","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"        * Updated according to changes to code, fixed mistakes","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"          [\\#194](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/194)","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"* **Community**:","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"      [\\#73](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/73),","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"stephanie-csy"},"content":"      [\\#94](https://github.com/AY2122S1-CS2103T-F12-4/tp/pull/94),","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"    * Reported bugs and suggestions for other teams in the class:","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"      [\\#1](https://github.com/stephanie-csy/ped/issues/1),","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"      [\\#2](https://github.com/stephanie-csy/ped/issues/2),","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"      [\\#3](https://github.com/stephanie-csy/ped/issues/3),","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"stephanie-csy"},"content":"      [\\#4](https://github.com/stephanie-csy/ped/issues/4),","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"      [\\#5](https://github.com/stephanie-csy/ped/issues/5),","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"      [\\#6](https://github.com/stephanie-csy/ped/issues/6)","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"stephanie-csy":58}},{"path":"docs/team/zzybluebell.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"zzybluebell"},"content":"layout: page","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"title: Zhang Zhiyao\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"### Introduction","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"This page serves to document my contributions to the project ezFoodie under NUS module CS2103T in AY21/22 semester 1.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"### Project: ezFoodie","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"ezFoodie is a desktop application that helps restaurants **keep track of their ever-growing list of members**.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"Restaurant managers and staffs can easily view and update member status (e.g. personal information, tier, reservation, transaction, etc.) to manage and analyze members.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"Restaurant managers and staffs interact with ezFoodie using a Command Line Interface (CLI), and has a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"It is written in Java, and has about 35 kLoC, of which I contributed about 10 kLoC.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?breakdown\u003dtrue\u0026search\u003dzzybluebell)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"* **Enhancements to existing models**:","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"* **Project management**:","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"    * README:","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"    * Index:","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    * User Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"        *Updated `add member`, `redeem`","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    * About Us:","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"* **Community**:","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"  * Contributed to forum discussions:","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"zzybluebell":39}},{"path":"src/main/java/seedu/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private Path accountPath;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public Path getAccountPath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        return accountPath;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public void setAccountPath(Path accountPath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        this.accountPath \u003d accountPath;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        String accountPathParameter \u003d namedParameters.get(\"account\");","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        if (accountPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(accountPathParameter)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Invalid account path \" + accountPathParameter + \". Using default account path.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            accountPathParameter \u003d null;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        appParameters.setAccountPath(accountPathParameter !\u003d null ? Paths.get(accountPathParameter) : null);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath())","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 Objects.equals(getAccountPath(), otherAppParameters.getAccountPath());","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.hash(configPath, accountPath);","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"zzybluebell":6,"-":62,"HolmesJJ":19}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Starts main application.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"zzybluebell":3,"-":25}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.AccountStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.EzFoodieStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.JsonAccountStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.JsonEzFoodieStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Creates a version.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and initializes rhe ezFoodie application.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * @throws Exception if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ezFoodie ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        AccountStorage accountStorage \u003d new JsonAccountStorage(userPrefs.getAccountFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodieStorage ezFoodieStorage \u003d new JsonEzFoodieStorage(userPrefs.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        storage \u003d new StorageManager(accountStorage, ezFoodieStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"     * The data from the sample ezFoodie will be used instead if {@code storage}\u0027s account is not found,","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"     * or an empty account will be used instead if errors occur when reading {@code storage}\u0027s account.","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    private ReadOnlyAccount initAccount(Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        Optional\u003cReadOnlyAccount\u003e accountOptional;","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyAccount initialData;","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"            accountOptional \u003d storage.readAccount();","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"            if (!accountOptional.isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                logger.info(\"Account file not found. Will be starting with a sample account\");","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d accountOptional.orElseGet(SampleDataUtil::getDefaultPassword);","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ezFoodie\");","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d new Account();","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ezFoodie\");","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d new Account();","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        //Update account file in case it was missing to begin with or there are any new updates.","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"            storage.saveAccount(initialData);","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Failed to save account file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        return initialData;","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"     * The data from the sample ezFoodie will be used instead if {@code storage}\u0027s ezFoodie is not found,","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"     * or an empty ezFoodie will be used instead if errors occur when reading {@code storage}\u0027s ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"    private ReadOnlyEzFoodie initEzFoodie(Storage storage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        Optional\u003cReadOnlyEzFoodie\u003e ezFoodieOptional;","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyEzFoodie initialData;","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"            ezFoodieOptional \u003d storage.readEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"            if (!ezFoodieOptional.isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ezFoodie\");","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d ezFoodieOptional.orElseGet(SampleDataUtil::getSampleEzFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ezFoodie\");","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ezFoodie\");","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"            initialData \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        return initialData;","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s account and ezFoodie","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"     * and {@code userPrefs}.","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyAccount initAccount \u003d initAccount(storage);","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyEzFoodie initEzFoodie \u003d initEzFoodie(storage);","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        return new ModelManager(initAccount, initEzFoodie, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ezFoodie\");","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"zzybluebell"},"content":"     * Starts main application with input {@code primaryStage}.","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"        logger.info(\"Starting ezFoodie \" + MainApp.VERSION);","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"zzybluebell"},"content":"     * Stops main application.","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"HolmesJJ"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ezFoodie ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":14,"-":165,"HolmesJJ":64}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":" * Config values used by the application","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Gets the default config json file.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Gets log Level from {@code logLevel}.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Sets log Level from {@code logLevel}.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Gets User Prefs File Path from {@code userPrefsFilePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @return Path of the user prefs file.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Sets User Prefs File Path from {@code userPrefsFilePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method for Config class.","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * Overrides hashcode method for Config class.","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     * @return int objects after hashed with logLevel and userPrefsFilePath.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method for Config class.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * @return String the log level and Config file location.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":31,"-":61}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Gets GUI window width.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * @return double the width of window.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * Gets GUI window height.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @return double the height of window.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Gets GUI window coordinates.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * @return Point object of window coordinate.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method for GuiSettings.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     * @return int objects after hashed with windowWidth, windowHeight and windowCoordinates.","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString Method for GuiSettings.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     * @return String including all width, height and Position.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":28,"-":79}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private static final String LOG_FILE \u003d \"ezfoodie.log\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * Creates a logger for the given class name.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * Removes all the handlers from {@code logger}.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":3,"-":109,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_UNKNOWN_COMMAND.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_INVALID_COMMAND_FORMAT.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX \u003d \"The member index provided is invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_INVALID_MEMBER_DISPLAYED_ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_ID \u003d \"The member ID provided is invalid\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_INVALID_TRANSACTION_DISPLAYED_ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_INVALID_TRANSACTION_DISPLAYED_ID \u003d \"The transaction ID provided is invalid\";","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_INVALID_RESERVATION_DISPLAYED_ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_INVALID_RESERVATION_DISPLAYED_ID \u003d \"The reservation ID provided is invalid\";","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_MEMBERS_LISTED_OVERVIEW.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_MEMBERS_LISTED_OVERVIEW \u003d \"%1$d members listed!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Represents the MESSAGE_PERMISSION_DENIED.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_PERMISSION_DENIED \u003d \"Permission denied! Please login as \" + LoginStatus.MANAGER;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":31,"-":10,"HolmesJJ":8}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":" * Represents a version with major, minor and patch number.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Sets the version regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Gets the major from {@code major}.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * @return int of the major.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * Gets the minor from {@code minor}.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @return int of the minor.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Gets the patch from {@code patch}.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * @return int of the patch.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is early access.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean ture is early access.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @param versionString version number string.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     * @return a version object.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString for Version class.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     * @return String for version.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the compareTo method for Version class.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method for version class.","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode for version class.","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":41,"-":113}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":" * convert it back to an integer if the index will not be passed to a different component again.","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Gets zero based int.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * @return int of zero based index.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Gets one based int.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @return int of one based index.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Creates a new {@code Index} using a {@code zeroBasedIndex}.","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * @return Index of zero based index.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * Creates a new {@code Index} using an {@code oneBasedIndex}.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * @return Index of one based index.","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zzybluebell":20,"-":51}},{"path":"src/main/java/seedu/address/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * Represents an error during conversion of data from one format to another.","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * @param cause of the main exception.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":3,"-":18}},{"path":"src/main/java/seedu/address/commons/exceptions/PermissionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * Represents an error during insufficient permission.","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public class PermissionException extends Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    public PermissionException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"zzybluebell":4,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/commons/status/ExecutionStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.status;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":" * Represents the execution status.","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public enum ExecutionStatus {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"    NORMAL, TEST","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zzybluebell":3,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/commons/status/LoginStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.status;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":" * Represents the login status.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"public enum LoginStatus {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    STAFF(\"STAFF\"),","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    MANAGER(\"MANAGER\");","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     * Represents the static the simple string property.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public static final SimpleStringProperty CURRENT_STATUS \u003d new SimpleStringProperty(STAFF.value);","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final String value;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code LoginStatus} with the given value.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    LoginStatus(String value) {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * Gets login status.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code LoginStatus} the status of login.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static LoginStatus getLoginStatus() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        if (CURRENT_STATUS.getValue().equals(STAFF.value)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            return STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            return MANAGER;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * Resets {@code CURRENT_STATUS} by {@code LoginStatus}.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public static void setLoginStatus(LoginStatus loginStatus) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        CURRENT_STATUS.setValue(loginStatus.value);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":12,"HolmesJJ":34}},{"path":"src/main/java/seedu/address/commons/status/SortStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.status;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":" * Represents the sort status.","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public enum SortStatus {","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"    ASC, DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zzybluebell":3,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/commons/util/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public class CommandUtil {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    private static final int MAX_LENGTH \u003d 30;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    private static final List\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    private static int pointer \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     * Adds command to storage so that it can be retrieved.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * @param command to be added.","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static void addCommand(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        if (!commands.isEmpty() \u0026\u0026 commands.size() \u003e\u003d MAX_LENGTH) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"            commands.remove(0);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        commands.add(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        pointer \u003d commands.size();","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Gets previous command from storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public static String getPreCommand() {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        if (pointer \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"            pointer--;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            return commands.get(pointer);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            pointer \u003d -1;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            return \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * Gets next command from storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static String getNextCommand() {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        if (pointer \u003c commands.size() - 1) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            pointer++;","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            return commands.get(pointer);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            pointer \u003d commands.size();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            return \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"HolmesJJ":51}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.sql.Timestamp;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * Helper functions for handling dates and times.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class DateTimeUtil {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DATE_TIME_PATTERN \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private static final long ONE_DAY_MILLISECONDS \u003d 24 * 60 * 60 * 1000;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TIMESTAMP_STUB \u003d \"1609459200000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * Returns current timestamp in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public static String generateTimestamp() {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        return String.valueOf(System.currentTimeMillis());","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Returns timestamp stub in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public static String generateTimestampStub() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        return TIMESTAMP_STUB;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if the {@code date} contains the {@code timestamp}.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isDateContainsTimestamp(Date date, long timestamp) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp dateToTimestamp \u003d new Timestamp(date.getTime());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        long start \u003d dateToTimestamp.getTime();","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        long end \u003d dateToTimestamp.getTime() + ONE_DAY_MILLISECONDS;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        return timestamp \u003e\u003d start \u0026\u0026 timestamp \u003c end;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Returns date converted by {@code timestamp}.","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public static Date timestampToDate(long timestamp) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp stamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        return new Date(stamp.getTime());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     * Returns String of dateTime to dateTime format.","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * @param dateTime DateTime in String format.","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * @return DateTime format.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DateTimeParseException If the dateTime cannot be parsed.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"HolmesJJ":62}},{"path":"src/main/java/seedu/address/commons/util/EncryptUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.security.MessageDigest;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * A class for accessing the Account File.","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class EncryptUtil {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final String HASH_ALGORITHM \u003d \"MD5\";","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final String HASH_FORMAT \u003d \"%032x\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final int SIGNUM \u003d 1;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Returns hashed text from plaintext.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @throws NoSuchAlgorithmException if the algorithm does not exist.","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public static String hash(String plaintext) throws NoSuchAlgorithmException {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        byte[] bytesOfPassword \u003d plaintext.getBytes(StandardCharsets.UTF_8);","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        MessageDigest messageDigest \u003d MessageDigest.getInstance(HASH_ALGORITHM);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        messageDigest.reset();","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        messageDigest.update(bytesOfPassword);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        byte[] digest \u003d messageDigest.digest();","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        return String.format(HASH_FORMAT, new BigInteger(SIGNUM, digest));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"HolmesJJ":30}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException    If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException      If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @throws PermissionException If an error occurs during insufficient permission.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the EzFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @see seedu.address.model.Model#getEzFoodie()","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    ReadOnlyEzFoodie getEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns an unmodifiable view of the sorted or filtered list of members","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    ObservableList\u003cMember\u003e getUpdatedMemberList();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns an unmodifiable view of the sorted or filtered list of members","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"     * for viewCommand to use only","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"    ObservableList\u003cMember\u003e getUpdatedMemberListForView();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the user prefs\u0027 ezFoodie file path.","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    Path getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Morrow1ndy":8,"-":42,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.EzFoodieParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":" * The main LogicManager of the application.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private final EzFoodieParser ezFoodieParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodieParser \u003d new EzFoodieParser(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model}, {@code Storage} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    public LogicManager(Model model, Storage storage, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodieParser \u003d new EzFoodieParser(model, executionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * Executes with given string of command text.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * @return {@code CommandResult} related to logic Manager.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * @throws PermissionException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException, PermissionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        Command command \u003d ezFoodieParser.parseCommand(commandText);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            storage.saveEzFoodie(model.getEzFoodie());","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            storage.saveAccount(model.getAccount());","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * Gets EzFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        return model.getEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     * Gets updated member list.","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        return model.getUpdatedMemberList();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * Gets updated member list for view.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"    public ObservableList\u003cMember\u003e getUpdatedMemberListForView () {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"        return model.getUpdatedMemberListForView();","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     * Gets EzFoodie Path.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        return model.getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * Gets Gui Settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"     * Sets Gui settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Morrow1ndy":2,"zzybluebell":28,"-":69,"HolmesJJ":26}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":" * Represents a add command to add member or transaction to ezFoodie.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for COMMAND WORD for add command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for output message.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + \": Adds a member or a transaction or a reservation to the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"            + \"With \"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_MEMBER + \" (member details) or \"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" (transaction details) or \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" (reservation details)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Executes method for addCommand class to execute model.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult for execute addCommand.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Morrow1ndy":3,"zzybluebell":14,"-":17,"HolmesJJ":6}},{"path":"src/main/java/seedu/address/logic/commands/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * Adds a member to the ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"public class AddMemberCommand extends AddCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for command word for add member.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a member to the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"            + PREFIX_MEMBER + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ADDRESS + \"ADDRESS\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_MEMBER + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25\";","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New member added: %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_FULL \u003d \"Member ID has reached \" + Id.MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            \"This member (phone or email) already exists in the ezFoodie.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    private final Member toAdd;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an {@codeAddMemberCommand} to add the specified {@code Member}.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"    public AddMemberCommand(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"        toAdd \u003d member;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * Executes model.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult with toAdd member.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"        if (model.hasMember(toAdd)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"        model.addMember(toAdd);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"                || (other instanceof AddMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"                \u0026\u0026 toAdd.equals(((AddMemberCommand) other).toAdd));","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":61,"HolmesJJ":21}},{"path":"src/main/java/seedu/address/logic/commands/AddReservationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_TIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":" * Adds a reservation to the ezFoodie.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"public class AddReservationCommand extends AddCommand {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message add reservation command.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds reservation to member \"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            + \"by member ID in the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_DATE_TIME + \"DATE_TIME (\" + DateTimeUtil.DATE_TIME_PATTERN + \") \"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ID + \"ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_DATE_TIME + \"2021-12-01 13:00 \"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_REMARK + \"2 people \"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ID + \"10001\";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message success for new reservation added.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New reservation added: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_FULL \u003d \"Reservation ID has reached \" + seedu.address.model.reservation.Id.MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SAME_DATE \u003d \"Only one reservation can be added within the same day. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            + \"Previous reservation: %1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    private final Reservation reservationToAdd;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id idToAdd;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an {@code AddReservationCommand} to add the specified {@code Member}.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"    public AddReservationCommand(Reservation reservation, Id id) {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(reservation, id);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"        reservationToAdd \u003d reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"        idToAdd \u003d id;","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model in AddReservationCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult with edited member.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"mukundrs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"                .filter(member -\u003e idToAdd.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        if (!Reservation.isValidDateTime(reservationToAdd.getDateTime())) {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Reservation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        Reservation reservationSameDate \u003d memberToEdit.getReservations().stream()","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                .filter(reservation -\u003e reservation.isSameDate(reservationToAdd)).findAny().orElse(null);","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        if (reservationSameDate \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"            Member editedMember \u003d createEditedMember(memberToEdit, reservationToAdd);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"            model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"                    + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"                    + \"; Reservation: \" + \"[\" + reservationToAdd + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        throw new CommandException(String.format(MESSAGE_SAME_DATE, reservationSameDate));","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit} and {@code reservationToAdd}.","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"     * @param memberToEdit {@code memberToEdit} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"mukundrs"},"content":"     * @param reservationToAdd {@code reservation} which the command should operate on.","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with updated reservations.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(Member memberToEdit, Reservation reservationToAdd) {","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        assert reservationToAdd !\u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        Name name \u003d memberToEdit.getName();","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        Phone phone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        Email email \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        Address address \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        Credit credit \u003d memberToEdit.getCredit();","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"        Point point \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e tags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e updatedReservations \u003d new ArrayList\u003c\u003e(reservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"        updatedReservations.add(reservationToAdd);","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, credit, point,","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"                transactions, updatedReservations, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"mukundrs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"mukundrs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"mukundrs"},"content":"                || (other instanceof AddReservationCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"mukundrs"},"content":"                \u0026\u0026 reservationToAdd.equals(((AddReservationCommand) other).reservationToAdd))","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"mukundrs"},"content":"                \u0026\u0026 idToAdd.equals(((AddReservationCommand) other).idToAdd);","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"stephanie-csy":3,"zzybluebell":25,"mukundrs":40,"HolmesJJ":78}},{"path":"src/main/java/seedu/address/logic/commands/AddTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BILLING;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":" * Adds a transaction to the ezFoodie.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"public class AddTransactionCommand extends AddCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message add transaction command.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a transaction to each member in the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_BILLING + \"BILLING (STRICTLY 2 DECIMAL PLACES) \"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ID + \"ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_BILLING + \"23.00 \"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_ID + \"10001\";","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the success message of new transaction added.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New transaction added: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_FULL \u003d \"Transaction ID has reached \" + seedu.address.model.transaction.Id.MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    private final Transaction transactionToAdd;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id idToAdd;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an AddTransactionCommand to add the specified {@code Member}.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public AddTransactionCommand(Transaction transaction, seedu.address.model.member.Id id) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(transaction, id);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"        transactionToAdd \u003d transaction;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"        idToAdd \u003d id;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model in add transaction command.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult with edited member.","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"                .filter(member -\u003e idToAdd.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, transactionToAdd);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + transactionToAdd + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit} and {@code transactionToAdd}.","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * @param memberToEdit {@code memberToEdit} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     * @param transactionToAdd {@code transaction} which the command should operate on.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * @return member with updated transactions and points.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(Member memberToEdit, Transaction transactionToAdd) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        assert transactionToAdd !\u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"        Name name \u003d memberToEdit.getName();","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"        Phone phone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"        Email email \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"        Address address \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"        Set\u003cTag\u003e tags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e updatedTransactions \u003d new ArrayList\u003c\u003e(transactions);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        updatedTransactions.add(transactionToAdd);","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        Credit updatedCredit \u003d new Credit(\"\" + Math.min(updatedTransactions.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                .mapToInt(t -\u003e (int) t.getBilling().getDoubleValue()).sum(), Credit.MAX));","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"        Point updatePoint \u003d new Point(\"\" + Math.min(Integer.parseInt(String.valueOf(updatedCredit.getIntValue()","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"zzybluebell"},"content":"                - memberToEdit.getCredit().getIntValue()","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"zzybluebell"},"content":"                + memberToEdit.getPoint().getIntValue())), Point.MAX));","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, updatedCredit,","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"                updatePoint, updatedTransactions, reservations, tags);","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"Morrow1ndy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"Morrow1ndy"},"content":"                || (other instanceof AddTransactionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 transactionToAdd.equals(((AddTransactionCommand) other).transactionToAdd))","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 idToAdd.equals(((AddTransactionCommand) other).idToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Morrow1ndy":35,"stephanie-csy":1,"zzybluebell":60,"mukundrs":1,"HolmesJJ":34}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Clears the ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     * Stands for clean command word.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Stands for success message for clear command.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"ezFoodie has been cleared!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model in the clear command.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        model.setEzFoodie(new EzFoodie());","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":11,"-":20,"HolmesJJ":4}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     * Member view information should be shown to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"    private final boolean showMemberView;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     * Summary information should be shown to the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"    private final boolean showSummary;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"     * The application should exit.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code CommandResult} with the specified fields from {@code feedbackToUser},","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * {@code showHelp}, {@code exit}, {@code showMemberView} and","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * {@codeshowSummary}.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showMemberView,","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"                         boolean showSummary) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"        this.showMemberView \u003d showMemberView;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"        this.showSummary \u003d showSummary;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Gets feedback to user.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * @return string for feedback to user.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"     * Determines whether the app should show help window.","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean if true is showHelp command.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"     * Determines whether the app should show member window.","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean if true is shown member view command.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean isShowMemberView() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"        return showMemberView;","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"     * Determines whether the app should show summary window.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean if true is shown summary command.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean isShowSummary() {","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"        return showSummary;","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"     * Determines whether the app should exit.","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean if ture is exit command.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 showMemberView \u003d\u003d otherCommandResult.showMemberView","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 showSummary \u003d\u003d otherCommandResult.showSummary;","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"Morrow1ndy"},"content":"        return Objects.hash(feedbackToUser, showHelp, showMemberView, exit, showSummary);","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Morrow1ndy":45,"zzybluebell":22,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Deletes a member identified using it\u0027s displayed index from the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for delete command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of delete command from the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + \": Deletes a member or a transaction or a reservation from the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            + \"With \"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_MEMBER + \" (member details) or \"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" (transaction details) or \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" (reservation details)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes model.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult of related commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":13,"-":15,"HolmesJJ":12}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"stephanie-csy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":" * Deletes a member identified using it\u0027s displayed index or member ID from the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"public class DeleteMemberCommand extends DeleteCommand {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Stands for delete command.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of delete command related to a member from the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"            + \": Deletes the member identified by the index number used in the displayed member list or member ID.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"            + \"Delete by index number: \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \"INDEX\"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"            + \" (INDEX must be a positive integer)\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            + \"Delete by member ID: \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"            + \"Delete by index number: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \"1\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"            + \"Delete by member ID: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"10001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of delete member.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Member: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"    private final Index index;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"    private final Id id;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * Creates an DeleteCommand to delete the specified {@code Member} by {@code index} number.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @param index the index shown in the page.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"    public DeleteMemberCommand(Index index) {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Creates an DeleteCommand to delete the specified {@code Member} by member ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @param id the member ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"stephanie-csy"},"content":"    public DeleteMemberCommand(Id id) {","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"stephanie-csy"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"stephanie-csy"},"content":"        index \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related delete member command.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"stephanie-csy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"stephanie-csy"},"content":"        Member memberToDelete \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"stephanie-csy"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"stephanie-csy"},"content":"            if (index.getZeroBased() \u003c lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"stephanie-csy"},"content":"                memberToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"stephanie-csy"},"content":"            } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"stephanie-csy"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"stephanie-csy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"stephanie-csy"},"content":"        if (id !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"stephanie-csy"},"content":"            memberToDelete \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"stephanie-csy"},"content":"                    .filter(member -\u003e id.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"        if (memberToDelete !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"            model.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"stephanie-csy"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, memberToDelete));","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"stephanie-csy"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"stephanie-csy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"stephanie-csy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"stephanie-csy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"stephanie-csy"},"content":"                || (other instanceof DeleteMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"stephanie-csy"},"content":"                \u0026\u0026 (index \u003d\u003d null || index.equals(((DeleteMemberCommand) other).index))","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"stephanie-csy"},"content":"                \u0026\u0026 (id \u003d\u003d null || id.equals(((DeleteMemberCommand) other).id))); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"stephanie-csy":86,"zzybluebell":25,"HolmesJJ":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteReservationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":" * Deletes a reservation identified by it\u0027s member ID and reservation ID from the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"public class DeleteReservationCommand extends DeleteCommand {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for delete command.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of delete command related to reservations.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"            + \": Deletes the reservation identified by the member ID and reservation ID.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"            + \"Delete by member ID and reservation ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" \" + PREFIX_ID + \"member ID + reservation ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"            + \"Delete by member ID and reservation ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"            + COMMAND_WORD + \" \" + PREFIX_RESERVATION + \" \" + PREFIX_ID + \"10001100001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of delete reservation.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted reservation: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.reservation.Id reservationId;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * Constructs DeleteReservationCommand to delete the specified {@code Member}","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * by {@code memberID} and {@code reservationId}.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @param memberId the member Id","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * @param reservationId the reservation id","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    public DeleteReservationCommand(","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            seedu.address.model.member.Id memberId, seedu.address.model.reservation.Id reservationId) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"stephanie-csy"},"content":"        requireAllNonNull(memberId, reservationId);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"stephanie-csy"},"content":"        this.memberId \u003d memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"stephanie-csy"},"content":"        this.reservationId \u003d reservationId;","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit} and {@code reservationToDelete}","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * @param memberToEdit the member to edit.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * @param reservationToDelete the reservation will to remove.","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with updated reservation.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(Member memberToEdit, Reservation reservationToDelete) {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        assert reservationToDelete !\u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"stephanie-csy"},"content":"        Name updatedName \u003d memberToEdit.getName();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"stephanie-csy"},"content":"        Phone updatedPhone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"stephanie-csy"},"content":"        Email updatedEmail \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"stephanie-csy"},"content":"        Address updatedAddress \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"stephanie-csy"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"        Point point \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"stephanie-csy"},"content":"        Credit credit \u003d memberToEdit.getCredit();","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"stephanie-csy"},"content":"        Set\u003cTag\u003e updatedTags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e updatedReservations \u003d new ArrayList\u003c\u003e(reservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        updatedReservations.remove(reservationToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"stephanie-csy"},"content":"        return new Member(id, updatedName, updatedPhone, updatedEmail, updatedAddress, timestamp, credit, point,","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"                transactions, updatedReservations, updatedTags);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related delete reservation command.","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"stephanie-csy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"stephanie-csy"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"                .filter(member -\u003e memberId.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"stephanie-csy"},"content":"        Reservation reservationToDelete \u003d memberToEdit.getReservations().stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"stephanie-csy"},"content":"                .filter(reservation -\u003e reservationId.equals(reservation.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        if (reservationToDelete \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"stephanie-csy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESERVATION_DISPLAYED_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, reservationToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"stephanie-csy"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"stephanie-csy"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Reservation: \" + \"[\" + reservationToDelete + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"stephanie-csy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"stephanie-csy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"stephanie-csy"},"content":"                || (other instanceof DeleteReservationCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"stephanie-csy"},"content":"                \u0026\u0026 memberId.equals(((DeleteReservationCommand) other).memberId)","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"stephanie-csy"},"content":"                \u0026\u0026 reservationId.equals(((DeleteReservationCommand) other).reservationId)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"stephanie-csy":93,"zzybluebell":28,"HolmesJJ":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":" * Deletes a transaction identified by it\u0027s member ID and transaction ID from the ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteTransactionCommand extends DeleteCommand {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Stands for delete command.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of delete command related to transaction.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            + \": Deletes the transaction identified by the member ID and transaction ID.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            + \"Delete by member ID and transaction ID: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \"member ID + transaction ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            + \"Delete by member ID and transaction ID: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \"10001100001\";","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of delete transaction.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Transaction: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id memberId;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.transaction.Id transactionId;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an DeleteCommand to delete the specified {@code Member} by {@code memberId} and {@code transactionId}.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public DeleteTransactionCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            seedu.address.model.member.Id memberId, seedu.address.model.transaction.Id transactionId) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(memberId, transactionId);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        this.memberId \u003d memberId;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit} and {@code transactionToDelete}","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     * @param memberToEdit create a new member to edit and update.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * @param transactionToDelete the transaction will be deleted.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with added transactions and updated credits.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(Member memberToEdit, Transaction transactionToDelete) {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assert transactionToDelete !\u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"        Name name \u003d memberToEdit.getName();","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"        Phone phone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"        Email email \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"        Address address \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e updatedTags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e updatedTransactions \u003d new ArrayList\u003c\u003e(transactions);","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        updatedTransactions.remove(transactionToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        Credit updatedCredit \u003d new Credit(\"\" + Math.min(updatedTransactions.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                .mapToInt(t -\u003e (int) t.getBilling().getDoubleValue()).sum(), Credit.MAX));","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"        Point point \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, updatedCredit,","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"                point, updatedTransactions, reservations, updatedTags);","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult delete transaction command.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"                .filter(member -\u003e memberId.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        Transaction transactionToDelete \u003d memberToEdit.getTransactions().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e transactionId.equals(transaction.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        if (transactionToDelete \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, transactionToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + transactionToDelete + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof DeleteTransactionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 memberId.equals(((DeleteTransactionCommand) other).memberId)","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 transactionId.equals(((DeleteTransactionCommand) other).transactionId)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":32,"HolmesJJ":106}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents a edit command to add member or transaction to ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + \": Edits a member or a transaction or a reservation in the ezFoodie.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            + \"With \"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_MEMBER + \" (member details) or \"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" (transaction details) or \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" (reservation details)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the executes command.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":6,"mukundrs":2,"-":20,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/logic/commands/EditMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":" * Edits the details of an existing member in the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberCommand extends EditCommand {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Stands for edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the member identified \"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + \"by the index number used in the displayed member list or the member ID. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by index number: \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \"INDEX \"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            + \"(INDEX must be a positive integer) \"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID: \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"ID \"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by index number: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"10001 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of edit member.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message of not edited which need fields provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message of duplicate message.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            \"This member (phone or email) already exists in the ezFoodie.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    private final Index index;","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    private final Id id;","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    private final EditMemberDescriptor editMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * Constructs EditMemberCommand to edit member by index.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     * @param index of the member in the updated member list to edit.","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     * @param editMemberDescriptor details to edit the member with.","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberCommand(Index index, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(index, editMemberDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        id \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        this.editMemberDescriptor \u003d new EditMemberDescriptor(editMemberDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"     * Constructs EditMemberCommand to edit member by member id.","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * @param id of the member in the updated member list to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"     * @param editMemberDescriptor details to edit the member with.","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberCommand(Id id, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(id, editMemberDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        index \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        this.editMemberDescriptor \u003d new EditMemberDescriptor(editMemberDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes model.","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related edit member command.","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"            if (index.getZeroBased() \u003c lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                memberToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        if (id !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"            memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"                    .filter(member -\u003e id.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"            Member editedMember \u003d createEditedMember(memberToEdit, editMemberDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"            if (model.hasMember(editedMember, member -\u003e member.getId() !\u003d editedMember.getId())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"            model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"            model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, editedMember));","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit}","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"     * edited with {@code editMemberDescriptor}.","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with edited member.","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(Member memberToEdit, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        Name updatedName \u003d editMemberDescriptor.getName().orElse(memberToEdit.getName());","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        Phone updatedPhone \u003d editMemberDescriptor.getPhone().orElse(memberToEdit.getPhone());","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        Email updatedEmail \u003d editMemberDescriptor.getEmail().orElse(memberToEdit.getEmail());","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        Address updatedAddress \u003d editMemberDescriptor.getAddress().orElse(memberToEdit.getAddress());","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        Credit credit \u003d memberToEdit.getCredit();","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"        Point point \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMemberDescriptor.getTags().orElse(memberToEdit.getTags());","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"        return new Member(id, updatedName, updatedPhone, updatedEmail, updatedAddress, timestamp, credit, point,","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"                transactions, reservations, updatedTags);","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof EditMemberCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 (index \u003d\u003d null || index.equals(((EditMemberCommand) other).index))","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 (id \u003d\u003d null || id.equals(((EditMemberCommand) other).id)))","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 editMemberDescriptor.equals(((EditMemberCommand) other).editMemberDescriptor); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"     * Stores the details to edit the member with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"     * corresponding field value of the member.","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"    public static class EditMemberDescriptor {","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"        private Name name;","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        private Phone phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"        private Email email;","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"        private Address address;","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"        public EditMemberDescriptor() {}","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"        public EditMemberDescriptor(EditMemberDescriptor toCopy) {","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"zzybluebell"},"content":"         * Sets name.","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"HolmesJJ"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"zzybluebell"},"content":"         * Gets name.","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"zzybluebell"},"content":"         * Sets phone.","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"zzybluebell"},"content":"         * Gets phone.","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"zzybluebell"},"content":"         * Sets email.","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"HolmesJJ"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"HolmesJJ"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"zzybluebell"},"content":"         * Gets email.","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"zzybluebell"},"content":"         * Sets address.","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"HolmesJJ"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"HolmesJJ"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"zzybluebell"},"content":"         * Gets address.","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"HolmesJJ"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"HolmesJJ"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"zzybluebell"},"content":"         *","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"zzybluebell"},"content":"         * @param tags a list of tags.","lastModifiedDate":"2021-11-05"},{"lineNumber":288,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"HolmesJJ"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"HolmesJJ"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":292,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"HolmesJJ"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"HolmesJJ"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"HolmesJJ"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"HolmesJJ"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"zzybluebell"},"content":"         * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"HolmesJJ"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"HolmesJJ"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"HolmesJJ"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"HolmesJJ"},"content":"                return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"HolmesJJ"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"HolmesJJ"},"content":"            if (!(other instanceof EditMemberDescriptor)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"HolmesJJ"},"content":"                return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"HolmesJJ"},"content":"            // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"HolmesJJ"},"content":"            EditMemberDescriptor e \u003d (EditMemberDescriptor) other;","lastModifiedDate":"2021-10-29"},{"lineNumber":319,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"HolmesJJ"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-29"},{"lineNumber":321,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":65,"HolmesJJ":262}},{"path":"src/main/java/seedu/address/logic/commands/EditReservationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_TIME;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":" * Edits the details of an existing reservation in the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"public class EditReservationCommand extends EditCommand {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Stands for edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of edit reservation command.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the reservation identified \"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            + \"by the member ID and reservation ID. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID and reservation ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_RESERVATION + \" \" + PREFIX_ID + \"member ID + reservation ID \"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_DATE_TIME + \"DATE_TIME] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID and reservation ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_RESERVATION + \" \" + PREFIX_ID + \"10001100001 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_DATE_TIME + \"2021-12-01 13:00 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_REMARK + \"3 people\";","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of edit member.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message of the edited message has the same date.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SAME_DATE \u003d \"Only one reservation can be added within the same day. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            + \"Previous reservation: %1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message of not edited which need fields provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.reservation.Id reservationId;","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    private final EditReservationDescriptor editReservationDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * Constructs the EditReservationCommand.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     * @param memberId of the member in the updated member list to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * @param reservationId of the reservation in the reservation list to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * @param editReservationDescriptor details to edit the reservation with.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public EditReservationCommand(","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            seedu.address.model.member.Id memberId, seedu.address.model.reservation.Id reservationId,","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"            EditReservationDescriptor editReservationDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(memberId, reservationId, editReservationDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        this.memberId \u003d memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        this.reservationId \u003d reservationId;","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        this.editReservationDescriptor \u003d new EditReservationDescriptor(editReservationDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit},","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"     * {@code reservationToEdit} and {@code editReservationDescriptor}.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with updated credits.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"            Member memberToEdit, Reservation reservationToEdit, EditReservationDescriptor editReservationDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        assert reservationToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        // Member","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        Name updatedName \u003d memberToEdit.getName();","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        Phone updatedPhone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        Email updatedEmail \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        Address updatedAddress \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        Credit credit \u003d memberToEdit.getCredit();","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        Point point \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e updatedTags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        // Reservation","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        DateTime updatedDateTime \u003d editReservationDescriptor.getDateTime().orElse(reservationToEdit.getDateTime());","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        Remark updatedRemark \u003d editReservationDescriptor.getRemark().orElse(reservationToEdit.getRemark());","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cReservation\u003e updatedReservations \u003d new ArrayList\u003c\u003e(reservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        Reservation updatedReservation \u003d new Reservation(reservationToEdit.getId(), updatedDateTime, updatedRemark);","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        updatedReservations.stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"                .filter(reservation -\u003e reservation.isSameId(reservationToEdit)).findAny()","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                .ifPresent(reservation -\u003e updatedReservations","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"                        .set(updatedReservations.indexOf(reservation), updatedReservation));","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        return new Member(id, updatedName, updatedPhone, updatedEmail, updatedAddress, timestamp, credit, point,","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"                transactions, updatedReservations, updatedTags);","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to edit reservation command.","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"                .filter(member -\u003e memberId.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        Reservation reservationToEdit \u003d memberToEdit.getReservations().stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"                .filter(reservation -\u003e reservationId.equals(reservation.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        if (reservationToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RESERVATION_DISPLAYED_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        DateTime dateTimeToEdit \u003d editReservationDescriptor.getDateTime().orElse(null);","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        Reservation reservationSameDate \u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        if (dateTimeToEdit !\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"            if (!Reservation.isValidDateTime(dateTimeToEdit)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"                throw new CommandException(Reservation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"            reservationSameDate \u003d memberToEdit.getReservations().stream()","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"                    .filter(reservation -\u003e !reservation.equals(reservationToEdit)","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"                            \u0026\u0026 reservation.isSameDate(dateTimeToEdit.getLocalDateTimeValue()))","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"                    .findAny().orElse(null);","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        if (reservationSameDate \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"            Member editedMember \u003d createEditedMember(memberToEdit, reservationToEdit, editReservationDescriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"            model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"            model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"            Reservation updatedReservation \u003d editedMember.getReservations().stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"                    .filter(reservation -\u003e reservationId.equals(reservation.getId())).findAny().orElse(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"                    + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"                    + \"; Reservation: \" + \"[\" + updatedReservation + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"        throw new CommandException(String.format(MESSAGE_SAME_DATE, reservationSameDate));","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof EditReservationCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 memberId.equals(((EditReservationCommand) other).memberId)","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 reservationId.equals(((EditReservationCommand) other).reservationId)","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 editReservationDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"                .equals(((EditReservationCommand) other).editReservationDescriptor)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"     * Stores the details to edit the reservation with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"     * corresponding field value of the reservation.","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"    public static class EditReservationDescriptor {","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"        private DateTime dateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"        private Remark remark;","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"zzybluebell"},"content":"         * Constructs the EditReservationDescriptor without input.","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"        public EditReservationDescriptor() {}","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"zzybluebell"},"content":"         * Copies constructor.","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"        public EditReservationDescriptor(EditReservationDescriptor toCopy) {","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"zzybluebell"},"content":"         *","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"zzybluebell"},"content":"         * @return boolean if true some filed is edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"            return CollectionUtil.isAnyNonNull(dateTime, remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"zzybluebell"},"content":"         * Sets DateTime.","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"zzybluebell"},"content":"         *","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"zzybluebell"},"content":"         * @param dateTime the date time for editing.","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"HolmesJJ"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"zzybluebell"},"content":"         * Gets DateTime.","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"zzybluebell"},"content":"         * Sets remark from {@code remark}.","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"zzybluebell"},"content":"         * Gets remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"zzybluebell"},"content":"         * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"HolmesJJ"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"HolmesJJ"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"HolmesJJ"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"HolmesJJ"},"content":"                return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"HolmesJJ"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"HolmesJJ"},"content":"            if (!(other instanceof EditReservationDescriptor)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"HolmesJJ"},"content":"                return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"HolmesJJ"},"content":"            // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"HolmesJJ"},"content":"            EditReservationDescriptor e \u003d (EditReservationDescriptor) other;","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"HolmesJJ"},"content":"            return getDateTime().equals(e.getDateTime())","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark());","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":58,"HolmesJJ":219}},{"path":"src/main/java/seedu/address/logic/commands/EditTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BILLING;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":" * Edits the details of an existing transaction in the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"public class EditTransactionCommand extends EditCommand {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * Stands for edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of edit command for edit transaction.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the transaction identified \"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            + \"by the member ID and transaction ID. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID and transaction ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \"member ID + transaction ID \"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            + \"[\" + PREFIX_BILLING + \"BILLING]\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            + \"Edit by member ID and transaction ID: \"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \"10001100001 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_BILLING + \"123.45\";","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Stands for succeed message of edit member.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message of not edited which need fields provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.member.Id memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    private final seedu.address.model.transaction.Id transactionId;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    private final EditTransactionDescriptor editTransactionDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     * Constructs EditTransactionCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * @param memberId of the member in the updated member list to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * @param transactionId of the transaction in the transaction list to edit.","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * @param editTransactionDescriptor details to edit the transaction with.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionCommand(","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            seedu.address.model.member.Id memberId, seedu.address.model.transaction.Id transactionId,","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"            EditTransactionDescriptor editTransactionDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(memberId, transactionId, editTransactionDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        this.memberId \u003d memberId;","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        this.editTransactionDescriptor \u003d new EditTransactionDescriptor(editTransactionDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit},","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"     * {@code transactionToEdit} and {@code editTransactionDescriptor}.","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with updated credits.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    private static Member createEditedMember(","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"            Member memberToEdit, Transaction transactionToEdit, EditTransactionDescriptor editTransactionDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        assert transactionToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        // Member","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id id \u003d memberToEdit.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"        Name name \u003d memberToEdit.getName();","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"        Phone phone \u003d memberToEdit.getPhone();","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"        Email email \u003d memberToEdit.getEmail();","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"        Address address \u003d memberToEdit.getAddress();","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d memberToEdit.getTimestamp();","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cReservation\u003e reservations \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e updatedTags \u003d memberToEdit.getTags();","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        // Transaction","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp updatedTimestamp \u003d editTransactionDescriptor.getTimestamp().orElse(transactionToEdit.getTimestamp());","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        Billing updatedBilling \u003d editTransactionDescriptor.getBilling().orElse(transactionToEdit.getBilling());","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e updatedTransactions \u003d new ArrayList\u003c\u003e(transactions);","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        Transaction updatedTransaction \u003d new Transaction(transactionToEdit.getId(), updatedTimestamp, updatedBilling);","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        updatedTransactions.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e transaction.isSameId(transactionToEdit)).findAny()","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"                .ifPresent(transaction -\u003e updatedTransactions","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"                        .set(updatedTransactions.indexOf(transaction), updatedTransaction));","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        Credit updatedCredit \u003d new Credit(\"\" + Math.min(updatedTransactions.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                .mapToInt(t -\u003e (int) t.getBilling().getDoubleValue()).sum(), Credit.MAX));","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"        Point updatedPoint;","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"        if (updatedBilling.getDoubleValue() \u003e transactionToEdit.getBilling().getDoubleValue()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"            updatedPoint \u003d new Point(\"\" + Math.min(Integer.parseInt(String.valueOf(updatedCredit.getIntValue()","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"zzybluebell"},"content":"                    - memberToEdit.getCredit().getIntValue()","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"zzybluebell"},"content":"                    + memberToEdit.getPoint().getIntValue())), Point.MAX));","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"            updatedPoint \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, updatedCredit,","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"                updatedPoint, updatedTransactions, reservations, updatedTags);","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes model.","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to edir transaction command.","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"                .filter(member -\u003e memberId.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        Transaction transactionToEdit \u003d memberToEdit.getTransactions().stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e transactionId.equals(transaction.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        if (transactionToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, transactionToEdit, editTransactionDescriptor);","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        Transaction updatedTransaction \u003d editedMember.getTransactions().stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e transactionId.equals(transaction.getId())).findAny().orElse(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"Id: \" + editedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + editedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + updatedTransaction + \"]\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof EditTransactionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 memberId.equals(((EditTransactionCommand) other).memberId)","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 transactionId.equals(((EditTransactionCommand) other).transactionId)","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 editTransactionDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"                .equals(((EditTransactionCommand) other).editTransactionDescriptor)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"     * Stores the details to edit the transaction with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"     * corresponding field value of the transaction.","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"    public static class EditTransactionDescriptor {","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"        private Timestamp timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"        private Billing billing;","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"        public EditTransactionDescriptor() {}","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"zzybluebell"},"content":"         * Copies constructor.","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"        public EditTransactionDescriptor(EditTransactionDescriptor toCopy) {","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"            setTimestamp(toCopy.timestamp);","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"            setBilling(toCopy.billing);","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"            return CollectionUtil.isAnyNonNull(timestamp, billing);","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"zzybluebell"},"content":"         * Sets time stamp from input {@code timestamp}.","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"zzybluebell"},"content":"         *","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"zzybluebell"},"content":"         * @param timestamp transaction\u0027s timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"        public void setTimestamp(Timestamp timestamp) {","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"            this.timestamp \u003d timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"zzybluebell"},"content":"         * Gets time stamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cTimestamp\u003e getTimestamp() {","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(timestamp);","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"zzybluebell"},"content":"         * Sets Billing from {@code billing}.","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"zzybluebell"},"content":"         *","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"zzybluebell"},"content":"         * @param billing transaction\u0027s billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"        public void setBilling(Billing billing) {","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"            this.billing \u003d billing;","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"zzybluebell"},"content":"         * Gets billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cBilling\u003e getBilling() {","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(billing);","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"zzybluebell"},"content":"         * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"HolmesJJ"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"HolmesJJ"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"HolmesJJ"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"                return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"HolmesJJ"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"HolmesJJ"},"content":"            if (!(other instanceof EditTransactionDescriptor)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"HolmesJJ"},"content":"                return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"HolmesJJ"},"content":"            // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"HolmesJJ"},"content":"            EditTransactionDescriptor e \u003d (EditTransactionDescriptor) other;","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"HolmesJJ"},"content":"            return getTimestamp().equals(e.getTimestamp())","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"HolmesJJ"},"content":"                    \u0026\u0026 getBilling().equals(e.getBilling());","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":66,"HolmesJJ":193}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     * Stands for exit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of exit success command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ezFoodie as requested ...\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to edit command.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Morrow1ndy":1,"zzybluebell":12,"-":17,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.RegistrationDateContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":" * Finds and lists all members in ezFoodie whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for find command.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of find command.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"            + \": Finds all members whose ids, names, phones or emails contain any of \"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            + \"the specified keywords (case-insensitive) or within a specific of registration dates \"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by member ID: \" + PREFIX_MEMBER + \" [\" + PREFIX_ID + \"ID]\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by name: \" + PREFIX_MEMBER + \" [\" + PREFIX_NAME + \"NAME]\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by phone: \" + PREFIX_MEMBER + \" [\" + PREFIX_PHONE + \"PHONE]\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by email: \" + PREFIX_MEMBER + \" [\" + PREFIX_EMAIL + \"EMAIL]\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by registration date: \" + PREFIX_MEMBER + \" [\" + PREFIX_DATE + \"REGISTRATION_DATE]\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by member ID: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"10001\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by name: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_NAME + \"Alex\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by phone: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_PHONE + \"87438807\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by email: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_EMAIL + \"alexyeoh@example.com\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            + \"Find by registration date: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + \" \" + PREFIX_DATE + \" 2021-01-02\";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    private final Predicate\u003cMember\u003e predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Constructs FindCommand through Id from input {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public FindCommand(IdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     * Constructs FindCommand through Name {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * @param predicate the details of contain key words for name.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * Constructs FindCommand through Phone.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * @param predicate the details of contain key words for phone.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public FindCommand(PhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * Constructs FindCommand through Email {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * @param predicate the details of contain key words for email.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public FindCommand(EmailContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"     * Constructs FindCommand through RegistrationDate {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * @param predicate the details of contain key words for registration date.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    public FindCommand(RegistrationDateContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to find command.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"                String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getUpdatedMemberList().size()));","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zzybluebell":38,"-":33,"HolmesJJ":51}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * Formats full help instructions for every command for display.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     * Stands for help command.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of help command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of help command and show help window.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to help command.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Morrow1ndy":1,"zzybluebell":15,"-":19,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * Lists all members in the ezFoodie to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Stands for list command.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of list command.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"            + \": Lists out all members.\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters: \" + PREFIX_MEMBER + \"\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message success listed.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and Executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to list command.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":18,"-":20,"HolmesJJ":14}},{"path":"src/main/java/seedu/address/logic/commands/LoginCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Logs in as a manager.","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class LoginCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for login command.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"login\";","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of login command.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        + \": Logs in as a manager by password.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        + \"Parameters: PASSWORD (case-sensitive and must be not empty, default by \"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        + Password.DEFAULT_PLAINTEXT_PASSWORD + \")\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + Password.DEFAULT_PLAINTEXT_PASSWORD;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of login successfully.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Logged in successfully!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of login failed.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Failed to login!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of login status.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_ALREADY_IN_STATUS \u003d \"You are already in MANAGER login status!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    private final Password password;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Constructs LoginCommand.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @param password the login password.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public LoginCommand(Password password) {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        this.password \u003d password;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to login command.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(MESSAGE_ALREADY_IN_STATUS);","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        String inputPassword \u003d password.value;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        String readPassword \u003d model.getAccount().getPassword().value;","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        if (inputPassword.equals(readPassword)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":28,"HolmesJJ":43}},{"path":"src/main/java/seedu/address/logic/commands/LogoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.COMPARATOR_SORT_MEMBERS_BY_ID_ASC;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Logs out as a manager.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class LogoutCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * Stands for logout command.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"logout\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of logout successfully.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Logged out successfully!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of logout status.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_ALREADY_IN_STATUS \u003d \"You are already in STAFF login status!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to logout command.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.STAFF) {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(MESSAGE_ALREADY_IN_STATUS);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.STAFF);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        model.updateSortedMemberList(COMPARATOR_SORT_MEMBERS_BY_ID_ASC);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":17,"HolmesJJ":30}},{"path":"src/main/java/seedu/address/logic/commands/RedeemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REDEEM;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":" * Redeems point from an existing member in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"public class RedeemCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Stands for redeem command.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    public static final String COMMAND_WORD \u003d \"redeem\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of redeem command.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redeems points from member id in the ezFoodie.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"            + \"Redeem by index number: \" + PREFIX_INDEX + \" INDEX \"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"            + \"(INDEX must be a positive integer) \"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"            + PREFIX_REDEEM + \" POINTS\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"            + \"Redeem by member ID: \" + PREFIX_ID + \" ID \"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"            + PREFIX_REDEEM + \" POINTS\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            + \"Redeem by index number: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"            + PREFIX_REDEEM + \" 100\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            + \"Redeem by member ID: \" + COMMAND_WORD + \" \" + PREFIX_ID + \" 10001 \"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"            + PREFIX_REDEEM + \" 100\";","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message for redeem points successfully.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS_REDEMPTION \u003d \"Redeemed Member: %1$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message for duplicate member.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            \"This member (phone or email) already exists in the ezFoodie.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message when redemption point exceed.","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"    public static final String MESSAGE_INVALID_POINTS_LESS_THAN_ZERO \u003d \"Redeemed point has already exceeded\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"            + \"Points can\u0027t redeemed less than 0\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"            + \"Please try again\";","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    private final List\u003cPoint\u003e pointsToRedeemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"    private final Id idToRedeem;","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"    private final Index indexToRedeem;","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an RedeemCommand to add the specified {@code Member} by id.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * @param pointsToRedeemList the points of to redeemed list.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     * @param id the member id that needs to redeem point.","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"    public RedeemCommand(List\u003cPoint\u003e pointsToRedeemList, Id id) {","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"        requireAllNonNull(pointsToRedeemList, id);","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"        this.pointsToRedeemList.addAll(pointsToRedeemList);","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"        this.idToRedeem \u003d id;","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"        this.indexToRedeem \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an RedeemCommand to add the specified {@code Member} by index.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * @param pointsToRedeemList the points of to redeemed list.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     * @param index the member index that needs to redeem point.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"    public RedeemCommand(List\u003cPoint\u003e pointsToRedeemList, Index index) {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"        requireAllNonNull(pointsToRedeemList, index);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"        this.pointsToRedeemList.addAll(pointsToRedeemList);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"        this.indexToRedeem \u003d index;","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"        this.idToRedeem \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to redeem command.","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"zzybluebell"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"zzybluebell"},"content":"        Member memberToEdit \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"        if (indexToRedeem !\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"            if (indexToRedeem.getZeroBased() \u003c lastShownList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"                memberToEdit \u003d lastShownList.get(indexToRedeem.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"            } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"        if (idToRedeem !\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"zzybluebell"},"content":"            memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"zzybluebell"},"content":"                    .filter(member -\u003e idToRedeem.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"        if (memberToEdit !\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"zzybluebell"},"content":"            Member toRedeemPointsMember \u003d createToRedeemPointsMember(memberToEdit, pointsToRedeemList);","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"            if (model.hasMember(toRedeemPointsMember, member -\u003e member.getId() !\u003d toRedeemPointsMember.getId())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"            model.setMember(memberToEdit, toRedeemPointsMember);","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"zzybluebell"},"content":"            model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_REDEMPTION, toRedeemPointsMember));","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit}","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"     * edited with {@code editMemberDescriptor}.","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"zzybluebell"},"content":"     * @param memberToRedeemPoints creates the member who need to be redeemed points.","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"zzybluebell"},"content":"     * @param toRedeemPointsList the list of points need to redeem all.","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"zzybluebell"},"content":"     * @return Member with redeemed Points","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"zzybluebell"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"zzybluebell"},"content":"    private static Member createToRedeemPointsMember(Member memberToRedeemPoints, List\u003cPoint\u003e toRedeemPointsList)","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"zzybluebell"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"zzybluebell"},"content":"        assert memberToRedeemPoints !\u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"zzybluebell"},"content":"        Id id \u003d memberToRedeemPoints.getId();","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"zzybluebell"},"content":"        Name name \u003d memberToRedeemPoints.getName();","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"zzybluebell"},"content":"        Phone phone \u003d memberToRedeemPoints.getPhone();","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"zzybluebell"},"content":"        Email email \u003d memberToRedeemPoints.getEmail();","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"zzybluebell"},"content":"        Address address \u003d memberToRedeemPoints.getAddress();","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"zzybluebell"},"content":"        Timestamp timestamp \u003d memberToRedeemPoints.getTimestamp();","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"zzybluebell"},"content":"        Set\u003cTag\u003e tags \u003d memberToRedeemPoints.getTags();","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"zzybluebell"},"content":"        List\u003cTransaction\u003e transactions \u003d memberToRedeemPoints.getTransactions();","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"zzybluebell"},"content":"        List\u003cReservation\u003e reservations \u003d memberToRedeemPoints.getReservations();","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"zzybluebell"},"content":"        Credit credit \u003d memberToRedeemPoints.getCredit();","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"zzybluebell"},"content":"        Point toRedeemPointsSum \u003d new Point(\"\" + Math.min(toRedeemPointsList.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"zzybluebell"},"content":"                .mapToInt(pointToUpdate -\u003e (int) pointToUpdate.getDoubleValue()).sum(), Point.MAX));","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"zzybluebell"},"content":"        int oldPoint \u003d memberToRedeemPoints.getPoint().getIntValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"zzybluebell"},"content":"        int toRedeemPoint \u003d toRedeemPointsSum.getIntValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"zzybluebell"},"content":"        if (oldPoint \u003c toRedeemPoint) {","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"zzybluebell"},"content":"            throw new CommandException(MESSAGE_INVALID_POINTS_LESS_THAN_ZERO);","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"zzybluebell"},"content":"        Point updatePoint \u003d new Point(String.valueOf(oldPoint - toRedeemPoint));","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, credit,","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"zzybluebell"},"content":"                updatePoint, transactions, reservations, tags);","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"zzybluebell"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"zzybluebell":171,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/logic/commands/SetAccountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * Edits the details of an existing account in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class SetAccountCommand extends Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets login password. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"            + \"Existing password will be overwritten by the new password.\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_PASS + \"PASSWORD\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example: \"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_PASS + \"123456\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Password updated\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    private final EditAccountDescriptor editAccountDescriptor;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code SetAccountCommand} with {@code editAccountDescriptor}.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param editAccountDescriptor details to edit the account with.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public SetAccountCommand(EditAccountDescriptor editAccountDescriptor) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(editAccountDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        this.editAccountDescriptor \u003d editAccountDescriptor;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * Executes the model.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to set account command.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        Password passwordToEdit \u003d model.getAccount().getPassword();","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        Account editedAccount \u003d createEditedAccount(passwordToEdit, editAccountDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        model.setAccount(editedAccount);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * Creates and returns a {@code Account} with the details of {@code passwordToEdit}","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * edited with {@code editAccountDescriptor}.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    private static Account createEditedAccount(Password passwordToEdit, EditAccountDescriptor editAccountDescriptor) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        assert passwordToEdit !\u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        Password updatedPassword \u003d editAccountDescriptor.getPassword().orElse(passwordToEdit);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        return new Account(updatedPassword);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof SetAccountCommand // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 editAccountDescriptor.equals(((SetAccountCommand) other).editAccountDescriptor)); // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"     * Stores the details to edit the account with. Each non-empty field value will replace the","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"     * corresponding field value of the account.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    public static class EditAccountDescriptor {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        private Password password;","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"        /**","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"         * Constructs a {@code EditAccountDescriptor}.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"         */","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        public EditAccountDescriptor() {}","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"         * Copies constructor.","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"         * A defensive copy of {@code toCopy} is used internally.","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        public EditAccountDescriptor(SetAccountCommand.EditAccountDescriptor toCopy) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"            setPassword(toCopy.password);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        /**","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"            return CollectionUtil.isAnyNonNull(password);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        public void setPassword(Password password) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"            this.password \u003d password;","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        public Optional\u003cPassword\u003e getPassword() {","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.ofNullable(password);","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"            // short circuit if same object","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"            if (!(other instanceof SetAccountCommand.EditAccountDescriptor)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"            // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            SetAccountCommand.EditAccountDescriptor e \u003d (SetAccountCommand.EditAccountDescriptor) other;","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"            return getPassword().equals(e.getPassword());","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"zzybluebell":16,"HolmesJJ":114}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASC;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * Sorts and lists all members in ezFoodie by credit.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Stands for sort command.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of Sort command.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            + \": Sorts all members by credit in ascending or descending \"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            + \"Sort credit in ascending: \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_ASC + \"\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"            + \"Sort credit in descending: \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_DESC + \"\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"            + \"Sort credit in ascending: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_ASC + \"\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            + \"Sort credit in descending: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of sorted in ascending.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SORT_ASC \u003d \"Members sorted by credit in ascending!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of sorted in descending.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_SORT_DESC \u003d \"Members sorted by credit in descending!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    private final CreditSortComparator comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * Constructs SortCommand by {@code comparator}.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public SortCommand(CreditSortComparator comparator) {","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to sort command.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        model.updateSortedMemberList(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        if (comparator.getSortStatus() \u003d\u003d SortStatus.DESC) {","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(MESSAGE_SORT_DESC);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            return new CommandResult(MESSAGE_SORT_ASC);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 comparator.equals(((SortCommand) other).comparator)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zzybluebell":25,"HolmesJJ":58}},{"path":"src/main/java/seedu/address/logic/commands/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Formats the summary of members and transactions related information","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":" * for display in text form.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"public class SummaryCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     * Stands for summary command.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String COMMAND_WORD \u003d \"summary\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of summary command.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"            + \": Shows summary for members and transactions.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of open summary window successfully.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String SHOWING_SUMMARY_MESSAGE \u003d \"Opened summary window.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes model.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to summary command.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"        return new CommandResult(SHOWING_SUMMARY_MESSAGE,","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"                false, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Morrow1ndy":26,"zzybluebell":15,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * Views specific member details in eZFoodie, accessed by member ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for view command.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of open view window successfully.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String SHOWING_VIEW_MESSAGE \u003d \"Opened view window.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the message of show and view command.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"            + \": View a specific member\u0027s details, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"            + \"accessed by member ID.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            + PREFIX_MEMBER + \" \" + PREFIX_ID + \"ID\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \"10001\";","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    private final IdContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs the view command based on member ID predicate.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * @param predicate of member ID.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"    public ViewCommand(IdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and executes the model.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * @return CommandResult related to View command.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * @throws CommandException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"        model.updateFilteredMemberListForView(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        if (model.getUpdatedMemberListForView().size() \u003e 0) {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"            return new CommandResult(SHOWING_VIEW_MESSAGE, false, false, true, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * Override the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 predicate.equals(((ViewCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":43,"zzybluebell":20,"HolmesJJ":13}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message}.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"zzybluebell":6,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new AddCommandParser object.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"public abstract class AddCommandParser {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related add command.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * @return AddCommand the class for process input add command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    public abstract AddCommand parse(String args) throws ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Morrow1ndy":1,"zzybluebell":6,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandPrefixParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":" * Distinguishes between add member and add transaction commands and","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":" * returns an AddMemberCommandParser or AddTransactionCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":" * depends on the very first prefix appears after command word.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"public class AddCommandPrefixParser {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    private final Model model;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code AddCommandPrefixParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @param model of ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * @param executionStatus normal or test.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    public AddCommandPrefixParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an AddCommandParser object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related add command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @return AddMemberCommandParser or AddTransactionCommandParser or AddReservationCommandParser.","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"    public AddCommandParser parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                args, PREFIX_MEMBER, PREFIX_TRANSACTION, PREFIX_RESERVATION);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_MEMBER).isPresent()","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"            return new AddMemberCommandParser(model, executionStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        } else if (argMultimap.getValue(PREFIX_TRANSACTION).isPresent()","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"            return new AddTransactionCommandParser(model, executionStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        } else if (argMultimap.getValue(PREFIX_RESERVATION).isPresent()","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"mukundrs"},"content":"            return new AddReservationCommandParser(model, executionStatus);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Morrow1ndy":40,"zzybluebell":2,"mukundrs":4,"HolmesJJ":17}},{"path":"src/main/java/seedu/address/logic/parser/AddMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new AddMemberCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"public class AddMemberCommandParser extends AddCommandParser implements Parser\u003cAddMemberCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private static final String ID_STUB \u003d \"00001\";","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"    private final Model model;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"     * Constructs a {@code AddMemberCommandParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    public AddMemberCommandParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    private String generateId() throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cMember\u003e memberList \u003d model.getEzFoodie().getMemberList();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"        long latestId \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"        if (memberList.size() \u003e 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            latestId \u003d memberList.get(memberList.size() - 1).getId().getLongValue();","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        if (latestId \u003d\u003d Id.MAX) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(AddMemberCommand.MESSAGE_FULL);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        return Long.toString(latestId + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    private String generateIdStub() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        return ID_STUB;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMemberCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * and returns an AddMemberCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related add member command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * @return AddMemberCommand the class for process input add member command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"    public AddMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"                PREFIX_MEMBER, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"                ? ParserUtil.parseMemberId(generateId())","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"stephanie-csy"},"content":"                : ParserUtil.parseMemberId(generateIdStub());","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"        Timestamp timestamp \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                ? ParserUtil.parseTimestamp(DateTimeUtil.generateTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"                : ParserUtil.parseTimestamp(DateTimeUtil.generateTimestampStub());","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        Credit credit \u003d new Credit(\"0\");","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"        Point point \u003d new Point(credit.getStringValue());","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e reservationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"        Member member \u003d new Member(id, name, phone, email, address, timestamp, credit, point,","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"                transactionList, reservationList, tagList);","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"        return new AddMemberCommand(member);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Morrow1ndy":2,"stephanie-csy":21,"zzybluebell":22,"mukundrs":1,"-":41,"HolmesJJ":30}},{"path":"src/main/java/seedu/address/logic/parser/AddReservationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_TIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"import seedu.address.logic.commands.AddReservationCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new AddReservationCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"public class AddReservationCommandParser extends AddCommandParser implements Parser\u003cAddReservationCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"    private static final String ID_STUB \u003d \"000001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mukundrs"},"content":"    private final Model model;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"mukundrs"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code AddReservationCommandParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    public AddReservationCommandParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private String generateId(seedu.address.model.member.Id id) throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"                .filter(member -\u003e id.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"        if (memberToEdit !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"            List\u003cReservation\u003e reservationList \u003d memberToEdit.getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"            long latestId \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"            if (reservationList.size() \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                latestId \u003d reservationList.get(reservationList.size() - 1).getId().getLongValue();","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            if (latestId \u003d\u003d seedu.address.model.reservation.Id.MAX) {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(AddReservationCommand.MESSAGE_FULL);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            return Long.toString(latestId + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    private String generateIdStub() {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return ID_STUB;","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"mukundrs"},"content":"     * Parses the given {@code String} of arguments in the context of the AddReservationCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"mukundrs"},"content":"     * and returns an AddReservationCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related add reservation command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * @return AddReservationCommand the class for process input add reservation command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"    public AddReservationCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"mukundrs"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_RESERVATION, PREFIX_DATE_TIME, PREFIX_REMARK, PREFIX_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RESERVATION, PREFIX_DATE_TIME, PREFIX_REMARK, PREFIX_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"mukundrs"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"mukundrs"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"mukundrs"},"content":"                    AddReservationCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        DateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE_TIME).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.reservation.Id reservationId \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"                ? ParserUtil.parseReservationId(generateId(memberId))","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"                : ParserUtil.parseReservationId(generateIdStub());","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"stephanie-csy"},"content":"        Reservation reservation \u003d new Reservation(reservationId, dateTime, remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        return new AddReservationCommand(reservation, memberId);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"mukundrs"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"mukundrs"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"stephanie-csy":16,"zzybluebell":5,"mukundrs":50,"HolmesJJ":30}},{"path":"src/main/java/seedu/address/logic/parser/AddTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_ID;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BILLING;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.AddTransactionCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new AddTransactionCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"public class AddTransactionCommandParser extends AddCommandParser implements Parser\u003cAddTransactionCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private static final String ID_STUB \u003d \"000001\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"    private final Model model;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code AddTransactionCommandParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"    public AddTransactionCommandParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    private String generateId(seedu.address.model.member.Id id) throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getUpdatedMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d lastShownList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                .filter(member -\u003e id.equals(member.getId())).findAny().orElse(null);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        if (memberToEdit !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            List\u003cTransaction\u003e transactionList \u003d memberToEdit.getTransactions();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            long latestId \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            if (transactionList.size() \u003e 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                latestId \u003d transactionList.get(transactionList.size() - 1).getId().getLongValue();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            if (latestId \u003d\u003d seedu.address.model.transaction.Id.MAX) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(AddTransactionCommand.MESSAGE_FULL);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            return Long.toString(latestId + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(MESSAGE_INVALID_MEMBER_DISPLAYED_ID);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    private String generateIdStub() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        return ID_STUB;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTransactionCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"     * and returns an AddTransactionCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related add transaction command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @return AddTransactionCommand the class for process input add transaction command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"    public AddTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TRANSACTION, PREFIX_BILLING, PREFIX_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRANSACTION, PREFIX_BILLING, PREFIX_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"                    AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        Billing billing \u003d ParserUtil.parseBilling(argMultimap.getValue(PREFIX_BILLING).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"                ? ParserUtil.parseTimestamp(DateTimeUtil.generateTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"                : ParserUtil.parseTimestamp(DateTimeUtil.generateTimestampStub());","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.transaction.Id transactionId \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"                ? ParserUtil.parseTransactionId(generateId(memberId))","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                : ParserUtil.parseTransactionId(generateIdStub());","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        Transaction transaction \u003d new Transaction(transactionId, timestamp, billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        return new AddTransactionCommand(transaction, memberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Morrow1ndy":51,"zzybluebell":6,"HolmesJJ":47}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * @param argValue Argument value to be associated with the specified prefix key.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the size of prefixes.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        return argMultimap.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"zzybluebell":2,"-":58,"HolmesJJ":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @param prefixes   Prefixes to find in the arguments string.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @return           List of zero-based prefix positions in the given arguments string.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"zzybluebell":9,"-":139}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_MEMBER.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_MEMBER \u003d new Prefix(\"-mem/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_ID.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"-id/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_INDEX.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"-i/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_NAME.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_PHONE.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_EMAIL.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_ADDRESS.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_DATE.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"-d/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_CREDIT.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_CREDIT \u003d new Prefix(\"-c/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_REDEEM.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_REDEEM \u003d new Prefix(\"-rd/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_TRANSACTION.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_TRANSACTION \u003d new Prefix(\"-txn/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_BILLING.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_BILLING \u003d new Prefix(\"-b/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_RESERVATION.","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_RESERVATION \u003d new Prefix(\"-rs/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_DATE_TIME.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_DATE_TIME \u003d new Prefix(\"-dt/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_REMARK.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"-rm/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_PASS.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_PASS \u003d new Prefix(\"-pass/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_TAG.","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-tag/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    /* Only used in sort command */","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_ASCENDING_ORDER.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_ASC \u003d new Prefix(\"-a/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Stands for PREFIX_DESCENDING_ORDER.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    public static final Prefix PREFIX_DESC \u003d new Prefix(\"-d\");","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zzybluebell":75,"-":11,"HolmesJJ":20}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public abstract class DeleteCommandParser {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an DeleteCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public abstract DeleteCommand parse(String args) throws ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zzybluebell":3,"-":13,"HolmesJJ":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandPrefixParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Distinguishes between delete member and delete transaction commands and","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * returns an DeleteMemberCommandParser or DeleteTransactionCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * depends on the very first prefix appears after command word.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteCommandPrefixParser {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an DeleteCommandParser object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related delete command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @return DeleteMemberCommandParser or DeleteTransactionCommandParser or DeleteReservationCommandParser.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public DeleteCommandParser parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"                args, PREFIX_MEMBER, PREFIX_TRANSACTION, PREFIX_RESERVATION);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_MEMBER).isPresent()","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            return new DeleteMemberCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        } else if (argMultimap.getValue(PREFIX_TRANSACTION).isPresent()","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            return new DeleteTransactionCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"        } else if (argMultimap.getValue(PREFIX_RESERVATION).isPresent()","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"            return new DeleteReservationCommandParser();","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"stephanie-csy":4,"zzybluebell":2,"HolmesJJ":42}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new DeleteMemberCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"public class DeleteMemberCommandParser extends DeleteCommandParser implements Parser\u003cDeleteMemberCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"    private static final int PREFIX_SIZE \u003d 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMemberCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":"     * and returns a DeleteMemberCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related delete member command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * @return DeleteMemberCommand the class for process input delete member command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"    public DeleteMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_ID, PREFIX_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"        if (argMultimap.getSize() !\u003d PREFIX_SIZE || argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"                || (argMultimap.getValue(PREFIX_ID).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_INDEX).isEmpty())","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"stephanie-csy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"            Id id \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"            return new DeleteMemberCommand(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"            return new DeleteMemberCommand(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"stephanie-csy":48,"zzybluebell":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteReservationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"stephanie-csy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.commands.DeleteReservationCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new DeleteReservationCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"stephanie-csy"},"content":"public class DeleteReservationCommandParser extends DeleteCommandParser implements Parser\u003cDeleteReservationCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteReservationCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"     * and returns a DeleteReservationCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related delete reservation command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @return DeleteReservationCommand the class for process input delete reservation command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"    public DeleteReservationCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_RESERVATION, PREFIX_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RESERVATION, PREFIX_ID)","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"stephanie-csy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteReservationCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"        String ids \u003d argMultimap.getValue(PREFIX_ID).get();","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseMemberId(ids.substring(0, seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        Id reservationId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseReservationId(ids.substring(seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"        return new DeleteReservationCommand(memberId, reservationId);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"stephanie-csy":42,"zzybluebell":5,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new DeleteTransactionCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteTransactionCommandParser extends DeleteCommandParser implements Parser\u003cDeleteTransactionCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTransactionCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * and returns a DeleteTransactionCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related delete transaction command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @return DeleteTransactionCommand the class for process input delete transaction command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public DeleteTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TRANSACTION, PREFIX_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRANSACTION, PREFIX_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        String ids \u003d argMultimap.getValue(PREFIX_ID).get();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseMemberId(ids.substring(0, seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.transaction.Id transactionId \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseTransactionId(ids.substring(seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        return new DeleteTransactionCommand(memberId, transactionId);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":47}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new EditCommandParser object.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public abstract class EditCommandParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related edit member command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * @return EditCommand the class for process input edit command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public abstract EditCommand parse(String args) throws ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zzybluebell":5,"-":13,"HolmesJJ":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandPrefixParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * Distinguishes between edit member and edit transaction commands and","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * returns an EditMemberCommandParser or EditTransactionCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" * depends on the very first prefix appears after command word.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class EditCommandPrefixParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code EditCommandPrefixParser} with the {@code ExecutionStatus}.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @param executionStatus normal or test.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public EditCommandPrefixParser(ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an EditCommandParser object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related edit command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * @return EditMemberCommandParser or EditTransactionCommandParser or AddReservationCommandParser.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public EditCommandParser parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                args, PREFIX_MEMBER, PREFIX_TRANSACTION, PREFIX_RESERVATION);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_MEMBER).isPresent()","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            return new EditMemberCommandParser();","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        } else if (argMultimap.getValue(PREFIX_TRANSACTION).isPresent()","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_RESERVATION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            return new EditTransactionCommandParser(executionStatus);","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        } else if (argMultimap.getValue(PREFIX_RESERVATION).isPresent()","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TRANSACTION).isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            return new EditReservationCommandParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":2,"HolmesJJ":57}},{"path":"src/main/java/seedu/address/logic/parser/EditMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new EditMemberCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberCommandParser extends EditCommandParser implements Parser\u003cEditMemberCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PREFIX_SIZE \u003d 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMemberCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an EditMemberCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related edit member command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @return EditMemberCommand the class for process input edit member command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_ID, PREFIX_INDEX,","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getSize() \u003c PREFIX_SIZE || argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                || (argMultimap.getValue(PREFIX_ID).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_INDEX).isEmpty())","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                || (argMultimap.getValue(PREFIX_ID).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_INDEX).isPresent())","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            editMemberDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            editMemberDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            editMemberDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            editMemberDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editMemberDescriptor::setTags);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        if (!editMemberDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"            Id id \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            return new EditMemberCommand(id, editMemberDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"            return new EditMemberCommand(index, editMemberDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":96}},{"path":"src/main/java/seedu/address/logic/parser/EditReservationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_TIME;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditReservationCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditReservationCommand.EditReservationDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new EditReservationCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"public class EditReservationCommandParser extends EditCommandParser implements Parser\u003cEditReservationCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related edit reservation command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * @return EditReservationCommand the class for process input edit reservation command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public EditReservationCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_RESERVATION, PREFIX_ID,","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"                PREFIX_DATE_TIME, PREFIX_REMARK);","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RESERVATION, PREFIX_ID)","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                    EditReservationCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        String ids \u003d argMultimap.getValue(PREFIX_ID).get();","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseMemberId(ids.substring(0, seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.reservation.Id reservationId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseReservationId(ids.substring(seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        EditReservationDescriptor editReservationDescriptor \u003d new EditReservationDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_DATE_TIME).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            editReservationDescriptor.setDateTime(","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                    ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE_TIME).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            editReservationDescriptor.setRemark(","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                    ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        if (!editReservationDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(EditReservationCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return new EditReservationCommand(memberId, reservationId, editReservationDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":64}},{"path":"src/main/java/seedu/address/logic/parser/EditTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BILLING;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditTransactionCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditTransactionCommand.EditTransactionDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new EditTransactionCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"public class EditTransactionCommandParser extends EditCommandParser implements Parser\u003cEditTransactionCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code EditTransactionCommandParser} with the given {@code ExecutionStatus}.","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionCommandParser(ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTransactionCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * and returns an EditTransactionCommand object for execution.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related edit transaction command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * @return EditTransactionCommand the class for process input edit transaction command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TRANSACTION, PREFIX_ID, PREFIX_BILLING);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRANSACTION, PREFIX_ID)","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                    EditTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        String ids \u003d argMultimap.getValue(PREFIX_ID).get();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseMemberId(ids.substring(0, seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.transaction.Id transactionId \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"                ParserUtil.parseTransactionId(ids.substring(seedu.address.model.member.Id.LENGTH));","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        EditTransactionDescriptor editTransactionDescriptor \u003d new EditTransactionDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_BILLING).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"            editTransactionDescriptor.setBilling(","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                    ParserUtil.parseBilling(argMultimap.getValue(PREFIX_BILLING).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        if (!editTransactionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(EditTransactionCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        Timestamp timestamp \u003d executionStatus \u003d\u003d ExecutionStatus.NORMAL","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                ? ParserUtil.parseTimestamp(DateTimeUtil.generateTimestamp())","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                : ParserUtil.parseTimestamp(DateTimeUtil.generateTimestampStub());","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        editTransactionDescriptor.setTimestamp(timestamp);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        return new EditTransactionCommand(memberId, transactionId, editTransactionDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"zzybluebell":7,"HolmesJJ":72}},{"path":"src/main/java/seedu/address/logic/parser/EzFoodieParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CommandUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.LoginCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.LogoutCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.RedeemCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SetAccountCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.SummaryCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"public class EzFoodieParser {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    private final Model model;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code EzFoodieParser} with the given {@code Model}.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodieParser(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        this.executionStatus \u003d ExecutionStatus.NORMAL;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code EzFoodieParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodieParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     * @param userInput full user input string.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * @return the command based on the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @throws PermissionException if the user does not have insufficient permission.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public Command parseCommand(String userInput) throws ParseException, PermissionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        CommandUtil.addCommand(userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"            return new AddCommandPrefixParser(model, executionStatus).parse(arguments).parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"            return new EditCommandPrefixParser(executionStatus).parse(arguments).parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"        case RedeemCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"            return new RedeemCommandParser(model, executionStatus).parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"                return new DeleteCommandPrefixParser().parse(arguments).parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"            throw new PermissionException(Messages.MESSAGE_PERMISSION_DENIED);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"            if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"            throw new PermissionException(Messages.MESSAGE_PERMISSION_DENIED);","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"            if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"                return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"            throw new PermissionException(Messages.MESSAGE_PERMISSION_DENIED);","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        case LoginCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"            return new LoginCommandParser().parse(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        case LogoutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            return new LogoutCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        case SetAccountCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"            if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                return new SetAccountCommandParser().parse(arguments);","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"            throw new PermissionException(Messages.MESSAGE_PERMISSION_DENIED);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":136,"author":{"gitId":"Morrow1ndy"},"content":"        case SummaryCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"            if (LoginStatus.getLoginStatus() \u003d\u003d LoginStatus.MANAGER) {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Morrow1ndy"},"content":"                return new SummaryCommand();","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"            throw new PermissionException(Messages.MESSAGE_PERMISSION_DENIED);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Morrow1ndy":9,"zzybluebell":8,"-":62,"HolmesJJ":68}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.RegistrationDateContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PREFIX_SIZE \u003d 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related find command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return FindCommand the class for process input find command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_ID, PREFIX_NAME,","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getSize() !\u003d PREFIX_SIZE || argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_ID).get().trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            String[] idKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            return new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_PHONE).get().trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"            String[] phoneKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            return new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_EMAIL).get().trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"            String[] emailKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"            return new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(emailKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_DATE).get().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"            String[] registrationDateKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"            return new FindCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                    new RegistrationDateContainsKeywordsPredicate(Arrays.asList(registrationDateKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"zzybluebell":5,"-":35,"HolmesJJ":63}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new ListCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PREFIX_SIZE \u003d 2;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related list command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @return ListCommand the class for process input list command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getSize() !\u003d PREFIX_SIZE || argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            return new ListCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":33}},{"path":"src/main/java/seedu/address/logic/parser/LoginCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.LoginCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new LoginCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class LoginCommandParser implements Parser\u003cLoginCommand\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the LoginCommand","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * and returns a LoginCommand object for execution.","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related login command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * @return LoginCommand the class for process login command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public LoginCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            Password password \u003d ParserUtil.parsePassword(args);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            return new LoginCommand(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, LoginCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":27}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"zzybluebell":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.EncryptUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public static seedu.address.model.member.Id parseMemberId(String id) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        if (!seedu.address.model.member.Id.isValidId(trimmedId)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(seedu.address.model.member.Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return new seedu.address.model.member.Id(trimmedId);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String timestamp} into an {@code Timestamp}.","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"    public static Timestamp parseTimestamp(String timestamp) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedTimestamp \u003d timestamp.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        if (!Timestamp.isValidTimestamp(trimmedTimestamp)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"Morrow1ndy"},"content":"            throw new ParseException(Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        return new Timestamp(trimmedTimestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    public static seedu.address.model.transaction.Id parseTransactionId(String id) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        if (!seedu.address.model.transaction.Id.isValidId(trimmedId)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(seedu.address.model.transaction.Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        return new seedu.address.model.transaction.Id(trimmedId);","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"stephanie-csy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"stephanie-csy"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"stephanie-csy"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    public static seedu.address.model.reservation.Id parseReservationId(String id) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"stephanie-csy"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        if (!seedu.address.model.reservation.Id.isValidId(trimmedId)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(seedu.address.model.reservation.Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        return new seedu.address.model.reservation.Id(trimmedId);","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String billing} into a {@code Billing}.","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code billing} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"    public static Billing parseBilling(String billing) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedBilling \u003d billing.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        if (!Billing.isValidBilling(trimmedBilling)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(Billing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"        trimmedBilling \u003d BigDecimal.valueOf(Double.parseDouble(trimmedBilling)).stripTrailingZeros()","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"                .setScale(2, RoundingMode.HALF_EVEN).toPlainString();","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        return new Billing(trimmedBilling);","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String dateTime} into a {@code DateTime}.","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":200,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"stephanie-csy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"stephanie-csy"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"zzybluebell"},"content":"     * Parses a {@code String points} into a {@code Points}.","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"zzybluebell"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the given {@code transaction} is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"zzybluebell"},"content":"    public static Point parsePoint(String point) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(point);","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"zzybluebell"},"content":"        String trimmedPoint \u003d point.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"zzybluebell"},"content":"        if (!Point.isValidPoint(trimmedPoint)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"zzybluebell"},"content":"            throw new ParseException(Point.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"zzybluebell"},"content":"        return new Point(trimmedPoint);","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"zzybluebell"},"content":"     * Parses {@code Collection\u003cString\u003e transactions} into a {@code Set\u003cTransaction\u003e}.","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"zzybluebell"},"content":"    public static List\u003cPoint\u003e parsePoints(Collection\u003cString\u003e points)","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"zzybluebell"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(points);","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"zzybluebell"},"content":"        final List\u003cPoint\u003e pointsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"zzybluebell"},"content":"        for (String pointAmount : points) {","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"zzybluebell"},"content":"            pointsList.add(parsePoint(pointAmount));","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"zzybluebell"},"content":"        return pointsList;","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"HolmesJJ"},"content":"     * Parses {@code password} into a {@code Password} and returns it.","lastModifiedDate":"2021-10-15"},{"lineNumber":276,"author":{"gitId":"HolmesJJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-15"},{"lineNumber":277,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":278,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the given {@code password} is invalid.","lastModifiedDate":"2021-10-15"},{"lineNumber":279,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":280,"author":{"gitId":"HolmesJJ"},"content":"    public static Password parsePassword(String password) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":281,"author":{"gitId":"HolmesJJ"},"content":"        String trimmedPassword \u003d password.trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":282,"author":{"gitId":"HolmesJJ"},"content":"        String hashedTrimmedPassword;","lastModifiedDate":"2021-10-15"},{"lineNumber":283,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":284,"author":{"gitId":"HolmesJJ"},"content":"            hashedTrimmedPassword \u003d EncryptUtil.hash(trimmedPassword);","lastModifiedDate":"2021-10-15"},{"lineNumber":285,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NoSuchAlgorithmException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":286,"author":{"gitId":"HolmesJJ"},"content":"            hashedTrimmedPassword \u003d \"\";","lastModifiedDate":"2021-10-15"},{"lineNumber":287,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":288,"author":{"gitId":"HolmesJJ"},"content":"        if (!Password.isValidPassword(hashedTrimmedPassword)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":289,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(Password.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":291,"author":{"gitId":"HolmesJJ"},"content":"        return new Password(hashedTrimmedPassword);","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Morrow1ndy":3,"stephanie-csy":16,"zzybluebell":32,"mukundrs":1,"-":130,"HolmesJJ":111}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":" * E.g. \u0027-t\u0027 in \u0027add James -t friend\u0027.","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Prefix} with the given {@code String}.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Gets prefix of command.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Overrides equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"zzybluebell":13,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/RedeemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REDEEM;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.RedeemCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new RedeemPoint object.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"public class RedeemCommandParser implements Parser\u003cRedeemCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"    private final Model model;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"    private final ExecutionStatus executionStatus;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code RedeemCommandParser} with the given {@code Model} and {@code ExecutionStatus}.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    public RedeemCommandParser(Model model, ExecutionStatus executionStatus) {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"        this.executionStatus \u003d executionStatus;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Parses the given {@code String} of arguments in the context of the RedeemCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * and returns an RedeemCommand object for execution.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related redeem point command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * @return RedeemCommand the class for process input redeem point command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    public RedeemCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REDEEM, PREFIX_ID, PREFIX_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"        if ((argMultimap.getValue(PREFIX_ID).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_INDEX).isEmpty())","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"                || (argMultimap.getValue(PREFIX_ID).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_INDEX).isPresent())","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedeemCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"            List\u003cPoint\u003e pointToRedeemList \u003d ParserUtil.parsePoints(argMultimap.getAllValues(PREFIX_REDEEM));","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"            Id id \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"            return new RedeemCommand(pointToRedeemList, id);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"        } else if (argMultimap.getValue(PREFIX_INDEX).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"            List\u003cPoint\u003e pointToRedeemList \u003d ParserUtil.parsePoints(argMultimap.getAllValues(PREFIX_REDEEM));","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"            return new RedeemCommand(pointToRedeemList, index);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedeemCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"stephanie-csy":1,"zzybluebell":66}},{"path":"src/main/java/seedu/address/logic/parser/SetAccountCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASS;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SetAccountCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SetAccountCommand.EditAccountDescriptor;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new EditAccountCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class SetAccountCommandParser implements Parser\u003cSetAccountCommand\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAccountCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * and returns an EditAccountCommand object for execution.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public SetAccountCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PASS);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_PASS).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetAccountCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        EditAccountDescriptor editAccountDescriptor \u003d new EditAccountDescriptor();","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        editAccountDescriptor.setPassword(ParserUtil.parsePassword(argMultimap.getValue(PREFIX_PASS).get()));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        return new SetAccountCommand(editAccountDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"zzybluebell":3,"HolmesJJ":33}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASC;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":" * Parses input arguments and creates a new SortCommand object.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PREFIX_SIZE \u003d 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related sort command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * @return SortCommand the class for process input sort command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_CREDIT, PREFIX_ASC,","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"                PREFIX_DESC);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getSize() !\u003d PREFIX_SIZE || argMultimap.getValue(PREFIX_MEMBER).isEmpty()","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                || argMultimap.getValue(PREFIX_CREDIT).isEmpty()","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"                || (argMultimap.getValue(PREFIX_ASC).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_DESC).isEmpty())","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_ASC).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            return new SortCommand(new CreditSortComparator(SortStatus.ASC));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        if (argMultimap.getValue(PREFIX_DESC).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            return new SortCommand(new CreditSortComparator(SortStatus.DESC));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zzybluebell":5,"HolmesJJ":49}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"public class ViewCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @param args the input arguments related view command to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @return ViewCommand the class for process view command string.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEMBER, PREFIX_ID)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d ParserUtil.parseMemberId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        String[] idKeywords \u003d new String[]{id.value};","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"        return new ViewCommand(new IdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":36,"zzybluebell":3,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"     * Parses the exception with string message {@code message}.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     * Parses the exception with string message {@codec message}","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * amd throwable cause {@code cause}.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * @param message the related error message.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * @param cause of the main exception.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"zzybluebell":10,"-":16}},{"path":"src/main/java/seedu/address/model/Account.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents an Account.","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class Account implements ReadOnlyAccount {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    // Data fields","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private Password password;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code Account} with default values.","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public Account() {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        password \u003d SampleDataUtil.getDefaultPassword().getPassword();","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code Account} with the data in {@code account}.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public Account(ReadOnlyAccount account) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        this();","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        resetData(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public Account(Password password) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        this.password \u003d password;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Resets the existing data of this {@code Account} with {@code newAccount}.","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    public void resetData(ReadOnlyAccount newAccount) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(newAccount);","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        setPassword(newAccount.getPassword());","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * Sets the Password by giving {@code password}.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public void setPassword(Password password) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        this.password \u003d password;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * Gets the password.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     * @return Password of the account.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public Password getPassword() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        return password;","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both accounts have the same password.","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two accounts.","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSamePassword(Account otherAccount) {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        if (otherAccount \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        return otherAccount !\u003d null","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherAccount.getPassword().equals(getPassword());","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both accounts have the same data fields.","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a stronger notion of equality between two accounts.","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof Account)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        Account otherAccount \u003d (Account) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        return otherAccount.getPassword().equals(getPassword());","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashcode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Use this method for custom fields hashing instead of implementing your own.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.hash(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * @return String with password value.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        builder.append(\"Password: \").append(getPassword());","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":17,"HolmesJJ":102}},{"path":"src/main/java/seedu/address/model/EzFoodie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.UniqueMemberList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":" * Wraps all data at the ezFoodie level.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":" * Duplicates are not allowed (by .isSameMember comparison).","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class EzFoodie implements ReadOnlyEzFoodie {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final UniqueMemberList members;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        members \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code EzFoodie} without input value.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodie() {}","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Constructs an {@code ezFoodie} using the Members in the {@code toBeCopied}.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @param toBeCopied the data is going to creates ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodie(ReadOnlyEzFoodie toBeCopied) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces the contents of the member list with {@code members}.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        this.members.setMembers(members);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * Resets the existing data of this {@code EzFoodie} with {@code newData}.","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public void resetData(ReadOnlyEzFoodie newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        setMembers(newData.getMemberList());","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    //// member-level operations","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        return members.contains(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the filtered ezFoodie.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     * {@code predicate} is the filter condition for the filtered ezFoodie.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    public boolean hasMember(Member member, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        return members.contains(member, predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"     * Adds a member to the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"     * The member must not already exist in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    public void addMember(Member p) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        members.add(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces the given member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"     * {@code target} must exist in the ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        members.setMember(target, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"     * Removes {@code key} from this {@code EzFoodie}.","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"     * {@code key} must exist in the ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public void removeMember(Member key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        members.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        return members.asUnmodifiableObservableList().size() + \" members\";","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     * Overrides and gets member list.","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"     * @return ObservableList a series list data of members.","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"    public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        return members.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof EzFoodie // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 members.equals(((EzFoodie) other).members));","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        return members.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":22,"-":77,"HolmesJJ":49}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    Predicate\u003cMember\u003e PREDICATE_SHOW_ALL_MEMBERS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * {@code Comparator} sort members by id asc.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    Comparator\u003cMember\u003e COMPARATOR_SORT_MEMBERS_BY_ID_ASC \u003d Comparator.comparingLong(m -\u003e m.getId().getLongValue());","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the user prefs\u0027 account path.","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    Path getAccountFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the user prefs\u0027 account path.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    void setAccountFilePath(Path accountFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the user prefs\u0027 ezFoodie file path.","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    Path getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the user prefs\u0027 ezFoodie file path.","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    void setEzFoodieFilePath(Path ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces account with the data in {@code account}.","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    void setAccount(ReadOnlyAccount account);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     * Returns the account.","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    ReadOnlyAccount getAccount();","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces ezFoodie data with the data in {@code ezFoodie}.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    void setEzFoodie(ReadOnlyEzFoodie ezFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * Returns the EzFoodie.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    ReadOnlyEzFoodie getEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    boolean hasMember(Member member);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the filtered ezFoodie.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"     * {@code predicate} is the filter condition for the filtered ezFoodie.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    boolean hasMember(Member member, Predicate\u003cMember\u003e predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"     * Deletes the given member.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"     * The member must exist in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    void deleteMember(Member target);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"     * Adds the given member.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"     * {@code member} must not already exist in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    void addMember(Member member);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces the given member {@code target} with {@code editedMember}.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"     * {@code target} must exist in the ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    void setMember(Member target, Member editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"zzybluebell"},"content":"     * Returns an unmodifiable view of the sorted or filtered member list.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"    ObservableList\u003cMember\u003e getUpdatedMemberList();","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns an unmodifiable view of the sorted or filtered member list","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     * for viewCommand to use only.","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"Morrow1ndy"},"content":"    ObservableList\u003cMember\u003e getUpdatedMemberListForView();","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    void updateFilteredMemberList(Predicate\u003cMember\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"Morrow1ndy"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"Morrow1ndy"},"content":"     * for viewCommand to use only.","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"Morrow1ndy"},"content":"    void updateFilteredMemberListForView(Predicate\u003cMember\u003e predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"     * Updates the sort of the sorted member list to sort by the given {@code comparator}.","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"    void updateSortedMemberList(Comparator\u003cMember\u003e comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Morrow1ndy":18,"zzybluebell":6,"-":73,"HolmesJJ":50}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * Represents the in-memory model of the ezFoodie data.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private final Account account;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    private final EzFoodie ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    private final FilteredList\u003cMember\u003e filteredMembersForView;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private final SortedList\u003cMember\u003e sortedMembers;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * Initializes a ModelManager with the given account, ezFoodie and userPrefs.","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code ModelManager} with input variables {@code ReadOnlyAccount},","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * {@code ReadOnlyEzFoodie} and {@code ReadOnlyUserPrefs}.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public ModelManager(ReadOnlyAccount account, ReadOnlyEzFoodie ezFoodie, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(account, ezFoodie, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        logger.fine(\"Initializing with account: \" + account + \", + ezFoodie: \" + ezFoodie","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        this.account \u003d new Account(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        this.ezFoodie \u003d new EzFoodie(ezFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        filteredMembers \u003d new FilteredList\u003c\u003e(this.ezFoodie.getMemberList());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"        filteredMembersForView \u003d new FilteredList\u003c\u003e(this.ezFoodie.getMemberList());","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        sortedMembers \u003d new SortedList\u003c\u003e(filteredMembers); // Wrap the FilteredList in a SortedList","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        sortedMembers.setComparator(COMPARATOR_SORT_MEMBERS_BY_ID_ASC);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code ModelManager} without any input.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        this(new Account(), new EzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     * Returns the user prefs\u0027 account path.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    public Path getAccountFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        return userPrefs.getAccountFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * Sets the user prefs\u0027 account path.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    public void setAccountFilePath(Path accountFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(accountFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        userPrefs.setAccountFilePath(accountFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"     * Returns the user prefs\u0027 ezFoodie file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"    public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        return userPrefs.getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"     * Sets the user prefs\u0027 ezFoodie file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodieFilePath(Path ezFoodieFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        userPrefs.setEzFoodieFilePath(ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Account \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"     * Replaces account with the data in {@code account}.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"    public void setAccount(ReadOnlyAccount account) {","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        this.account.resetData(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"     * Returns the Account.","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    public ReadOnlyAccount getAccount() {","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        return account;","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EzFoodie \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"zzybluebell"},"content":"     * Replaces ezFoodie data with the data in {@code ezFoodie}.","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodie(ReadOnlyEzFoodie ezFoodie) {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        this.ezFoodie.resetData(ezFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"zzybluebell"},"content":"     * Returns the EzFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"    public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie.hasMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the filtered ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"zzybluebell"},"content":"     * {@code predicate} is the filter condition for the filtered ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"    public boolean hasMember(Member member, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie.hasMember(member, predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"zzybluebell"},"content":"     * Deletes the given member.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"zzybluebell"},"content":"     * The member must exist in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"    public void deleteMember(Member target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.removeMember(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"zzybluebell"},"content":"     * Adds the given member.","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"zzybluebell"},"content":"     * {@code member} must not already exist in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.addMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"zzybluebell"},"content":"     * Replaces the given member {@code target} with {@code editedMember}.","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"zzybluebell"},"content":"     * {@code target} must exist in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"zzybluebell"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the ezFoodie.","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.setMember(target, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Updated Member List for display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an unmodifiable view of the list of {@code Member} backed by the internal list of","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"zzybluebell"},"content":"     * {@code versionedEzFoodie}.","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"    public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"        return sortedMembers;","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":227,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns an unmodifiable view of the list of {@code Member} backed by the internal list of","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"zzybluebell"},"content":"     * {@code versionedEzFoodie} for viewCommand to use only.","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"Morrow1ndy"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"Morrow1ndy"},"content":"    public ObservableList\u003cMember\u003e getUpdatedMemberListForView() {","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"Morrow1ndy"},"content":"        return filteredMembersForView;","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"HolmesJJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Member List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"zzybluebell"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"zzybluebell"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"    public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"        filteredMembers.setPredicate(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":249,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"zzybluebell"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"zzybluebell"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"Morrow1ndy"},"content":"    public void updateFilteredMemberListForView(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"Morrow1ndy"},"content":"        filteredMembersForView.setPredicate(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"HolmesJJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Member List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"zzybluebell"},"content":"     * Updates the sort of the sorted member list to sort by the given {@code comparator}.","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"zzybluebell"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"HolmesJJ"},"content":"    public void updateSortedMemberList(Comparator\u003cMember\u003e comparator) {","lastModifiedDate":"2021-10-17"},{"lineNumber":269,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"HolmesJJ"},"content":"        sortedMembers.setComparator(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"zzybluebell"},"content":"     * Override the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":275,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie.equals(other.ezFoodie)","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":292,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 filteredMembers.equals(other.filteredMembers)","lastModifiedDate":"2021-10-17"},{"lineNumber":293,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 sortedMembers.equals(other.sortedMembers);","lastModifiedDate":"2021-10-17"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Morrow1ndy":11,"zzybluebell":79,"-":124,"HolmesJJ":82}},{"path":"src/main/java/seedu/address/model/ReadOnlyAccount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":" * Unmodifiable view of an account.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"public interface ReadOnlyAccount {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    Password getPassword();","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":1,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyEzFoodie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" * Unmodifiable view of an ezFoodie.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public interface ReadOnlyEzFoodie {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an unmodifiable view of the members list.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * This list will not contain any duplicate members.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    ObservableList\u003cMember\u003e getMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":1,"-":11,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    Path getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/model/Timestamp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a timestamp in the ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimestamp(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"public class Timestamp {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for timestamp message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"            \"Timestamps should only contain digits and can be parsed to long, and it should not be blank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex of timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the timestamp value.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Timestamp} with input {@code timestamp}.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public Timestamp(String timestamp) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidTimestamp(timestamp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is valid timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * @param test input string test.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean true if a given string is a valid timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidTimestamp(String test) {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            Long.parseLong(test);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     * Returns long value of timestamp.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    public Long getLongValue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        return Long.parseLong(value);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @return String of the timestamp value.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"                || (other instanceof Timestamp // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"                \u0026\u0026 value.equals(((Timestamp) other).value)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Morrow1ndy":3,"zzybluebell":27,"HolmesJJ":57}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private Path accountFilePath \u003d Paths.get(\"data\" , \"account.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private Path ezFoodieFilePath \u003d Paths.get(\"data\" , \"ezfoodie.json\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code UserPrefs} with default values.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        setEzFoodieFilePath(newUserPrefs.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Gets Gui Settings.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * Sets the Gui Settings by this input {@code guiSettings}.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Gets account file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * @return Path of account file.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public Path getAccountFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return accountFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * Sets the account file path by this input {@code accountFilePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public void setAccountFilePath(Path accountFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(accountFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        this.accountFilePath \u003d accountFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Gets EzFoodie file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @return Path of EzFoodie file.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodieFilePath;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * Sets the EzFoodie file path by this input {@code ezFoodieFilePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodieFilePath(Path ezFoodieFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        this.ezFoodieFilePath \u003d ezFoodieFilePath;","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 accountFilePath.equals(o.accountFilePath)","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 ezFoodieFilePath.equals(o.ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.hash(guiSettings, accountFilePath, ezFoodieFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"     * @return String with gui Setting and file path and location.","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(\"\\nLocal account file location : \" + accountFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(\"\\nLocal data file location : \" + ezFoodieFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":35,"-":75,"HolmesJJ":22}},{"path":"src/main/java/seedu/address/model/account/Password.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.account;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a password for manager to login.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPassword(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Password {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for default password.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_PLAINTEXT_PASSWORD \u003d \"123456\";","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     * Stands for password message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"            \"Passwords should only contain 32 alphanumeric characters or empty, and it should not be blank\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}]*\";","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Stands for password length.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 32;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Password}.","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @param password a valid password.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public Password(String password) {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidPassword(password), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d password;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a given string is a valid password.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidPassword(String test) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        return test.isEmpty() || (test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003d\u003d LENGTH);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Overrides equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Password // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Password) other).value)); // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     * Overrides hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":27,"HolmesJJ":50}},{"path":"src/main/java/seedu/address/model/member/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s address in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for address message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the first character of the address must not be a whitespace,","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * @param address a valid address.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @return String the value of valid address.","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":18,"-":51,"HolmesJJ":2}},{"path":"src/main/java/seedu/address/model/member/Credit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s id in the ezFoodie.","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCredit(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Credit {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the max credit number.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final int MAX \u003d 99999999;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for credits message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Credits should only contain no more than 8 digits and it should not be blank, and max credit is \" + MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the length of credit.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 8; // Max credit is 99999999","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the credit value.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Credit}.","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @param credit a valid credit.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public Credit(String credit) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(credit);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidCredit(credit), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a given string is a valid credit.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidCredit(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Integer.parseInt(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * Gets int value of credit.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public int getIntValue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     * Gets String value of credit for Point use.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * @return String of credit value.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"    public String getStringValue() {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"        return value;","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Credit // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Credit) other).value)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"zzybluebell":45,"HolmesJJ":63}},{"path":"src/main/java/seedu/address/model/member/CreditSortComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Compares that the credits between 2 members.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class CreditSortComparator implements Comparator\u003cMember\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final SortStatus sortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code CreditSortComparator} with input {@code SortStatus}.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public CreditSortComparator(SortStatus sortStatus) {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        this.sortStatus \u003d sortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Gets sort status.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @return SortStatus the status of sorting whether ASC or DESC.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public SortStatus getSortStatus() {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        return sortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the compare method.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public int compare(Member m1, Member m2) {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        if (sortStatus \u003d\u003d SortStatus.DESC) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            return Integer.compare(m2.getCredit().getIntValue(), m1.getCredit().getIntValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            return Integer.compare(m1.getCredit().getIntValue(), m2.getCredit().getIntValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof CreditSortComparator // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 sortStatus.equals(((CreditSortComparator) other).sortStatus)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zzybluebell":14,"HolmesJJ":38}},{"path":"src/main/java/seedu/address/model/member/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s email in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints for email.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex should includes @ in between.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Stands for email string.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @param email a valid email address.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * @return String of the valid email.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":24,"-":67,"HolmesJJ":2}},{"path":"src/main/java/seedu/address/model/member/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Tests that a {@code Member}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code EmailContainsKeywordsPredicate} with input {@code keywords}.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the test method.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getEmail().value, keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":10,"HolmesJJ":31}},{"path":"src/main/java/seedu/address/model/member/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s id in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Id {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the max Id number.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final int MAX \u003d 99999;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for Id message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Member IDs should only contain 5 digits and it should not be blank, and max ID is \" + MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex of Id.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for pattern of Id.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final String PATTERN \u003d \"%05d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for length of Id is five.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 5; // Max ID is 99999","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Stands Id value.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @param id a valid id.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public Id(String id) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d String.format(PATTERN, Long.parseLong(id));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Long.parseLong(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"     * Returns long value of id.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    public Long getLongValue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        return Long.parseLong(value);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * @return String of valid Id value.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zzybluebell":39,"HolmesJJ":67}},{"path":"src/main/java/seedu/address/model/member/IdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Tests that a {@code Member}\u0027s {@code Id} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class IdContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code IdContainsKeywordsPredicate} with input {@code keywords}.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public IdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the test method.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getId().value, keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof IdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 keywords.equals(((IdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":10,"HolmesJJ":31}},{"path":"src/main/java/seedu/address/model/member/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"public class Member {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private final Id id;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    private final Timestamp timestamp;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    private final Credit credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    private final Point point;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"    private final List\u003cReservation\u003e reservations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code Member} with follow parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * @param id the member id","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * @param name the member name","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @param phone the member phone","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * @param email the member email","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * @param address the member address","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * @param timestamp the member timestamp","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @param credit the member credits","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @param point the member point","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * @param transactions the member transactions","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * @param reservations the member reservations","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * @param tags the member tag","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public Member(Id id, Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"                  Timestamp timestamp, Credit credit, Point point, List\u003cTransaction\u003e transactions,","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"stephanie-csy"},"content":"                  List\u003cReservation\u003e reservations, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"        requireAllNonNull(id, name, phone, email, address, timestamp, credit, point, transactions, reservations, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"        this.point \u003d point;","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"stephanie-csy"},"content":"        this.transactions.addAll(transactions);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"mukundrs"},"content":"        this.reservations.addAll(reservations);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * Gets Id.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * @return Id the valid member id.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    public Id getId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        return id;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * Gets name.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     * @return Name the valid member name.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * Gets phone.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * @return Phone the valid member phone.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Gets email.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * @return Email the valid member email.","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"     * Gets address.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"     * @return Address the valid member address.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"     * Gets timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     * @return Timestamp the valid member timestamp.","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"    public Timestamp getTimestamp() {","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"Morrow1ndy"},"content":"        return timestamp;","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"     * Gets credit.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"     * @return Credit the valid member credit.","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"    public Credit getCredit() {","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"        return credit;","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"     * Gets point.","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"     * @return Point the valid member point.","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"    public Point getPoint() {","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"        return this.point;","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"zzybluebell"},"content":"     * @return Set a series of tags.","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"stephanie-csy"},"content":"     * Returns an immutable transaction set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"stephanie-csy"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"    public List\u003cTransaction\u003e getTransactions() {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        return Collections.unmodifiableList(transactions);","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an immutable transaction list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"stephanie-csy"},"content":"    public List\u003cReservation\u003e getReservations() {","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"stephanie-csy"},"content":"        return Collections.unmodifiableList(reservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both members have the same id, phone or email.","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameMember(Member otherMember) {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"        return otherMember !\u003d null","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 (isSameId(otherMember) || isSameEmail(otherMember) || isSamePhone(otherMember));","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both members have the same id.","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameId(Member otherMember) {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"        return otherMember !\u003d null","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getId().equals(getId());","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both members have the same phone.","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSamePhone(Member otherMember) {","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        return otherMember !\u003d null","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getPhone().equals(getPhone());","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both members have the same email.","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameEmail(Member otherMember) {","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"        return otherMember !\u003d null","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getEmail().equals(getEmail());","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both members have the same identity and data fields.","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a stronger notion of equality between two members.","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof Member)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"HolmesJJ"},"content":"        Member otherMember \u003d (Member) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"HolmesJJ"},"content":"        return otherMember.getId().equals(getId())","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getName().equals(getName())","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getTimestamp().equals(getTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getCredit().equals(getCredit())","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"zzybluebell"},"content":"                \u0026\u0026 otherMember.getPoint().equals(getPoint())","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"mukundrs"},"content":"                \u0026\u0026 otherMember.getTransactions().equals(getTransactions())","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getReservations().equals(getReservations())","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherMember.getTags().equals(getTags());","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":252,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":254,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":258,"author":{"gitId":"zzybluebell"},"content":"        return Objects.hash(id, name, phone, email, address, timestamp, credit, point,","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"zzybluebell"},"content":"                transactions, reservations, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":262,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":264,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"zzybluebell"},"content":"     * @return String of including all id, name, phone, email, address","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"zzybluebell"},"content":"     * timestamp, credit, point, tag, transaction and reservation.","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"HolmesJJ"},"content":"        builder.append(\"Id: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"HolmesJJ"},"content":"                .append(getId())","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"HolmesJJ"},"content":"                .append(getName())","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":280,"author":{"gitId":"HolmesJJ"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Timestamp: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"HolmesJJ"},"content":"                .append(getTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Credit: \")","lastModifiedDate":"2021-10-16"},{"lineNumber":284,"author":{"gitId":"zzybluebell"},"content":"                .append(getCredit())","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"zzybluebell"},"content":"                .append(\"; Point: \")","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"zzybluebell"},"content":"                .append(getPoint());","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":293,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e transactions \u003d getTransactions();","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"stephanie-csy"},"content":"        if (!transactions.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"stephanie-csy"},"content":"            builder.append(\"; Transactions: \");","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"stephanie-csy"},"content":"            transactions.forEach(builder::append);","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":300,"author":{"gitId":"stephanie-csy"},"content":"        List\u003cReservation\u003e reservations \u003d getReservations();","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"mukundrs"},"content":"        if (!reservations.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"mukundrs"},"content":"            builder.append(\"; Reservations: \");","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"mukundrs"},"content":"            reservations.forEach(builder::append);","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Morrow1ndy":7,"stephanie-csy":18,"zzybluebell":82,"mukundrs":8,"-":98,"HolmesJJ":95}},{"path":"src/main/java/seedu/address/model/member/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s name in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints of name.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the first character of the name must not be a whitespace,","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Stands for full name value.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * @param name a valid name.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @return String of a valid name.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Overrides equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     * Overrides hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":21,"-":52,"HolmesJJ":2}},{"path":"src/main/java/seedu/address/model/member/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Tests that a {@code Member}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code NameContainsKeywordsPredicate} with input {@code List\u003cString\u003e}.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the test method.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getName().fullName, keyword));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zzybluebell":10,"-":26,"HolmesJJ":5}},{"path":"src/main/java/seedu/address/model/member/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Member\u0027s phone number in the ezFoodie.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"            \"Phone numbers should only contain 8 digits, and it should start with 3, 6, 8 or 9\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[3689]\\\\d{7}\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * @param phone a valid phone number","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @return String of the valid phone value","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * Overrides equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Overrides hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":12,"-":48,"HolmesJJ":4}},{"path":"src/main/java/seedu/address/model/member/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Tests that a {@code Member}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code PhoneContainsKeywordsPredicate} with input {@code keywords}.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the test method.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getPhone().value, keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":10,"HolmesJJ":31}},{"path":"src/main/java/seedu/address/model/member/Point.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzybluebell"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"zzybluebell"},"content":" * Represents a Point in the ezFoodie which should be equivalent to credit,","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * and it can be redeem from a redemption process.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"public class Point {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for point max value.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"    public static final int MAX \u003d 99999999;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints for point.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Points should only contain no more than 8 digits and it should not be blank, and max point is \" + MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for point max length.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"    public static final int LENGTH \u003d 8; // Max point is 99999999","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for point value.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"    public final String value;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Point}.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @param point a valid point.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"    public Point(String point) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"        requireNonNull(point);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"        checkArgument(isValidPoint(point), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"        value \u003d point;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a given string is a valid point.","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    public static boolean isValidPoint(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Integer.parseInt(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * Gets int value of point.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"     * @return int the value converts from string to int type.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"zzybluebell"},"content":"    public int getIntValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     * @return String of point value.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"        return value;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     * Returns double value of transaction amount.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"     * @return double the value converts from string to double type.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"    public double getDoubleValue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"                || (other instanceof Point // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"                \u0026\u0026 value.equals(((Point) other).value)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     * Overrides hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"zzybluebell"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"zzybluebell"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"zzybluebell"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"zzybluebell":102,"HolmesJJ":9}},{"path":"src/main/java/seedu/address/model/member/RegistrationDateContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Tests that a {@code Member}\u0027s {@code Timestamp} within the given registration dates.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class RegistrationDateContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public static final DateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code RegistrationDateContainsKeywordsPredicate} with input {@code List\u003cString\u003e}.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @param keywords a list of string keywords.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public RegistrationDateContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the test method.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * Evaluates this predicate on the given argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        return keywords.stream().anyMatch(keyword -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            try {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                return DateTimeUtil.isDateContainsTimestamp(","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                        DATE_FORMAT.parse(keyword), Long.parseLong(member.getTimestamp().value));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof RegistrationDateContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 keywords.equals(((RegistrationDateContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"zzybluebell":12,"HolmesJJ":43}},{"path":"src/main/java/seedu/address/model/member/Tier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"zzybluebell"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"zzybluebell"},"content":" * Represents a Tier in the ezFoodie.","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public enum Tier {","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    BRONZE(\"Bronze\", 0),","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    SILVER(\"Silver\", 100),","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    GOLD(\"Gold\", 500),","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    PLATINUM(\"Platinum\", 1000);","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final String key;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private final Integer value;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Tier} with input {@code key} and {@code  value}.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * @param key the different tiers for Platinum, Gold, Silver or Bronze.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * @param value the value of tier.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"    Tier(String key, Integer value) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Returns key of tier.","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public String getKey() {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        return key;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns all possible key of tier.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"    public static String[] getAllKeys() {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"        return new String[]{BRONZE.key, SILVER.key, GOLD.key, PLATINUM.key};","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     * Returns value of tier.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    public int getValue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        return this.value;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public static String getTierByCredit(int credit) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        if (credit \u003e\u003d PLATINUM.getValue()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            return PLATINUM.key;","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        if (credit \u003e\u003d GOLD.getValue()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            return GOLD.key;","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        if (credit \u003e\u003d SILVER.getValue()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            return SILVER.key;","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        return BRONZE.key;","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Morrow1ndy":8,"zzybluebell":10,"HolmesJJ":42}},{"path":"src/main/java/seedu/address/model/member/UniqueMemberList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * A list of members that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * A member is considered unique by comparing using {@code Member#isSameMember(Member)}. As such, adding and updating of","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * members uses Member#isSameMember(Member) for equality so as to ensure that the member being added or updated is","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * unique in terms of identity in the UniqueMemberList. However, the removal of a member uses Member#equals(Object) so","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" * as to ensure that the member with exactly the same fields will be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":" * @see Member#isSameMember(Member)","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"public class UniqueMemberList implements Iterable\u003cMember\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    private final ObservableList\u003cMember\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private final ObservableList\u003cMember\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if the list contains an equivalent member as the given argument.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public boolean contains(Member toCheck) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if the filtered list contains an equivalent member as the given argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     * {@code predicate} is the filter condition for the filtered list.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    public boolean contains(Member toCheck, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        return internalList.stream().filter(predicate).anyMatch(toCheck::isSameMember);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * Adds a member to the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * The member must not already exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public void add(Member toAdd) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces the member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        if (!target.isSameMember(editedMember) \u0026\u0026 contains(editedMember)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        internalList.set(index, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"     * Removes the equivalent member from the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"     * The member must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    public void remove(Member toRemove) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * Sets Members by input {@code replacement}.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers(UniqueMemberList replacement) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"     * Replaces the contents of this list with {@code members}.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * @param members a list of members will be set.","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(members);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        if (!membersAreUnique(members)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        internalList.setAll(members);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"zzybluebell"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList\u003cMember\u003e}.","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"     * @return ObservableList a list of observations.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"    public ObservableList\u003cMember\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the Iterator method.","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"    public Iterator\u003cMember\u003e iterator() {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if {@code members} contains only unique members.","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"zzybluebell"},"content":"    private boolean membersAreUnique(List\u003cMember\u003e members) {","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"        for (int i \u003d 0; i \u003c members.size() - 1; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"            for (int j \u003d i + 1; j \u003c members.size(); j++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"                if (members.get(i).isSameMember(members.get(j))) {","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"                    return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"                }","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"        return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof UniqueMemberList // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"                        \u0026\u0026 internalList.equals(((UniqueMemberList) other).internalList));","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zzybluebell":30,"HolmesJJ":133}},{"path":"src/main/java/seedu/address/model/member/exceptions/DuplicateMemberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * Signals that the operation will result in duplicate Members (Members are considered duplicates if they have the same","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * identity).","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class DuplicateMemberException extends RuntimeException {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code DuplicateMemberException} without input.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    public DuplicateMemberException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"        super(\"Operation would result in duplicate members\");","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zzybluebell":3,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/model/member/exceptions/MemberNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * Signals that the operation is unable to find the specified member.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public class MemberNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"HolmesJJ":6}},{"path":"src/main/java/seedu/address/model/reservation/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Reservation\u0027s dateTime in the ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"public class DateTime {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints of reservation date time.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Reservations should be valid date time \" + DateTimeUtil.DATE_TIME_PATTERN;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * Stands for reservation value.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Reservation}.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * @param dateTime a valid date time.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d dateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a given string is a valid date time.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            DateTimeUtil.parseDateTime(test);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * Returns LocalDateTime value of date time.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public LocalDateTime getLocalDateTimeValue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        return DateTimeUtil.parseDateTime(value);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((DateTime) other).value)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":19,"HolmesJJ":64}},{"path":"src/main/java/seedu/address/model/reservation/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":" * Represents a Reservation\u0027s id in the ezFoodie.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable, is valid as declared in {@link #isValidId(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Id {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the max reservation id number.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final int MAX \u003d 999999;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints of reservation member id.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Reservation IDs should only contain 6 digits and it should not be blank, and max ID is \" + MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex of reservation id.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for reservation Id pattern.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"    public static final String PATTERN \u003d \"%06d\";","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for reservation id max length.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 6; // Max ID is 999999","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Stands for reservation id value.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"    public final String value;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @param id a valid id.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public Id(String id) {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d String.format(PATTERN, Long.parseLong(id));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is valid id.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @param test input string test.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean true if a given string is a valid id.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"stephanie-csy"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Long.parseLong(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     * Returns long value of id.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public Long getLongValue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        return Long.parseLong(value);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * @return String print reservation id value.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"stephanie-csy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"stephanie-csy"},"content":"        return value;","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"stephanie-csy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"stephanie-csy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"stephanie-csy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"stephanie-csy":43,"zzybluebell":43,"HolmesJJ":23}},{"path":"src/main/java/seedu/address/model/reservation/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Reservation\u0027s remark in the Reservation.","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Remark {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the first character of the address must not be a whitespace,","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Stands for reservation remark value.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * @param remark a valid remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is valid remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @param test the string input test.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean true if a given string is a valid remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * Gets double class from a string.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * @return double value of remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public double getDoubleValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * @return String reservation remark value。","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":25,"HolmesJJ":58}},{"path":"src/main/java/seedu/address/model/reservation/Reservation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Reservation in the member.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"public class Reservation {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"            \"The given reservation date time should be after current date time.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private final Id id;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Reservation},","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * and every field must be present and not null.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     * @param id member Id.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * @param dateTime Reservation date time.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     * @param remark reservation remark.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public Reservation(Id id, DateTime dateTime, Remark remark) {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"        requireAllNonNull(id, dateTime, remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Gets reservation id.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     * @return id the reservation member id.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    public Id getId() {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"        return id;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * Gets reservation\u0027s date time.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @return DateTime of reservation.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"mukundrs"},"content":"        return dateTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * Gets reservation\u0027s remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * @return Remark of reservation.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both reservations have the same id.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two reservations.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameId(Reservation otherReservation) {","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        if (otherReservation \u003d\u003d this) {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        return otherReservation !\u003d null","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherReservation.getId().equals(getId());","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both reservations have the same date.","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two reservations.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameDate(Reservation otherReservation) {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        if (otherReservation \u003d\u003d this) {","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        LocalDate otherDate \u003d DateTimeUtil.parseDateTime(otherReservation.getDateTime().value).toLocalDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        LocalDate date \u003d DateTimeUtil.parseDateTime(getDateTime().value).toLocalDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        return otherDate.isEqual(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if the reservation have the same date with the other date time.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameDate(LocalDateTime otherDateTime) {","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        LocalDate otherDate \u003d otherDateTime.toLocalDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        LocalDate date \u003d DateTimeUtil.parseDateTime(getDateTime().value).toLocalDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        return otherDate.isEqual(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a given date time is after current date time.","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidDateTime(DateTime dateTime) {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        LocalDateTime otherDateTime \u003d DateTimeUtil.parseDateTime(dateTime.value);","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        LocalDateTime nowDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        return otherDateTime.isAfter(nowDateTime);","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both reservations have the same date time and remark.","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a stronger notion of equality between two reservations.","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof Reservation)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        Reservation otherReservation \u003d (Reservation) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        return otherReservation.getId().equals(getId())","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherReservation.getDateTime().equals(getDateTime())","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherReservation.getRemark().equals(getRemark());","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method for custom fields hashing instead of implementing your own.","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"mukundrs"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"mukundrs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.hash(dateTime, remark);","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"     * @return String of reservation\u0027s information including Id, DateTime and remark.","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"mukundrs"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"stephanie-csy"},"content":"        builder.append(\"Id: \")","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"stephanie-csy"},"content":"                .append(getId())","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; DateTime: \")","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"                .append(getDateTime())","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"                .append(getRemark());","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"stephanie-csy":7,"zzybluebell":29,"mukundrs":24,"HolmesJJ":98}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Tag in the ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for tag message constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for tag validation regex.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * @param tagName a valid tag name.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method and format state as text for viewing.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzybluebell":16,"-":50,"HolmesJJ":1}},{"path":"src/main/java/seedu/address/model/transaction/Billing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Transaction\u0027s billing in the Transaction.","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBilling(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Billing {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the max transaction billing number.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final double MAX \u003d 9999.99;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints of transaction billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Billings should be non-negative numeric with 2 decimal places, and max amount is \" + MAX;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex of transaction billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d*\\\\.\\\\d{2}$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for transaction billing max amount length.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 7; // Max amount is 9999.99","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for transaction billing value.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Billing}.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @param billing a valid billing amount.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public Billing(String billing) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidBilling(billing), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is valid billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * @param test input string test.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     * @return boolean true if a given string is a valid billing amount.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidBilling(String test) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Double.parseDouble(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * Returns double value of billing amount.","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    public double getDoubleValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     * Overrides toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * @return transaction billing value.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Billing // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Billing) other).value)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":39,"HolmesJJ":65}},{"path":"src/main/java/seedu/address/model/transaction/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Transaction\u0027s id in the ezFoodie.","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Id {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"     * Stands for the max transaction max id number.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final int MAX \u003d 999999;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message constraints of transaction Id.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            \"Transaction IDs should only contain 6 digits and it should not be blank, and max ID is \" + MAX;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * Stands for trim leading zero regex.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRIM_LEADING_ZERO_REGEX \u003d \"^0+(?!$)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Stands for validation regex of transaction Id.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Digit}]*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Stands for transaction Id pattern.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final String PATTERN \u003d \"%06d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Stands for transaction Id max length.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static final int LENGTH \u003d 6; // Max ID is 999999","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Stands for transaction Id value.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public final String value;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @param id a valid id.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public Id(String id) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        value \u003d String.format(PATTERN, Long.parseLong(id));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        test \u003d test.replaceFirst(TRIM_LEADING_ZERO_REGEX, \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            return test.length() \u003c\u003d LENGTH \u0026\u0026 Long.parseLong(test) \u003c\u003d MAX \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"     * Returns long value of id.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    public Long getLongValue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        return Long.parseLong(value);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * @return transaction billing value.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":40,"HolmesJJ":66}},{"path":"src/main/java/seedu/address/model/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents a Transaction in the member.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":"public class Transaction {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private final Id id;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private final Timestamp timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final Billing billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code Transaction},","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * every field must be present and not null.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     * @param id member Id.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * @param timestamp transaction timestamp.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * @param billing billing details.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public Transaction(Id id, Timestamp timestamp, Billing billing) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        requireAllNonNull(id, timestamp, billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        this.billing \u003d billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Gets transaction id.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @return id the transaction member id.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public Id getId() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        return id;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     * Gets transaction timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * @return id the transaction timestamp.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public Timestamp getTimestamp() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        return timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * Gets transaction billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"     * @return id the transaction billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public Billing getBilling() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Returns whether is same id between other transactions.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a weaker notion of equality between two transactions.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isSameId(Transaction otherTransaction) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        if (otherTransaction \u003d\u003d this) {","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        return otherTransaction !\u003d null","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherTransaction.getId().equals(getId());","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if a given timestamp is within {@code numOfPastMonths}.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isWithinPastMonths(long timestamp, int numOfPastMonths) {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        Calendar currentCalendar \u003d Calendar.getInstance();","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        currentCalendar.setTimeInMillis(System.currentTimeMillis());","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        int currentYear \u003d currentCalendar.get(Calendar.YEAR);","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        int currentMonth \u003d currentCalendar.get(Calendar.MONTH);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        Calendar calendarToCheck \u003d Calendar.getInstance();","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        calendarToCheck.setTimeInMillis(timestamp);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        int yearToCheck \u003d calendarToCheck.get(Calendar.YEAR);","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        int monthToCheck \u003d calendarToCheck.get(Calendar.MONTH);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        int diffYears \u003d currentYear - yearToCheck;","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        int diffMonths \u003d diffYears * 12 + currentMonth - monthToCheck;","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        return diffMonths \u003c\u003d numOfPastMonths;","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the equals method.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if both transactions have the same timestamp and billing.","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     * This defines a stronger notion of equality between two transactions.","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof Transaction)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        Transaction otherTransaction \u003d (Transaction) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        return otherTransaction.getId().equals(getId())","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherTransaction.getTimestamp().equals(getTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 otherTransaction.getBilling().equals(getBilling());","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the hashCode method.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"stephanie-csy"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        return Objects.hash(timestamp, billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"zzybluebell"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"zzybluebell"},"content":"     * @return String of transaction\u0027s information including Id, timestamp and billing.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"stephanie-csy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"        builder.append(\"Id: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"                .append(getId())","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Timestamp: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                .append(getTimestamp())","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"                .append(\"; Billing: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"                .append(getBilling());","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Morrow1ndy":3,"stephanie-csy":19,"zzybluebell":33,"HolmesJJ":89}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.EncryptUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":" * Contains utility methods for populating {@code EzFoodie} with sample data.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public static Member[] getSampleMembers() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        return new Member[] {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10001\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609545600000\"), new Credit(\"90\"), new Point(\"90\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                            new Timestamp(\"1609545600000\"), new Billing(\"90.00\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"                    getReservationList(new Reservation(","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                            new seedu.address.model.reservation.Id(\"100001\"), new DateTime(\"2021-01-20 00:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                            new Remark(\"2 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet()),","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10002\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                    new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609549200000\"), new Credit(\"525\"), new Point(\"525\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611104400000\"), new Billing(\"200.12\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100002\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611190800000\"), new Billing(\"325.30\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"                    getReservationList(","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-20 01:00\"), new Remark(\"2 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100002\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-21 01:00\"), new Remark(\"3 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet()),","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10003\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                    new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609552800000\"), new Credit(\"150\"), new Point(\"150\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                            new Timestamp(\"1611108000000\"), new Billing(\"150.00\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                    getReservationList(new Reservation(new seedu.address.model.reservation.Id(\"000001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"                            new DateTime(\"2021-01-20 02:00\"), new Remark(\"2 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet()),","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10004\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"                    new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609556400000\"), new Credit(\"401\"), new Point(\"401\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611111600000\"), new Billing(\"100.50\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100002\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611198000000\"), new Billing(\"200.50\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100003\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611284400000\"), new Billing(\"100.00\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"                    getReservationList(","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-20 03:00\"), new Remark(\"2 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100002\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-21 03:00\"), new Remark(\"3 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100003\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-22 03:00\"), new Remark(\"4 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet()),","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10005\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                    new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609560000000\"), new Credit(\"1010\"), new Point(\"1010\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611115200000\"), new Billing(\"1000.00\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100002\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611201600000\"), new Billing(\"10.00\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"stephanie-csy"},"content":"                    getReservationList(","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-20 04:00\"), new Remark(\"2 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100002\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-21 04:00\"), new Remark(\"3 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet()),","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"            new Member(new seedu.address.model.member.Id(\"10006\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"                    new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"                    new Timestamp(\"1609563600000\"), new Credit(\"110\"), new Point(\"110\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"                    getTransactionList(","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100001\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611118800000\"), new Billing(\"10.00\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"                            new Transaction(new seedu.address.model.transaction.Id(\"100002\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"                                    new Timestamp(\"1611205200000\"), new Billing(\"100.10\"))),","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"stephanie-csy"},"content":"                    getReservationList(","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-20 05:00\"), new Remark(\"2 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"                            new Reservation(new seedu.address.model.reservation.Id(\"100002\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"stephanie-csy"},"content":"                                    new DateTime(\"2021-01-21 05:00\"), new Remark(\"3 people\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"                    getTagSet())","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":121,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"zzybluebell"},"content":"     * Gets default password.","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"    public static ReadOnlyAccount getDefaultPassword() {","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        Password password;","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"            password \u003d new Password(EncryptUtil.hash(Password.DEFAULT_PLAINTEXT_PASSWORD));","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        } catch (NoSuchAlgorithmException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"            password \u003d new Password(\"\");","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        return new Account(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"zzybluebell"},"content":"     * Gets Sample EzFoodie.","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"    public static ReadOnlyEzFoodie getSampleEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie sampleEf \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"        for (Member sampleMember : getSampleMembers()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"            sampleEf.addMember(sampleMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        return sampleEf;","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":154,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"     * Returns a reservation list containing the list of reservations given.","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"stephanie-csy"},"content":"    public static List\u003cReservation\u003e getReservationList(Reservation... reservations) {","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"stephanie-csy"},"content":"        return Arrays.stream(reservations).collect(Collectors.toList());","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"     * Returns a transaction list containing the list of transactions given.","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"    public static List\u003cTransaction\u003e getTransactionList(Transaction... transactions) {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        return Arrays.stream(transactions).collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"stephanie-csy":21,"zzybluebell":13,"mukundrs":5,"-":27,"HolmesJJ":102}},{"path":"src/main/java/seedu/address/storage/AccountStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents a storage for {@link seedu.address.model.Account}.","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public interface AccountStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the file path of the account file.","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    Path getAccountFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Returns Account as a {@link ReadOnlyAccount}.","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyAccount\u003e readAccount() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @see #getAccountFilePath()","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyAccount\u003e readAccount(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Saves the given {@link ReadOnlyAccount} to the storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * @param account cannot be null.","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    void saveAccount(ReadOnlyAccount account) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * @see #saveAccount(ReadOnlyAccount)","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    void saveAccount(ReadOnlyAccount account, Path filePath) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":2,"HolmesJJ":45}},{"path":"src/main/java/seedu/address/storage/EzFoodieStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents a storage for {@link seedu.address.model.EzFoodie}.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public interface EzFoodieStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    Path getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Returns ezFoodie data as a {@link ReadOnlyEzFoodie}.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @see #getEzFoodieFilePath()","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Saves the given {@link ReadOnlyEzFoodie} to the storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * @param ezFoodie cannot be null.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    void saveEzFoodie(ReadOnlyEzFoodie ezFoodie) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * @see #saveEzFoodie(ReadOnlyEzFoodie)","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    void saveEzFoodie(ReadOnlyEzFoodie ezFoodie, Path filePath) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"zzybluebell":2,"HolmesJJ":45}},{"path":"src/main/java/seedu/address/storage/JsonAccountStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * A class to access Account stored as a json file on the hard disk.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"public class JsonAccountStorage implements AccountStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAccountStorage.class);","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Constructs {@code JsonAccountStorage} with {@code filePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public JsonAccountStorage(Path filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Gets account file path.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @return Path of account file.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public Path getAccountFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        return filePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Returns Account as a {@link ReadOnlyAccount}.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"    public Optional\u003cReadOnlyAccount\u003e readAccount() throws DataConversionException {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        return readAccount(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * Similar to {@link #readAccount()}.","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyAccount\u003e readAccount(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        Optional\u003cJsonAdaptedAccount\u003e jsonAccount \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                filePath, JsonAdaptedAccount.class);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        if (!jsonAccount.isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.of(jsonAccount.get().toModelType());","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyAccount} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * @param account cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public void saveAccount(ReadOnlyAccount account) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        saveAccount(account, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * Similar to {@link #saveAccount(ReadOnlyAccount)}.","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"     * @param filePath location of the account. Cannot be null.","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    public void saveAccount(ReadOnlyAccount account, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        JsonUtil.saveJsonFile(new JsonAdaptedAccount(account), filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"zzybluebell":22,"HolmesJJ":79}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAccount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * Jackson-friendly version of {@link Account}.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"class JsonAdaptedAccount {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Account\u0027s %s is missing!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final String password;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code JsonAdaptedAccount} with the given account details.","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public JsonAdaptedAccount(@JsonProperty(\"password\") String password) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        this.password \u003d password;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Converts a given {@code Account} into this class for Jackson use.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param source future changes to this will not affect the created {@code JsonAdaptedAccount}.","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public JsonAdaptedAccount(ReadOnlyAccount source) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        this.password \u003d source.getPassword().value;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * Converts this Jackson-friendly adapted account object into the model\u0027s {@code Account} object.","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted account.","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public Account toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        if (password \u003d\u003d null) {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Password.class.getSimpleName()));","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        if (!Password.isValidPassword(password)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(Password.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        final Password modelPassword \u003d new Password(password);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        return new Account(modelPassword);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"HolmesJJ":55}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMember.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":" * Jackson-friendly version of {@link Member}.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"class JsonAdaptedMember {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Member\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"stephanie-csy"},"content":"    private final String id;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    private final String timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private final String credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"    private final String point;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"    private final List\u003cJsonAdaptedTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"    private final List\u003cJsonAdaptedReservation\u003e reservations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"     * Constructs a {@code JsonAdaptedMember} with the given member details.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"    public JsonAdaptedMember(@JsonProperty(\"id\") String id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"timestamp\") String timestamp,","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"credit\") String credit,","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"            @JsonProperty(\"point\") String point,","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mukundrs"},"content":"            @JsonProperty(\"transactions\") List\u003cJsonAdaptedTransaction\u003e transactions,","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"reservations\") List\u003cJsonAdaptedReservation\u003e reservations,","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"stephanie-csy"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"        this.point \u003d point;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"stephanie-csy"},"content":"        if (transactions !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"stephanie-csy"},"content":"            this.transactions.addAll(transactions);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"mukundrs"},"content":"        if (reservations !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"mukundrs"},"content":"            this.reservations.addAll(reservations);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"stephanie-csy"},"content":"     * Converts a given {@code Member} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"stephanie-csy"},"content":"    public JsonAdaptedMember(Member source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d source.getTimestamp().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        credit \u003d source.getCredit().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"        point \u003d source.getPoint().value;","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"stephanie-csy"},"content":"        transactions.addAll(source.getTransactions().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"                .map(JsonAdaptedTransaction::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"mukundrs"},"content":"        reservations.addAll(source.getReservations().stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"mukundrs"},"content":"                .map(JsonAdaptedReservation::new)","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"mukundrs"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"stephanie-csy"},"content":"     * Converts this Jackson-friendly adapted member object into the model\u0027s {@code Member} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"stephanie-csy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted member.","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"stephanie-csy"},"content":"    public Member toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"stephanie-csy"},"content":"        final List\u003cTag\u003e memberTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"stephanie-csy"},"content":"            memberTags.add(tag.toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"stephanie-csy"},"content":"        final List\u003cTransaction\u003e memberTransactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"stephanie-csy"},"content":"        for (JsonAdaptedTransaction transaction : transactions) {","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"            memberTransactions.add(transaction.toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"mukundrs"},"content":"        final List\u003cReservation\u003e memberReservations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"mukundrs"},"content":"        for (JsonAdaptedReservation reservation : reservations) {","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"mukundrs"},"content":"            memberReservations.add(reservation.toModelType());","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"mukundrs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"stephanie-csy"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"stephanie-csy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"stephanie-csy"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"stephanie-csy"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"stephanie-csy"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        if (timestamp \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"Morrow1ndy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Timestamp.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        if (!Timestamp.isValidTimestamp(timestamp)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"Morrow1ndy"},"content":"            throw new IllegalValueException(Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        final Timestamp modelTimestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        if (credit \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Credit.class.getSimpleName()));","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"        if (!Credit.isValidCredit(credit)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        final Credit modelCredit \u003d new Credit(credit);","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"zzybluebell"},"content":"        if (point \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"zzybluebell"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Point.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"zzybluebell"},"content":"        if (!Point.isValidPoint(point)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"zzybluebell"},"content":"            throw new IllegalValueException(Point.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"zzybluebell"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"zzybluebell"},"content":"        final Point modelPoint \u003d new Point(point);","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"stephanie-csy"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(memberTags);","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"        final List\u003cTransaction\u003e modelTransactions \u003d new ArrayList\u003c\u003e(memberTransactions);","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":191,"author":{"gitId":"stephanie-csy"},"content":"        final List\u003cReservation\u003e modelReservations \u003d new ArrayList\u003c\u003e(memberReservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"        return new Member(modelId, modelName, modelPhone, modelEmail, modelAddress, modelTimestamp, modelCredit,","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"zzybluebell"},"content":"                modelPoint, modelTransactions, modelReservations, modelTags);","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Morrow1ndy":2,"stephanie-csy":40,"zzybluebell":14,"mukundrs":14,"-":87,"HolmesJJ":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedReservation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":" * Jackson-friendly version of {@link Reservation}.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"class JsonAdaptedReservation {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Reservation\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"    private final String id;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private final String dateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private final String remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code JsonAdaptedReservation} with the given reservation details.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"    public JsonAdaptedReservation(@JsonProperty(\"id\") String id, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a given {@code Reservation} into this class for Jackson use.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"    public JsonAdaptedReservation(Reservation source) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        dateTime \u003d source.getDateTime().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Converts this Jackson-friendly adapted Reservation object into the model\u0027s {@code Reservation} object.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"mukundrs"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted reservation.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"    public Reservation toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"stephanie-csy"},"content":"        return new Reservation(modelId, modelDateTime, modelRemark);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"stephanie-csy":9,"zzybluebell":1,"mukundrs":30,"HolmesJJ":30}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * Gets tag name.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * @return String of tag name.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzybluebell":6,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTransaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"stephanie-csy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Id;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":" * Jackson-friendly version of {@link Transaction}.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"stephanie-csy"},"content":"class JsonAdaptedTransaction {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Transaction\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private final String id;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private final String timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private final String billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code JsonAdaptedTransaction} with the given transaction details.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public JsonAdaptedTransaction(@JsonProperty(\"id\") String id,","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"timestamp\") String timestamp,","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"            @JsonProperty(\"billing\") String billing) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        this.billing \u003d billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a given {@code Transaction} into this class for Jackson use.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"    public JsonAdaptedTransaction(Transaction source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d source.getTimestamp().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        billing \u003d source.getBilling().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"     * Converts this Jackson-friendly adapted transaction object into the model\u0027s {@code Transaction} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted transaction.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"    public Transaction toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        if (timestamp \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Timestamp.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"stephanie-csy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        final Timestamp modelTimestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        if (billing \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Billing.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        final Billing modelBilling \u003d new Billing(billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        return new Transaction(modelId, modelTimestamp, modelBilling);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"stephanie-csy":32,"zzybluebell":1,"HolmesJJ":39}},{"path":"src/main/java/seedu/address/storage/JsonEzFoodieStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * A class to access EzFoodie data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"public class JsonEzFoodieStorage implements EzFoodieStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEzFoodieStorage.class);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code JsonEzFoodieStorage} with the given ezFoodie file path details.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public JsonEzFoodieStorage(Path filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Gets EzFoodie file path.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * @return Path of EzFoodie file.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     * Returns ezFoodie data as a {@link ReadOnlyEzFoodie}.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie() throws DataConversionException {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        return readEzFoodie(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * Similar to {@link #readEzFoodie()}.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        Optional\u003cJsonSerializableEzFoodie\u003e jsonEzFoodie \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                filePath, JsonSerializableEzFoodie.class);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        if (!jsonEzFoodie.isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            return Optional.of(jsonEzFoodie.get().toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyEzFoodie} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"     * @param ezFoodie cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie(ReadOnlyEzFoodie ezFoodie) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        saveEzFoodie(ezFoodie, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * Similar to {@link #saveEzFoodie(ReadOnlyEzFoodie)}.","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie(ReadOnlyEzFoodie ezFoodie, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        requireNonNull(ezFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEzFoodie(ezFoodie), filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzybluebell":21,"-":60,"HolmesJJ":20}},{"path":"src/main/java/seedu/address/storage/JsonSerializableEzFoodie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * An Immutable EzFoodie that is serializable to JSON format.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"@JsonRootName(value \u003d \"ezfoodie\")","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"class JsonSerializableEzFoodie {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * Stands for message od duplicated members.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"Members list contains duplicate member(s).\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cJsonAdaptedMember\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code JsonSerializableEzFoodie} with the given members.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public JsonSerializableEzFoodie(@JsonProperty(\"members\") List\u003cJsonAdaptedMember\u003e members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        this.members.addAll(members);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * Converts a given {@code ReadOnlyEzFoodie} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEzFoodie}.","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public JsonSerializableEzFoodie(ReadOnlyEzFoodie source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        members.addAll(source.getMemberList().stream().map(JsonAdaptedMember::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * Converts this ezFoodie into the model\u0027s {@code EzFoodie} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodie toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie ezFoodie \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        for (JsonAdaptedMember jsonAdaptedMember : members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            Member member \u003d jsonAdaptedMember.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            if (ezFoodie.hasMember(member)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            ezFoodie.addMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzybluebell":3,"-":35,"HolmesJJ":24}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":" * A class to access UserPrefs stored in the hard disk as a json file.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code JsonUserPrefsStorage} with input {code filePath}.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"     * Similar to {@link #readUserPrefs()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zzybluebell":22,"-":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":" * API of the Storage component.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public interface Storage extends EzFoodieStorage, AccountStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * Returns Account as a {@link ReadOnlyAccount}.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyAccount\u003e readAccount() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyAccount} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     * @param account cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    void saveAccount(ReadOnlyAccount account) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    Path getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * Returns ezFoodie data as a {@link ReadOnlyEzFoodie}.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyEzFoodie} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"zzybluebell"},"content":"     * @param ezFoodie cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    void saveEzFoodie(ReadOnlyEzFoodie ezFoodie) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zzybluebell":43,"-":30,"HolmesJJ":8}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * Manages storage of EzFoodie data in local storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private AccountStorage accountStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private EzFoodieStorage ezFoodieStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code StorageManager} with the given {@code AccountStorage}, {@code ezFoodieStorage}","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public StorageManager(AccountStorage accountStorage, EzFoodieStorage ezFoodieStorage,","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        this.accountStorage \u003d accountStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        this.ezFoodieStorage \u003d ezFoodieStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Account methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"     * Returns the file path of the account file.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    public Path getAccountFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        return accountStorage.getAccountFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"zzybluebell"},"content":"     * Returns Account as a {@link ReadOnlyAccount}.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyAccount\u003e readAccount() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        return accountStorage.readAccount();","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"     * @see #getAccountFilePath()","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyAccount\u003e readAccount(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        logger.fine(\"Attempting to read account from file: \" + filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        return accountStorage.readAccount(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyAccount} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"     * @param account cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"    public void saveAccount(ReadOnlyAccount account) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        accountStorage.saveAccount(account);","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"     * @see #saveAccount(ReadOnlyAccount)","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"    public void saveAccount(ReadOnlyAccount account, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        logger.fine(\"Attempting to write to account file: \" + filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        accountStorage.saveAccount(account, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EzFoodie methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"    public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodieStorage.getEzFoodieFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"     * Returns ezFoodie data as a {@link ReadOnlyEzFoodie}.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"zzybluebell"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        return readEzFoodie(ezFoodieStorage.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"     * @see #getEzFoodieFilePath()","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"    public Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodieStorage.readEzFoodie(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"zzybluebell"},"content":"     * Saves the given {@link ReadOnlyEzFoodie} to the storage.","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"zzybluebell"},"content":"     * @param ezFoodie cannot be null.","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"zzybluebell"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie(ReadOnlyEzFoodie ezFoodie) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        saveEzFoodie(ezFoodie, ezFoodieStorage.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":163,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"zzybluebell"},"content":"     * @see #saveEzFoodie(ReadOnlyEzFoodie)","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie(ReadOnlyEzFoodie ezFoodie, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodieStorage.saveEzFoodie(ezFoodie, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":61,"-":71,"HolmesJJ":40}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zzybluebell":2,"-":36}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.CommandUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":" * Represents for the UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for error message for error style class.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify CommandBox.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"     * Handles input commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     * Represents text box in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        commandTextField.addEventHandler(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                commandTextField.setText(CommandUtil.getPreCommand());","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"                commandTextField.setText(CommandUtil.getNextCommand());","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"     * Handles events triggered when command is entered.","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        } catch (CommandException | ParseException | PermissionException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Morrow1ndy":12,"zzybluebell":4,"-":80,"HolmesJJ":14}},{"path":"src/main/java/seedu/address/ui/HelpBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"public class HelpBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for the official URL to our tP repository on GitHub.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String OFFICIAL_URL \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"            \"https://ay2122s1-cs2103t-f12-4.github.io/tp/\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify HelpBox.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String FXML \u003d \"HelpBox.fxml\";","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"    private Label login;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"    private Label addNewMember;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"    private Label deleteMemberByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"    private Label deleteMemberByIndexNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"    private Label findMemberByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"    private Label findMembersByName;","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"    private Label findMembersByPhone;","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"    private Label findMembersByEmail;","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"    private Label findMembersByRegistrationDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"    private Label viewMemberProfile;","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"    private Label editMemberByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"    private Label editMemberByIndexNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"    private Label addTransactionByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"    private Label editTransactionByMemberIdTransactionId;","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"    private Label deleteTransactionByMemberIdTransactionId;","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"    private Label addReservationByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"    private Label editReservationByMemberIdTransactionId;","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"    private Label deleteReservationByMemberIdTransactionId;","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"    private Label sortMembersByCreditInAsc;","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"    private Label sortMembersByCreditInDesc;","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"    private Label redeemPointByMemberId;","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"    private Label redeemPointIndexNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"    private Label url;","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"    private Button copyButton;","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"     * Creates a help box to show the commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"    public HelpBox() {","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"        super(FXML);","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"        login.setText(\"login \u003cPASSWORD\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"        addNewMember.setText(\"add -mem/ -n/\u003cNAME\u003e -p/\u003cPHONE\u003e -e/\u003cEMAIL\u003e -a/\u003cADDRESS\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"        deleteMemberByMemberId.setText(\"del -mem/ -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"        deleteMemberByIndexNumber.setText(\"del -mem/ -i/\u003cMEMBER_INDEX\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"        findMemberByMemberId.setText(\"find -mem/ -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"        findMembersByName.setText(\"find -mem/ -n/\u003cNAME\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"        findMembersByPhone.setText(\"find -mem/ -p/\u003cPHONE\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"        findMembersByEmail.setText(\"find -mem/ -e/\u003cEMAIL\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"        findMembersByRegistrationDate.setText(\"find -mem/ -d/\u003cREGISTRATION_DATE yyyy-MM-dd\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"        viewMemberProfile.setText(\"show -mem/ -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"        editMemberByMemberId.setText(\"edit -mem/ -id/\u003cMEMBER_ID\u003e [-n/\u003cNAME\u003e] [-p/\u003cPHONE\u003e] [-e/\u003cEMAIL\u003e] [-a/\u003cADDRESS\u003e]\");","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"        editMemberByIndexNumber.setText(\"edit -mem/ -i/\u003cINDEX\u003e [-n/\u003cNAME\u003e] [-p/\u003cPHONE\u003e] [-e/\u003cEMAIL\u003e] [-a/\u003cADDRESS\u003e]\");","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"        addTransactionByMemberId.setText(\"add -txn/ -b/\u003cBILLING\u003e -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"        editTransactionByMemberIdTransactionId.setText(\"edit -txn/ -b/\u003cBILLING\u003e -id/\u003cMEMBER_ID + TRANSACTION_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"        deleteTransactionByMemberIdTransactionId.setText(\"del -txn/ -id/\u003cMEMBER_ID + TRANSACTION_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"        addReservationByMemberId.setText(\"add -rs/ -dt/\u003cDATE_TIME yyyy-MM-dd HH:mm\u003e -rm/\u003cREMARK\u003e -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"Morrow1ndy"},"content":"        editReservationByMemberIdTransactionId.setText(","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"Morrow1ndy"},"content":"                \"edit -rs/ -id/\u003cMEMBER_ID + RESERVATION_ID\u003e [-dt/\u003cDATE_TIME yyyy-MM-dd HH:mm\u003e] [-rm/\u003cREMARK\u003e]\");","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"Morrow1ndy"},"content":"        deleteReservationByMemberIdTransactionId.setText(\"del -rs/ -id/\u003cMEMBER_ID + RESERVATION_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"Morrow1ndy"},"content":"        sortMembersByCreditInAsc.setText(\"sort -mem/ -c/ -a/\");","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"Morrow1ndy"},"content":"        sortMembersByCreditInDesc.setText(\"sort -mem/ -c/ -d/\");","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"Morrow1ndy"},"content":"        redeemPointByMemberId.setText(\"redeem -rd/\u003cPOINTS\u003e -id/\u003cMEMBER_ID\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"Morrow1ndy"},"content":"        redeemPointIndexNumber.setText(\"redeem -rd/\u003cPOINTS\u003e -i/\u003cINDEX\u003e\");","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"Morrow1ndy"},"content":"        url.setText(OFFICIAL_URL);","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"Morrow1ndy"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"Morrow1ndy"},"content":"    private void copyUrl() {","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"Morrow1ndy"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"Morrow1ndy"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"Morrow1ndy"},"content":"        url.putString(OFFICIAL_URL);","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"Morrow1ndy"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Morrow1ndy":126}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":" * Represents for Controlling a help page.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify HelpWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses logger to log events happen in HelpWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    private StackPane helpBoxPlaceholder;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a new {@code HelpWindow}.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"        HelpBox helpBox \u003d new HelpBox();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"        helpBoxPlaceholder.getChildren().add(helpBox.getRoot());","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(event.getCode());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                Stage stage \u003d (Stage) getRoot().getScene().getWindow();","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                stage.close();","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a new {@code HelpWindow}.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     * @throws IllegalStateException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"     * Hides the opened help window.","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"     * Focuses on current opened help window.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Morrow1ndy":12,"zzybluebell":9,"-":75,"HolmesJJ":9}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MainWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses logger to log events happen in MainWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for the main stage to contain all Ui parts in MainWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"     * Makes use of backend logic.","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    private MemberListPanel memberListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"    private MemberViewWindow memberViewWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"    private SummaryWindow summaryWindow;","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    private MenuItem summaryMenuItem;","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    private StackPane memberListPanelPlaceholder;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    private StackPane statusBarPlaceholder;","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"        memberViewWindow \u003d new MemberViewWindow(logic);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"        summaryWindow \u003d new SummaryWindow(logic);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"     * Gets primary stage.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"     * @return Stage for the primary stage.","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for the default accelerator setter for mainWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        setAccelerator(summaryMenuItem, KeyCombination.valueOf(\"F2\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"zzybluebell"},"content":"     * @param keyCombination the KeyCombination value of the accelerator.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        memberListPanel \u003d new MemberListPanel(logic.getUpdatedMemberList());","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        memberListPanelPlaceholder.getChildren().add(memberListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        statusBarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"Morrow1ndy"},"content":"     * Opens the member view window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"Morrow1ndy"},"content":"    public void handleMemberView() {","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"Morrow1ndy"},"content":"        if (!memberViewWindow.isShowing()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"Morrow1ndy"},"content":"            memberViewWindow.show();","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"Morrow1ndy"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"Morrow1ndy"},"content":"            memberViewWindow.focus();","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"Morrow1ndy"},"content":"     * Opens the summary window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"Morrow1ndy"},"content":"    public void handleSummary() {","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"Morrow1ndy"},"content":"        if (!summaryWindow.isShowing()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"Morrow1ndy"},"content":"            summaryWindow.show();","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"Morrow1ndy"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"Morrow1ndy"},"content":"            summaryWindow.focus();","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"Morrow1ndy"},"content":"     * Displays mainWindow to user.","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":224,"author":{"gitId":"Morrow1ndy"},"content":"        memberViewWindow.hide();","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"Morrow1ndy"},"content":"        summaryWindow.hide();","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":229,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"Morrow1ndy"},"content":"     * Gets all members in a list.","lastModifiedDate":"2021-11-07"},{"lineNumber":231,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"Morrow1ndy"},"content":"     * @return memberListPanel component.","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"    public MemberListPanel getMemberListPanel() {","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"HolmesJJ"},"content":"        return memberListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"HolmesJJ"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"            throws CommandException, ParseException, PermissionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"Morrow1ndy"},"content":"            if (commandResult.isShowMemberView()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"Morrow1ndy"},"content":"                handleMemberView();","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"Morrow1ndy"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"Morrow1ndy"},"content":"            if (commandResult.isShowSummary()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"Morrow1ndy"},"content":"                handleSummary();","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"Morrow1ndy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"HolmesJJ"},"content":"        } catch (CommandException | ParseException | PermissionException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Morrow1ndy":66,"zzybluebell":7,"-":184,"HolmesJJ":16}},{"path":"src/main/java/seedu/address/ui/MemberCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Tier;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of a {@code Member}.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class MemberCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MemberListCard.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"MemberListCard.fxml\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for current displaying member.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public final Member member;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    private Label index;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    private Label name;","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    private Label email;","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    private Label credit;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"    private Label point;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    private Label tier;","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    private Label reservation;","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code MemberCode} with the given {@code Member} and index to display.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public MemberCard(Member member, int displayedIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        this.member \u003d member;","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        index.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        id.setText(member.getId().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        name.setText(member.getName().fullName);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        phone.setText(member.getPhone().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        email.setText(member.getEmail().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        credit.setText(member.getCredit().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        point.setText(member.getPoint().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        tier.setText(Tier.getTierByCredit(Integer.parseInt(member.getCredit().value)));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        tier.getStyleClass().add(Tier.getTierByCredit(Integer.parseInt(member.getCredit().value)).toLowerCase());","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        member.getReservations().stream()","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"                .sorted(Comparator.comparing(reservation -\u003e DateTimeUtil","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                        .parseDateTime(reservation.getDateTime().value)))","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"                .filter(reservation -\u003e Reservation.isValidDateTime(reservation.getDateTime()))","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                .findAny().ifPresentOrElse(comingReservation -\u003e reservation.setText(","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"                        comingReservation.getDateTime().value + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                        + comingReservation.getRemark().value), () -\u003e reservation.setText(\"\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"     * Overrides equals by comparing their text and member objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"     * @param other object.","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"     * @return true if equals, false otherwise.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof MemberCard)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        MemberCard card \u003d (MemberCard) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        return index.getText().equals(card.index.getText())","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"                \u0026\u0026 member.equals(card.member);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Morrow1ndy":14,"zzybluebell":5,"-":47,"HolmesJJ":41}},{"path":"src/main/java/seedu/address/ui/MemberDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Tier;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of a {@code Member}.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"public class MemberDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MemberDetailsCard.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"MemberDetailsCard.fxml\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for current displaying member.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    public final Member member;","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for Components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    private Label id;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    private Label name;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    private Label phone;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    private Label email;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    private Label address;","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    private Label registrationTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    private Label credit;","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    private Label point;","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    private Label tier;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    private StackPane reservationListPanelPlaceholder;","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    private StackPane transactionListPanelPlaceholder;","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code MemberCode} with the given {@code members} to display.","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public MemberDetailsCard(Member member) {","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        this.member \u003d member;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        id.setText(member.getId().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        name.setText(member.getName().fullName);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        phone.setText(member.getPhone().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        email.setText(member.getEmail().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        address.setText(member.getAddress().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        registrationTime.setText(DateTimeUtil.timestampToDate(Long.parseLong(member.getTimestamp().value)).toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        credit.setText(member.getCredit().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        point.setText(member.getPoint().value);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        tier.setText(Tier.getTierByCredit(Integer.parseInt(member.getCredit().value)));","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        tier.getStyleClass().add(Tier.getTierByCredit(Integer.parseInt(member.getCredit().value)).toLowerCase());","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        ObservableList\u003cReservation\u003e internalReservationList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        internalReservationList.addAll(member.getReservations());","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        ReservationListPanel reservationListPanel \u003d new ReservationListPanel(internalReservationList);","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        reservationListPanelPlaceholder.getChildren().add(reservationListPanel.getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        ObservableList\u003cTransaction\u003e internalTransactionList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        internalTransactionList.addAll(member.getTransactions());","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        TransactionListPanel transactionListPanel \u003d new TransactionListPanel(internalTransactionList);","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        transactionListPanelPlaceholder.getChildren().add(transactionListPanel.getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"     * Overrides equals by comparing their member objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"     * @param other object.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"     * @return true if contains the same member, false otherwise.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof MemberDetailsCard)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        MemberDetailsCard card \u003d (MemberDetailsCard) other;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        return member.equals(card.member);","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Morrow1ndy":18,"HolmesJJ":99}},{"path":"src/main/java/seedu/address/ui/MemberDetailsListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents for Panel containing the list of members.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class MemberDetailsListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MemberDetailsPanel.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"MemberDetailsListPanel.fxml\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private ListView\u003cMember\u003e memberDetailsListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public MemberDetailsListPanel(ObservableList\u003cMember\u003e memberList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        memberDetailsListView.setItems(memberList);","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        memberDetailsListView.setCellFactory(listView -\u003e new MemberDetailsListViewCell());","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * Customs {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberDetailsCard}.","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    class MemberDetailsListViewCell extends ListCell\u003cMember\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        protected void updateItem(Member member, boolean empty) {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            super.updateItem(member, empty);","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            if (empty || member \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                setText(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(new MemberDetailsCard(member).getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":7,"HolmesJJ":45}},{"path":"src/main/java/seedu/address/ui/MemberListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"zzybluebell"},"content":" * Represents for Panel containing the list of members.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class MemberListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MemberListPanel.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"MemberListPanel.fxml\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private ListView\u003cMember\u003e memberListView;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public MemberListPanel(ObservableList\u003cMember\u003e memberList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        memberListView.setItems(memberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        memberListView.setCellFactory(listView -\u003e new MemberListViewCell());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     * Customs {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberCard}.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    class MemberListViewCell extends ListCell\u003cMember\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        protected void updateItem(Member member, boolean empty) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            super.updateItem(member, empty);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            if (empty || member \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                setText(null);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(new MemberCard(member, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Morrow1ndy":7,"zzybluebell":2,"HolmesJJ":43}},{"path":"src/main/java/seedu/address/ui/MemberViewWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"zzybluebell"},"content":" * Controller for a member view page for related details.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"public class MemberViewWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for logger to log events happen in MemberViewWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MemberViewWindow.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify MemberViewWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String FXML \u003d \"MemberViewWindow.fxml\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private StackPane memberDetailsListPlaceholder;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a new {@code MemberViewWindow} .","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * @param root Stage to use as the root of the MemberViewWindow.","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * @param logic summary of logic.","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public MemberViewWindow(Stage root, Logic logic) {","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML, root);","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        MemberDetailsListPanel memberDetailsListPanel \u003d new MemberDetailsListPanel(logic.getUpdatedMemberListForView());","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        memberDetailsListPlaceholder.getChildren().add(memberDetailsListPanel.getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(event.getCode());","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                Stage stage \u003d (Stage) getRoot().getScene().getWindow();","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                stage.close();","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"     * Constructs a new {@code MemberViewWindow}, with a default new stage.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"     * @param logic logic refers to backend logic.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    public MemberViewWindow(Logic logic) {","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        this(new Stage(), logic);","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"     * Shows the MemberView window.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"     * @throws IllegalStateException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"    public void show() {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"        logger.fine(\"Showing member view page.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns true if the MemberView window is currently being shown.","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"     * Hides current opened MemberView window.","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"    public void hide() {","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"     * Focuses on current opened MemberView window.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"    public void focus() {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":79,"zzybluebell":5,"HolmesJJ":21}},{"path":"src/main/java/seedu/address/ui/ReservationCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of a {@code Reservation}.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class ReservationCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify ReservationListCard.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"ReservationListCard.fxml\";","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for current displaying reservation.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public final Reservation reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    private Label id;","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private Label dateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    private Label remark;","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a {@code ReservationCode} with the given {@code Reservation} to display.","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationCard(Reservation reservation) {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        this.reservation \u003d reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        id.setText(reservation.getId().value);","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        dateTime.setText(reservation.getDateTime().value);","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        remark.setText(reservation.getRemark().value);","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"     * Overrides equals by comparing reservation objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof ReservationCard)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        // state check","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        ReservationCard card \u003d (ReservationCard) other;","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        return reservation.equals(card.reservation);","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":18,"HolmesJJ":55}},{"path":"src/main/java/seedu/address/ui/ReservationListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * Represents for Panel containing the list of reservations.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class ReservationListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify ReservationListPanel.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"ReservationListPanel.fxml\";","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private ListView\u003cReservation\u003e reservationListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code ReservationListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationListPanel(ObservableList\u003cReservation\u003e reservationList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"        reservationListView.setItems(reservationList.sorted((r1, r2) -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"            LocalDateTime dateTimeR1 \u003d DateTimeUtil.parseDateTime(r1.getDateTime().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"            LocalDateTime dateTimeR2 \u003d DateTimeUtil.parseDateTime(r2.getDateTime().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"            if (dateTimeR1.isAfter(dateTimeR2)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"                return -1;","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"            } else if (dateTimeR1.isEqual(dateTimeR2)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"                return 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"                return 1;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"        }));","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        reservationListView.setCellFactory(listView -\u003e new ReservationListViewCell());","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * Customs {@code ListCell} that displays the graphics of a {@code Reservation} using a {@code ReservationCard}.","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    class ReservationListViewCell extends ListCell\u003cReservation\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        protected void updateItem(Reservation reservation, boolean empty) {","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            super.updateItem(reservation, empty);","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            if (empty || reservation \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                setText(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(new ReservationCard(reservation).getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":21,"HolmesJJ":44}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":" * A UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify ResultDisplay.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":25,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a {@code ResultDisplay}.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"zzybluebell"},"content":"     * Sets feedback to User with given message to display {@code feedbackToUser}.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * @param feedbackToUser message to display","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Morrow1ndy":7,"zzybluebell":8,"-":27}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.geometry.HPos;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify StatusBarFooter.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    private Label loginStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     * Creates a StatusBarFooter to display.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     * @param saveLocation current location of saved file.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        loginStatus.textProperty().bind(LoginStatus.CURRENT_STATUS);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        GridPane.setHalignment(loginStatus, HPos.RIGHT);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Morrow1ndy":10,"-":27,"HolmesJJ":8}},{"path":"src/main/java/seedu/address/ui/SummaryBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of a summary.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"public class SummaryBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify SummaryBox.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String FXML \u003d \"SummaryBox.fxml\";","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for pattern used to format decimals.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String PATTERN \u003d \"#.##\";","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for current displaying memberList.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    public final ObservableList\u003cMember\u003e memberList;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalNumberOfMembers;","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalNumberOfTransactions;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalAmountOfTransactions;","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalNumberOfTransactionsInPastMonth;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalAmountOfTransactionsInPastMonth;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalNumberOfTransactionsInPast3Months;","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalAmountOfTransactionsInPast3Months;","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalNumberOfTransactionsInPast6Months;","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"    private Label totalAmountOfTransactionsInPast6Months;","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"     * Creates a {@code MemberCode} with the given {@code Member} and index to display.","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"    public SummaryBox(ObservableList\u003cMember\u003e memberList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"        super(FXML);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"        DecimalFormat df \u003d new DecimalFormat(PATTERN);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"        totalNumberOfMembers.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e String.valueOf(memberList.size()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"        totalNumberOfTransactions.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e String.valueOf(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToInt(member -\u003e member.getTransactions().size()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"        totalAmountOfTransactions.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e df.format(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToDouble(member -\u003e member.getTransactions().stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"                                .mapToDouble(transaction -\u003e transaction.getBilling()","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"                                        .getDoubleValue()).sum()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"        totalNumberOfTransactionsInPastMonth.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e String.valueOf(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToLong(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 1))","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"                                .count()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"        totalAmountOfTransactionsInPastMonth.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e df.format(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToDouble(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 1))","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"                                .mapToDouble(transaction -\u003e transaction.getBilling()","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"                                        .getDoubleValue()).sum()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"        totalNumberOfTransactionsInPast3Months.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e String.valueOf(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToLong(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 3))","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"                                .count()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"        totalAmountOfTransactionsInPast3Months.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e df.format(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToDouble(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 3))","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"                                .mapToDouble(transaction -\u003e transaction.getBilling()","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"                                        .getDoubleValue()).sum()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"        totalNumberOfTransactionsInPast6Months.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e String.valueOf(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToLong(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 6))","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"                                .count()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"Morrow1ndy"},"content":"        totalAmountOfTransactionsInPast6Months.textProperty().bind(","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"Morrow1ndy"},"content":"                Bindings.createStringBinding(() -\u003e df.format(memberList.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"Morrow1ndy"},"content":"                        .mapToDouble(member -\u003e member.getTransactions().stream().filter(transaction -\u003e Transaction","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"Morrow1ndy"},"content":"                                        .isWithinPastMonths(transaction.getTimestamp().getLongValue(), 6))","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"Morrow1ndy"},"content":"                                .mapToDouble(transaction -\u003e transaction.getBilling()","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"Morrow1ndy"},"content":"                                        .getDoubleValue()).sum()).sum()), memberList));","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Morrow1ndy":113}},{"path":"src/main/java/seedu/address/ui/SummaryWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":" * Controller for a summary page.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"public class SummaryWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify SummaryWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String FXML \u003d \"SummaryWindow.fxml\";","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for logger to log events happened in SummaryWindow.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SummaryWindow.class);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"    private StackPane summaryBoxPlaceholder;","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"     * Constructs a new {@code SummaryWindow} .","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     * @param root Stage to use as the root of the SummaryWindow.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"     * @param logic summary of logic.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"    public SummaryWindow(Stage root, Logic logic) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"        SummaryBox summaryBox \u003d new SummaryBox(logic.getUpdatedMemberList());","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"        summaryBoxPlaceholder.getChildren().add(summaryBox.getRoot());","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(event.getCode());","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ESCAPE) {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                Stage stage \u003d (Stage) getRoot().getScene().getWindow();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                stage.close();","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"     * Constructs a SummaryWindow with a default new stage.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"     * @param logic logic refers to backend logic.","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"    public SummaryWindow(Logic logic) {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"        this(new Stage(), logic);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"     * Shows the summary window.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"     * @throws IllegalStateException if the user input does not conform the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"    public void show() {","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"        logger.fine(\"Showing summary page.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns true if the summary window is currently being shown.","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"     * Hides current opened summary window.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"    public void hide() {","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"     * Focuses on current opened summary window.","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"    public void focus() {","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"Morrow1ndy"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Morrow1ndy":93,"zzybluebell":4,"HolmesJJ":11}},{"path":"src/main/java/seedu/address/ui/TransactionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":" * A UI component that displays information of a {@code Transaction}.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class TransactionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify TransactionListCard.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"TransactionListCard.fxml\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for current displaying transaction.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"    public final Transaction transaction;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    private Label id;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    private Label dateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    private Label billing;","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"     * Constructs a TransactionCard with input transaction object.","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"     * @param transaction including transaction details to be displayed.","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionCard(Transaction transaction) {","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        this.transaction \u003d transaction;","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        id.setText(transaction.getId().value);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        dateTime.setText(DateTimeUtil.timestampToDate(Long.parseLong(transaction.getTimestamp().value)).toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        billing.setText(transaction.getBilling().value);","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"     * Overrides equals by comparing transaction objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        if (!(other instanceof TransactionCard)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        // state check","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        TransactionCard card \u003d (TransactionCard) other;","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        return transaction.equals(card.transaction);","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":16,"HolmesJJ":61}},{"path":"src/main/java/seedu/address/ui/TransactionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * Represents for Panel containing the list of transactions.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class TransactionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"     * Uses FXML to identify TransactionListPanel.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FXML \u003d \"TransactionListPanel.fxml\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for components to be used in FXML.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private ListView\u003cTransaction\u003e transactionListView;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     * Constructs a TransactionListPanel with input transactionList of a specific member.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"     * @param transactionList refers to all transactions of a specific member.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionListPanel(ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        super(FXML);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        transactionListView.setItems(transactionList);","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        transactionListView.setCellFactory(listView -\u003e new TransactionListViewCell());","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * Customs {@code ListCell} that displays the graphics of a {@code Transaction} using a {@code TransactionCard}.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    class TransactionListViewCell extends ListCell\u003cTransaction\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        protected void updateItem(Transaction transaction, boolean empty) {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            super.updateItem(transaction, empty);","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            if (empty || transaction \u003d\u003d null) {","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                setText(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                setGraphic(new TransactionCard(transaction).getRoot());","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Morrow1ndy":10,"HolmesJJ":44}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"zzybluebell"},"content":" * API of UI component.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zzybluebell":1,"-":12}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for message to be shown about alert dialog pane.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"     * Stands for logger to log events happened in UiManager.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"     * Locates ezFoodie Logo.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ezfoodie_icon.png\";","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"     * Refers to backend logic.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"     * Refers to the window to be shown when user first opens ezFoodie.","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"     * Starts the UI (and the Application).","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"     * Gets ezFoodie logo.","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"     * @param imagePath path of the images stored.","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"     * @return Image object of ezFoodie logo.","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"     * Alerts user by showing alert dialog.","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"     * @param type alert type.","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"     * @param title tile of alert.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"     * @param headerText header text to show.","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"     * @param contentText content text to show.","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"     * Returns after the user has closed the alert dialog.","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"     * @param owner stage.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"     * @param type alert type.","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"     * @param title title to show.","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"     * @param headerText header text to show.","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"     * @param contentText content text to show.","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Morrow1ndy":37,"zzybluebell":5,"-":86}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zzybluebell":4,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_80 {","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 80px;","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_90 {","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 90px;","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_100 {","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 100px;","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_290 {","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 290px;","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_298 {","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 298px;","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_300 {","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"Morrow1ndy"},"content":".cell_label_width_400 {","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"Morrow1ndy"},"content":"    -fx-pref-width: 400px;","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_500 {","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 500px;","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":".cell_label_width_700 {","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"    -fx-pref-width: 700px;","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":".cell_label_left_right_border_1 {","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"    -fx-border-width: 0 1 0 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"HolmesJJ"},"content":"#filterField, #memberListPanel, #memberWebpage {","lastModifiedDate":"2021-10-10"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2021-11-05"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"HolmesJJ"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-11-05"},{"lineNumber":393,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":394,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":395,"author":{"gitId":"HolmesJJ"},"content":"#tier {","lastModifiedDate":"2021-11-05"},{"lineNumber":396,"author":{"gitId":"HolmesJJ"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-11-05"},{"lineNumber":397,"author":{"gitId":"HolmesJJ"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-11-05"},{"lineNumber":398,"author":{"gitId":"HolmesJJ"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-11-05"},{"lineNumber":399,"author":{"gitId":"HolmesJJ"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-11-05"},{"lineNumber":400,"author":{"gitId":"HolmesJJ"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-11-05"},{"lineNumber":401,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":402,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":403,"author":{"gitId":"HolmesJJ"},"content":".bronze {","lastModifiedDate":"2021-11-05"},{"lineNumber":404,"author":{"gitId":"HolmesJJ"},"content":"    -fx-background-color: #cd7f32;","lastModifiedDate":"2021-11-05"},{"lineNumber":405,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":406,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":407,"author":{"gitId":"HolmesJJ"},"content":".silver {","lastModifiedDate":"2021-11-05"},{"lineNumber":408,"author":{"gitId":"HolmesJJ"},"content":"    -fx-background-color: #b2b2b2;","lastModifiedDate":"2021-11-05"},{"lineNumber":409,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":410,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":411,"author":{"gitId":"HolmesJJ"},"content":".gold {","lastModifiedDate":"2021-11-05"},{"lineNumber":412,"author":{"gitId":"HolmesJJ"},"content":"    -fx-background-color: #ffd700;","lastModifiedDate":"2021-11-05"},{"lineNumber":413,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":414,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":415,"author":{"gitId":"HolmesJJ"},"content":".platinum {","lastModifiedDate":"2021-11-05"},{"lineNumber":416,"author":{"gitId":"HolmesJJ"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2021-11-05"},{"lineNumber":417,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":418,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":419,"author":{"gitId":"HolmesJJ"},"content":".split_line {","lastModifiedDate":"2021-11-05"},{"lineNumber":420,"author":{"gitId":"Morrow1ndy"},"content":"    strokeWidth\u003d3.0","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"HolmesJJ"},"content":"#summaryBox .label {","lastModifiedDate":"2021-11-05"},{"lineNumber":424,"author":{"gitId":"HolmesJJ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":426,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"HolmesJJ"},"content":"#reservationList .label {","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"HolmesJJ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":430,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":431,"author":{"gitId":"HolmesJJ"},"content":"#transactionList .label {","lastModifiedDate":"2021-11-06"},{"lineNumber":432,"author":{"gitId":"HolmesJJ"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":433,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":435,"author":{"gitId":"Morrow1ndy"},"content":"#helpBox .label {","lastModifiedDate":"2021-11-07"},{"lineNumber":436,"author":{"gitId":"Morrow1ndy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Morrow1ndy":8,"-":349,"HolmesJJ":80}},{"path":"src/main/resources/view/HelpBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cVBox fx:id\u003d\"helpBox\" alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"          minHeight\u003d\"105\"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"          GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Exit Program\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"exit\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Login as Manager\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"login\"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$login\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Logout as Manager\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"logout\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"List Members\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"list -mem/\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Add New Member\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"addNewMember\"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$addNewMember\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Delete Member by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"deleteMemberByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$deleteMemberByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Delete Member by Index Number\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"deleteMemberByIndexNumber\"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$deleteMemberByIndexNumber\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Find Member by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"findMemberByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$findMemberByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Find Members by Name\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"findMembersByName\"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$findMembersByName\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Find Members by Phone\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"findMembersByPhone\"","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$findMembersByPhone\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Find Members by Email\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"findMembersByEmail\"","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$findMembersByEmail\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Find Members by Registration Date\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"findMembersByRegistrationDate\"","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$findMembersByRegistrationDate\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"View Member Profile\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"viewMemberProfile\"","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$viewMemberProfile\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Edit Member by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"editMemberByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$editMemberByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Edit Member by Index Number\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"editMemberByIndexNumber\"","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$editMemberByIndexNumber\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Add Transaction by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"addTransactionByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$addTransactionByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Edit Transaction by Member ID and Transaction ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"editTransactionByMemberIdTransactionId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$editTransactionByMemberIdTransactionId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Delete Transaction by Member ID and Transaction ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"deleteTransactionByMemberIdTransactionId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$deleteTransactionByMemberIdTransactionId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Add Reservation by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"addReservationByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$addReservationByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Edit Reservation by Member ID and Transaction ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"editReservationByMemberIdTransactionId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$editReservationByMemberIdTransactionId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Delete Reservation by Member ID and Transaction ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"deleteReservationByMemberIdTransactionId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$deleteReservationByMemberIdTransactionId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":206,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Sort Members by Credit in Ascending Order\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"sortMembersByCreditInAsc\"","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$sortMembersByCreditInAsc\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Sort Members by Credit in Descending Order\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"sortMembersByCreditInDesc\"","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$sortMembersByCreditInDesc\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":219,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":223,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Redeem Point by Member ID\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":224,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"redeemPointByMemberId\"","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$redeemPointByMemberId\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Redeem Point by Index Number\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":231,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"redeemPointIndexNumber\"","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$redeemPointByIndexNumber\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Summary\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"summary\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":243,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":246,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":247,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"Clear ezFoodie Data\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"clear\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"Morrow1ndy"},"content":"                \u003cInsets bottom\u003d\"10\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"Morrow1ndy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cLabel fx:id\u003d\"url\"","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"Morrow1ndy"},"content":"                   styleClass\u003d\"cell_small_label, cell_label_width_400\"","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"Morrow1ndy"},"content":"                   text\u003d\"\\$url\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cButton fx:id\u003d\"copyButton\"","lastModifiedDate":"2021-11-07"},{"lineNumber":261,"author":{"gitId":"Morrow1ndy"},"content":"                    mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-11-07"},{"lineNumber":262,"author":{"gitId":"Morrow1ndy"},"content":"                    onAction\u003d\"#copyUrl\"","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"Morrow1ndy"},"content":"                    text\u003d\"Copy URL\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"Morrow1ndy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"Morrow1ndy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Morrow1ndy":266}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"#copyButton {","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"    -fx-background-color: #555555;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Morrow1ndy":4,"-":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"helpBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Morrow1ndy":9,"-":21,"HolmesJJ":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"         title\u003d\"ezFoodie\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cImage url\u003d\"@/images/ezfoodie_icon.png\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Summary\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            \u003cMenuItem fx:id\u003d\"summaryMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSummary\" text\u003d\"Summary\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        \u003cVBox fx:id\u003d\"memberList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"          \u003cStackPane fx:id\u003d\"memberListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        \u003cStackPane fx:id\u003d\"statusBarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Morrow1ndy":2,"-":55,"HolmesJJ":6}},{"path":"src/main/resources/view/MemberDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"  \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"tier\" text\u003d\"\\$tier\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"ID: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Phone: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Email: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Address: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Registration: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"registrationTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$registrationTime\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Credit: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"credit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$credit\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_100\" text\u003d\"Point: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"point\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$point\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"      \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"  \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    \u003cVBox fx:id\u003d\"reservationList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"700\" prefWidth\u003d\"700\"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"      \u003cLabel alignment\u003d\"CENTER\" styleClass\u003d\"cell_big_label, cell_label_width_700\" text\u003d\"Reservations\" \u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"          \u003cInsets top\u003d\"5\" bottom\u003d\"5\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"      \u003cStackPane fx:id\u003d\"reservationListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    \u003cVBox fx:id\u003d\"transactionList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"500\" prefWidth\u003d\"500\"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"      \u003cLabel alignment\u003d\"CENTER\" styleClass\u003d\"cell_big_label, cell_label_width_500\" text\u003d\"Transactions\" \u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"          \u003cInsets top\u003d\"5\" bottom\u003d\"5\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"      \u003cStackPane fx:id\u003d\"transactionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":79}},{"path":"src/main/resources/view/MemberDetailsListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"  \u003cListView fx:id\u003d\"memberDetailsListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":8}},{"path":"src/main/resources/view/MemberListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"tier\" text\u003d\"\\$tier\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"ID: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"Phone: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"Email: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"Credit: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"credit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$credit\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"Point: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"zzybluebell"},"content":"        \u003cLabel fx:id\u003d\"point\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$point\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_80\" text\u003d\"Coming: \" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"reservation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$reservation\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzybluebell":1,"-":31,"HolmesJJ":24}},{"path":"src/main/resources/view/MemberListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"  \u003cListView fx:id\u003d\"memberListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"HolmesJJ":1}},{"path":"src/main/resources/view/MemberViewWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Member Details\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cImage url\u003d\"@/images/member_icon.png\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"      \u003cVBox fx:id\u003d\"memberDetailsList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"1230\" prefWidth\u003d\"1230\"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            minHeight\u003d\"680\" prefHeight\u003d\"680\"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        \u003cStackPane fx:id\u003d\"memberDetailsListPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":26,"HolmesJJ":7}},{"path":"src/main/resources/view/ReservationListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"40\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"id\" styleClass\u003d\"cell_small_label, cell_label_width_90\"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"dateTime\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"               styleClass\u003d\"cell_small_label, cell_label_width_298, cell_label_left_right_border_1\"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$dateTime\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label, cell_label_width_290\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":30}},{"path":"src/main/resources/view/ReservationListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"  \u003cListView fx:id\u003d\"reservationListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"  \u003cLabel fx:id\u003d\"loginStatus\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":12,"HolmesJJ":1}},{"path":"src/main/resources/view/SummaryBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"  \u003cVBox fx:id\u003d\"summaryBox\"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"        alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"        minHeight\u003d\"105\"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"        GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"      \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"Total number of Members: \" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalNumberOfMembers\"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"\\$totalNumberOfMembers\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"Total number of transactions: \" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalNumberOfTransactions\"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"\\$totalNumberOfTransactions\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"Total amount of transactions: \" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalAmountOfTransactions\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Morrow1ndy"},"content":"             text\u003d\"\\$totalAmountOfTransactions\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total number of transactions in past month (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalNumberOfTransactionsInPastMonth\"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalNumberOfTransactionsInPastMonth\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total amount of transactions in past month (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalAmountOfTransactionsInPastMonth\"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalAmountOfTransactionsInPastMonth\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total number of transactions in past 3 months (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalNumberOfTransactionsInPast3Months\"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalNumberOfTransactionsInPast3Months\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total amount of transactions in past 3 months (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalAmountOfTransactionsInPast3Months\"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalAmountOfTransactionsInPast3Months\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total number of transactions in past 6 months (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalNumberOfTransactionsInPast6Months\"","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalNumberOfTransactionsInPast6Months\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel styleClass\u003d\"cell_small_label, cell_label_width_600\"","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"Total amount of transactions in past 6 months (including current month): \" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cLabel fx:id\u003d\"totalAmountOfTransactionsInPast6Months\"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Morrow1ndy"},"content":"             styleClass\u003d\"cell_small_label\"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"             text\u003d\"\\$totalAmountOfTransactionsInPast6Months\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"Morrow1ndy":37,"HolmesJJ":60}},{"path":"src/main/resources/view/SummaryWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Morrow1ndy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Summary\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cImage url\u003d\"@/images/summary_icon.png\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Morrow1ndy"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"summaryBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Morrow1ndy"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"Morrow1ndy"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Morrow1ndy":23,"HolmesJJ":9}},{"path":"src/main/resources/view/TransactionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"40\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"id\" styleClass\u003d\"cell_small_label, cell_label_width_90\"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$id\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"dateTime\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"               styleClass\u003d\"cell_small_label, cell_label_width_298, cell_label_left_right_border_1\"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$dateTime\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel alignment\u003d\"CENTER\" fx:id\u003d\"billing\" styleClass\u003d\"cell_small_label, cell_label_width_90\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"               text\u003d\"\\$billing\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":30}},{"path":"src/main/resources/view/TransactionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"  \u003cListView fx:id\u003d\"transactionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"HolmesJJ":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        final Index fifthMemberIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(fifthMemberIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(fifthMemberIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(fifthMemberIndex.equals(fifthMemberIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(fifthMemberIndex.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(fifthMemberIndex.equals(5.0f));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(fifthMemberIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"HolmesJJ":7}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Morrow1ndy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/ezfoodie_icon.png\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Morrow1ndy":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBER_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.PermissionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.JsonAccountStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.storage.JsonEzFoodieStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        JsonAccountStorage accountStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAccountStorage(temporaryFolder.resolve(\"account.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        JsonEzFoodieStorage ezFoodieStorage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                new JsonEzFoodieStorage(temporaryFolder.resolve(\"ezfoodie.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        StorageManager storage \u003d new StorageManager(accountStorage, ezFoodieStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        logic \u003d new LogicManager(model, storage, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        String deleteCommand \u003d DeleteCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 9\";","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.STAFF);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        // Setup LogicManager with JsonEzFoodieIoExceptionThrowingStub","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        JsonAccountStorage accountStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAccountIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAccount.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        JsonEzFoodieStorage ezFoodieStorage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"                new JsonEzFoodieIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionEzFoodie.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        StorageManager storage \u003d new StorageManager(accountStorage, ezFoodieStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        logic \u003d new LogicManager(model, storage, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"        String addMemberCommand \u003d AddMemberCommand.COMMAND_WORD + MEMBER_DESC + NAME_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"zzybluebell"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"zzybluebell"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withCredit(\"0\").withPoint(\"0\").withTags()","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"zzybluebell"},"content":"                .withTransactions().withReservations().build();","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.addMember(expectedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"        assertCommandFailure(addMemberCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"    public void getUpdatedMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getUpdatedMemberList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"            Model expectedModel) throws CommandException, ParseException, PermissionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(model.getAccount(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"    private static class JsonAccountIoExceptionThrowingStub extends JsonAccountStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        private JsonAccountIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"zzybluebell"},"content":"        public void saveAccount(ReadOnlyAccount account, Path filePath) throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"    private static class JsonEzFoodieIoExceptionThrowingStub extends JsonEzFoodieStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"        private JsonEzFoodieIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"        public void saveEzFoodie(ReadOnlyEzFoodie ezFoodie, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zzybluebell":8,"-":138,"HolmesJJ":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"zzybluebell"},"content":" * Contains integration tests (interaction with the Model) for {@code AddMemberCommand}.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_newMember_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.addMember(validMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"        assertCommandSuccess(new AddMemberCommand(validMember), model,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"                String.format(AddMemberCommand.MESSAGE_SUCCESS, validMember), expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        Member memberInList \u003d model.getEzFoodie().getMemberList().get(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"        assertCommandFailure(new AddMemberCommand(memberInList), model, AddMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zzybluebell":4,"-":31,"HolmesJJ":11}},{"path":"src/test/java/seedu/address/logic/commands/AddMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"zzybluebell"},"content":"public class AddMemberCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public void constructor_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMemberCommand(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_memberAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        ModelStubAcceptingMemberAdded modelStub \u003d new ModelStubAcceptingMemberAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"zzybluebell"},"content":"        CommandResult commandResult \u003d new AddMemberCommand(validMember).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"        assertEquals(String.format(AddMemberCommand.MESSAGE_SUCCESS, validMember), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Arrays.asList(validMember), modelStub.membersAdded);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"        AddMemberCommand addMemberCommand \u003d new AddMemberCommand(validMember);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        ModelStub modelStub \u003d new ModelStubWithMember(validMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"zzybluebell"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"                AddMemberCommand.MESSAGE_DUPLICATE_MEMBER, () -\u003e addMemberCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        Member alice \u003d new MemberBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        Member bob \u003d new MemberBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"zzybluebell"},"content":"        AddMemberCommand addAliceCommand \u003d new AddMemberCommand(alice);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"        AddMemberCommand addBobCommand \u003d new AddMemberCommand(bob);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"        AddMemberCommand addAliceCommandCopy \u003d new AddMemberCommand(alice);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        public Path getAccountFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccountFilePath(Path accountFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodieFilePath(Path ezFoodieFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccount(ReadOnlyAccount account) {","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyAccount getAccount() {","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodie(ReadOnlyEzFoodie newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"Morrow1ndy"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberListForView() {","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"Morrow1ndy"},"content":"        public void updateFilteredMemberListForView(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"        public void updateSortedMemberList(Comparator\u003cMember\u003e comparator) {","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"     * A Model stub that contains a single member.","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStubWithMember extends ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"        private final Member member;","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        ModelStubWithMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"            this.member \u003d member;","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"            return this.member.isSameMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"     * A Model stub that always accept the member being added.","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStubAcceptingMemberAdded extends ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"        final ArrayList\u003cMember\u003e membersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"            return membersAdded.stream().anyMatch(member::isSameMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"            membersAdded.add(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"            return new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Morrow1ndy":10,"zzybluebell":10,"-":140,"HolmesJJ":77}},{"path":"src/test/java/seedu/address/logic/commands/AddReservationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"public class AddReservationCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void constructor_nullReservation_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddReservationCommand(null, null));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_reservationAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        ModelStubAcceptingReservationAdded modelStub \u003d new ModelStubAcceptingReservationAdded(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        Member validMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        Id validId \u003d validMember.getId();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        Reservation validReservation \u003d new ReservationBuilder().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        CommandResult commandResult \u003d new AddReservationCommand(validReservation, validId).execute(modelStub);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"        Member expectedMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(String.format(AddReservationCommand.MESSAGE_SUCCESS, \"Id: \" + expectedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + expectedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Reservation: \" + \"[\" + validReservation + \"]\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(expectedMember.getReservations().contains(validReservation));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        Member alice \u003d new MemberBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        Member bob \u003d new MemberBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        Reservation aliceReservation \u003d new ReservationBuilder().withId(\"100001\").withDateTime(\"2099-12-29 00:00\")","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"stephanie-csy"},"content":"                .withRemark(\"2 people\")","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        Reservation bobReservation \u003d new ReservationBuilder().withId(\"100002\").withDateTime(\"2099-12-30 00:00\")","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"stephanie-csy"},"content":"                .withRemark(\"3 people\")","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        AddReservationCommand addAliceReservationCommand \u003d new AddReservationCommand(aliceReservation, alice.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        AddReservationCommand addBobReservationCommand \u003d new AddReservationCommand(bobReservation, bob.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(addAliceReservationCommand.equals(addAliceReservationCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        AddReservationCommand addAliceReservationCommandCopy \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"                new AddReservationCommand(aliceReservation, alice.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(addAliceReservationCommand.equals(addAliceReservationCommandCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceReservationCommand.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceReservationCommand.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceReservationCommand.equals(addBobReservationCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        public Path getAccountFilePath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccountFilePath(Path accountFilePath) {","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodieFilePath(Path ezFoodieFilePath) {","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccount(ReadOnlyAccount account) {","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyAccount getAccount() {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodie(ReadOnlyEzFoodie newData) {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"Morrow1ndy"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberListForView() {","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"Morrow1ndy"},"content":"        public void updateFilteredMemberListForView(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"        public void updateSortedMemberList(Comparator\u003cMember\u003e comparator) {","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"     * A Model stub that always accept the reservation being added.","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStubAcceptingReservationAdded extends ModelStub {","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"        final Model model;","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"        public ModelStubAcceptingReservationAdded(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"            this.model \u003d model;","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"            requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"            model.setMember(target, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"            return model.getUpdatedMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"            model.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":12,"stephanie-csy":2,"HolmesJJ":218}},{"path":"src/test/java/seedu/address/logic/commands/AddTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"public class AddTransactionCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void constructor_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTransactionCommand(null, null));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_transactionAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        Member validMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        Id validId \u003d validMember.getId();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        Transaction validTransaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        CommandResult commandResult \u003d new AddTransactionCommand(validTransaction, validId).execute(modelStub);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Morrow1ndy"},"content":"        Member expectedMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(String.format(AddTransactionCommand.MESSAGE_SUCCESS, \"Id: \" + expectedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + expectedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + validTransaction + \"]\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(validTransaction,","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                expectedMember.getTransactions().get(expectedMember.getTransactions().size() - 1));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        Member alice \u003d new MemberBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        Member bob \u003d new MemberBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        Transaction aliceTransaction \u003d new TransactionBuilder().withTimestamp(\"1612137600000\").withBilling(\"123.45\")","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        Transaction bobTransaction \u003d new TransactionBuilder().withTimestamp(\"1612224000000\").withBilling(\"543.21\")","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        AddTransactionCommand addAliceTransactionCommand \u003d new AddTransactionCommand(aliceTransaction, alice.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        AddTransactionCommand addBobTransactionCommand \u003d new AddTransactionCommand(bobTransaction, bob.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(addAliceTransactionCommand.equals(addAliceTransactionCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        AddTransactionCommand addAliceTransactionCommandCopy \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                new AddTransactionCommand(aliceTransaction, alice.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(addAliceTransactionCommand.equals(addAliceTransactionCommandCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceTransactionCommand.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceTransactionCommand.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(addAliceTransactionCommand.equals(addBobTransactionCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        public Path getAccountFilePath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccountFilePath(Path accountFilePath) {","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        public Path getEzFoodieFilePath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodieFilePath(Path ezFoodieFilePath) {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        public void setAccount(ReadOnlyAccount account) {","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyAccount getAccount() {","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        public void setEzFoodie(ReadOnlyEzFoodie newData) {","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        public ReadOnlyEzFoodie getEzFoodie() {","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        public boolean hasMember(Member member, Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"Morrow1ndy"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberListForView() {","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"Morrow1ndy"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"Morrow1ndy"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"Morrow1ndy"},"content":"        public void updateFilteredMemberListForView(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"Morrow1ndy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"        public void updateSortedMemberList(Comparator\u003cMember\u003e comparator) {","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"     * A Model stub that always accept the transaction being added.","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"    private class ModelStubAcceptingTransactionAdded extends ModelStub {","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        final Model model;","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"        public ModelStubAcceptingTransactionAdded(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"            this.model \u003d model;","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"            requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"            model.setMember(target, editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getUpdatedMemberList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"            return model.getUpdatedMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"            model.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Morrow1ndy":11,"HolmesJJ":218}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_emptyEzFoodie_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_nonEmptyEzFoodie_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setEzFoodie(new EzFoodie());","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":25,"HolmesJJ":8}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Morrow1ndy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Morrow1ndy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Morrow1ndy":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BILLING;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_TIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESERVATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_ID_AMY \u003d \"00001\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_ID_BOB \u003d \"00002\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_PHONE_BOB \u003d \"82222222\";","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"    public static final String VALID_RESERVATION_ID_200_AMY \u003d \"000001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"    public static final String VALID_RESERVATION_ID_200_BOB \u003d \"000001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"    public static final String VALID_RESERVATION_ID_300_BOB \u003d \"000002\";","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_REGISTRATION_TIMESTAMP_AMY \u003d \"1609459200000\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_REGISTRATION_TIMESTAMP_BOB \u003d \"1609549200000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_RESERVATION_DATE_TIME_200 \u003d \"2021-01-01 00:00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_RESERVATION_DATE_TIME_300 \u003d \"2021-01-02 00:00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_RESERVATION_REMARK_200 \u003d \"2 people\";","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_RESERVATION_REMARK_300 \u003d \"3 people\";","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_CREDIT_AMY \u003d \"200\";","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_CREDIT_BOB \u003d \"500\";","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"    public static final String VALID_POINT_AMY \u003d \"200\";","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"    public static final String VALID_POINT_BOB \u003d \"500\";","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_ID_200_AMY \u003d \"000001\";","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_ID_200_BOB \u003d \"000001\";","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_ID_300_BOB \u003d \"000002\";","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_TIMESTAMP_200 \u003d \"1609459200000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_TIMESTAMP_300 \u003d \"1609542000000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_BILLING_200 \u003d \"200.00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    public static final String VALID_TRANSACTION_BILLING_300 \u003d \"300.00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"    public static final String MEMBER_DESC \u003d \" \" + PREFIX_MEMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"Morrow1ndy"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRANSACTION_DESC \u003d \" \" + PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRANSACTION_BILLING_DESC_200 \u003d \" \" + PREFIX_BILLING + VALID_TRANSACTION_BILLING_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    public static final String TRANSACTION_BILLING_DESC_300 \u003d \" \" + PREFIX_BILLING + VALID_TRANSACTION_BILLING_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public static final String RESERVATION_DESC \u003d \" \" + PREFIX_RESERVATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    public static final String RESERVATION_DATE_TIME_DESC_200 \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"            \" \" + PREFIX_DATE_TIME + VALID_RESERVATION_DATE_TIME_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public static final String RESERVATION_DATE_TIME_DESC_300 \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            \" \" + PREFIX_DATE_TIME + VALID_RESERVATION_DATE_TIME_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"    public static final String RESERVATION_REMARK_DESC_200 \u003d \" \" + PREFIX_REMARK + VALID_RESERVATION_REMARK_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    public static final String RESERVATION_REMARK_DESC_300 \u003d \" \" + PREFIX_REMARK + VALID_RESERVATION_REMARK_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    public static final String INVALID_TRANSACTION_BILLING_DESC \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            \" \" + PREFIX_BILLING + \"$123.12\"; // \u0027$\u0027 not allowed in billing","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    public static final String INVALID_RESERVATION_DATE_TIME_DESC \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"            \" \" + PREFIX_DATE_TIME + \"2021-0*-01\"; // \u0027*\u0027 not allowed in dateTime","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    public static final String INVALID_RESERVATION_REMARK_DESC \u003d \" \" + PREFIX_REMARK + \" \"; // \u0027 \u0027 not allowed in remark","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_AMY;","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_BOB;","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        DESC_AMY \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        DESC_BOB \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"     * - the ezFoodie, updated member list and selected member in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie expectedEzFoodie \u003d new EzFoodie(actualModel.getEzFoodie());","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e expectedUpdatedList \u003d new ArrayList\u003c\u003e(actualModel.getUpdatedMemberList());","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedEzFoodie, actualModel.getEzFoodie());","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUpdatedList, actualModel.getUpdatedMemberList());","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"     * Updates {@code model}\u0027s filtered list to show only the member at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"     * {@code model}\u0027s ezFoodie.","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"    public static void showMemberAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getUpdatedMemberList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        Member member \u003d model.getUpdatedMemberList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        final String[] splitName \u003d member.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(1, model.getUpdatedMemberList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Morrow1ndy":1,"stephanie-csy":3,"zzybluebell":3,"mukundrs":4,"-":105,"HolmesJJ":59}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteMemberCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToDelete \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_SUCCESS, memberToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getUpdatedMemberList().size() + 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToDelete \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_SUCCESS, memberToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        showNoMember(expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        // ensures that outOfBoundIndex is still in bounds of ezFoodie list","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEzFoodie().getMemberList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteFirstCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand deleteSecondCommand \u003d new DeleteMemberCommand(INDEX_SECOND_MEMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"    private void showNoMember(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        model.updateFilteredMemberList(p -\u003e false);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(model.getUpdatedMemberList().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":74,"HolmesJJ":36}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteTransactionCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_validMemberIdTransactionIdUnfilteredList_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        Transaction transactionToDelete \u003d memberToEdit.getTransactions().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        DeleteTransactionCommand deleteCommand \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"                new DeleteTransactionCommand(memberToEdit.getId(), transactionToDelete.getId());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e expectedTransactions \u003d memberToEdit.getTransactions().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e !transaction.equals(transactionToDelete)).collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        Credit expectedCredit \u003d new Credit(\"\" + Math.min(expectedTransactions.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                .mapToInt(t -\u003e (int) t.getBilling().getDoubleValue()).sum(), Credit.MAX));","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"        Point expectedPoint \u003d memberToEdit.getPoint();","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        Member expectedMember \u003d new MemberBuilder(memberToEdit).withCredit(expectedCredit.value)","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                .withPoint(expectedPoint.value).withTransactions(expectedTransactions.toArray(Transaction[]::new))","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setMember(memberToEdit, expectedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(DeleteTransactionCommand.MESSAGE_SUCCESS, \"Id: \" + expectedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + expectedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + transactionToDelete + \"]\");","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"zzybluebell":1,"HolmesJJ":53}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CREDIT_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d new MemberBuilder().withId(memberToEdit.getId().value)","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                .withTimestamp(memberToEdit.getTimestamp().value)","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                .withCredit(memberToEdit.getCredit().value)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"zzybluebell"},"content":"                .withPoint(memberToEdit.getPoint().value)","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                .withTransactions(memberToEdit.getTransactions().toArray(Transaction[]::new))","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                .withReservations(memberToEdit.getReservations().toArray(Reservation[]::new)).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(editedMember).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_SUCCESS, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), new EzFoodie(model.getEzFoodie()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        Index indexLastMember \u003d Index.fromOneBased(model.getUpdatedMemberList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        Member lastMember \u003d model.getUpdatedMemberList().get(indexLastMember.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        MemberBuilder memberInList \u003d new MemberBuilder(lastMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d memberInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"                .withCredit(VALID_CREDIT_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"                .withTransactions(lastMember.getTransactions().toArray(Transaction[]::new))","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"                .withCredit(lastMember.getCredit().value).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(indexLastMember, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_SUCCESS, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), new EzFoodie(model.getEzFoodie()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setMember(lastMember, editedMember);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, new EditMemberDescriptor());","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_SUCCESS, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), new EzFoodie(model.getEzFoodie()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        Member memberInFilteredList \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        Member editedMember \u003d new MemberBuilder(memberInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_SUCCESS, editedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager(new Account(), new EzFoodie(model.getEzFoodie()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setMember(model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased()), editedMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_duplicateMemberUnfilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        Member firstMember \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(firstMember).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_SECOND_MEMBER, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(editCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_duplicateMemberFilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        // edit member in filtered list into a duplicate in ezFoodie","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        Member memberInList \u003d model.getEzFoodie().getMemberList().get(INDEX_SECOND_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                new EditMemberDescriptorBuilder(memberInList).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(editCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_invalidMemberIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getUpdatedMemberList().size() + 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"     * but smaller than size of ezFoodie","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_invalidMemberIndexFilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        // ensures that outOfBoundIndex is still in bounds of ezFoodie list","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEzFoodie().getMemberList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand editCommand \u003d new EditMemberCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        final EditMemberCommand standardCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, DESC_AMY);","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor copyDescriptor \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand commandWithSameValues \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, copyDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_SECOND_MEMBER, DESC_AMY)));","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_FIRST_MEMBER, DESC_BOB)));","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"zzybluebell":1,"-":102,"HolmesJJ":82}},{"path":"src/test/java/seedu/address/logic/commands/EditMemberDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberDescriptorTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptorWithSameValues \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":49,"HolmesJJ":9}},{"path":"src/test/java/seedu/address/logic/commands/EditTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TRANSACTION;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditTransactionCommand.EditTransactionDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditTransactionDescriptorBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"public class EditTransactionCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        Member memberToEdit \u003d model.getUpdatedMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        Transaction transactionToEdit \u003d memberToEdit.getTransactions().get(INDEX_FIRST_TRANSACTION.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder().withId(transactionToEdit.getId().value)","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                .withTimestamp(transactionToEdit.getTimestamp().value)","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                .withBilling(transactionToEdit.getBilling().value).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        EditTransactionDescriptor descriptor \u003d new EditTransactionDescriptorBuilder(editedTransaction).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        EditTransactionCommand editCommand \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                new EditTransactionCommand(memberToEdit.getId(), transactionToEdit.getId(), descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTransaction\u003e expectedTransactions \u003d new ArrayList\u003c\u003e(memberToEdit.getTransactions());","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        expectedTransactions.stream().filter(transaction -\u003e transaction.isSameId(transactionToEdit)).findAny()","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                .ifPresent(transaction -\u003e expectedTransactions","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                        .set(expectedTransactions.indexOf(transaction), editedTransaction));","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        Credit expectedCredit \u003d new Credit(\"\" + Math.min(expectedTransactions.stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                .mapToInt(t -\u003e (int) t.getBilling().getDoubleValue()).sum(), Credit.MAX));","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        Member expectedMember \u003d new MemberBuilder(memberToEdit).withCredit(expectedCredit.value)","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                .withTransactions(expectedTransactions.toArray(Transaction[]::new)).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.setMember(memberToEdit, expectedMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        Transaction updatedTransaction \u003d expectedMember.getTransactions().stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                .filter(transaction -\u003e transaction.isSameId(transactionToEdit)).findAny().orElse(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(EditTransactionCommand.MESSAGE_SUCCESS, \"Id: \" + expectedMember.getId()","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Name: \" + expectedMember.getName()","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                + \"; Transaction: \" + \"[\" + updatedTransaction + \"]\");","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"HolmesJJ":62}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"                false, true, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Morrow1ndy":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.CARL;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ELLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.FIONA;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private Model expectedModel \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_zeroKeywords_noMemberFound() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Collections.emptyList(), model.getUpdatedMemberList());","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_multipleKeywords_multipleMembersFound() {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getUpdatedMemberList());","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":66,"HolmesJJ":18}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE,","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"                true, false, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Morrow1ndy":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel \u003d new ModelManager(new Account(), model.getEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":33,"HolmesJJ":7}},{"path":"src/test/java/seedu/address/logic/commands/LoginCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.util.EncryptUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class LoginCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String CORRECT_PLAINTEXT_PASSWORD \u003d \"123456\";","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private static final String WRONG_PLAINTEXT_PASSWORD \u003d \"654321\";","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_inStaffLoginStatus_success() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.STAFF);","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        Password password \u003d new Password(EncryptUtil.hash(CORRECT_PLAINTEXT_PASSWORD));","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(new LoginCommand(password), model, LoginCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_inStaffLoginStatus_failure() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.STAFF);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        Password password \u003d new Password(EncryptUtil.hash(WRONG_PLAINTEXT_PASSWORD));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(new LoginCommand(password), model, LoginCommand.MESSAGE_FAILURE, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_inManagerLoginStatus_success() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        Password password \u003d new Password(EncryptUtil.hash(CORRECT_PLAINTEXT_PASSWORD));","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(new LoginCommand(password), model, LoginCommand.MESSAGE_ALREADY_IN_STATUS, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"HolmesJJ":48}},{"path":"src/test/java/seedu/address/logic/commands/LogoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class LogoutCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_inStaffLoginStatus_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.STAFF);","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(new LogoutCommand(), model, LogoutCommand.MESSAGE_ALREADY_IN_STATUS, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_inManagerLoginStatus_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(new LogoutCommand(), model, LogoutCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"HolmesJJ":31}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    private Model expectedModel \u003d new ModelManager(new Account(), getTypicalEzFoodie(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        CreditSortComparator sortCreditAscComparator \u003d new CreditSortComparator(SortStatus.ASC);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        CreditSortComparator sortCreditDescComparator \u003d new CreditSortComparator(SortStatus.DESC);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand sortCreditAscCommand \u003d new SortCommand(sortCreditAscComparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand sortCreditDescCommand \u003d new SortCommand(sortCreditDescComparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(sortCreditAscCommand.equals(sortCreditAscCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand sortCreditAscCommandCopy \u003d new SortCommand(sortCreditAscComparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(sortCreditAscCommand.equals(sortCreditAscCommandCopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(sortCreditAscCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(sortCreditAscCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(sortCreditAscCommand.equals(sortCreditDescCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_sortCreditAsc_membersSorted() {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_ASC;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        CreditSortComparator comparator \u003d prepareComparator(SortStatus.ASC);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand command \u003d new SortCommand(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.updateSortedMemberList(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE, FIONA, GEORGE, CARL, ALICE, BENSON), model.getUpdatedMemberList());","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public void execute_sortCreditDesc_membersSorted() {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d SortCommand.MESSAGE_SORT_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        CreditSortComparator comparator \u003d prepareComparator(SortStatus.DESC);","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand command \u003d new SortCommand(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        expectedModel.updateSortedMemberList(comparator);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Arrays.asList(BENSON, ALICE, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getUpdatedMemberList());","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    private CreditSortComparator prepareComparator(SortStatus sortStatus) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        return new CreditSortComparator(sortStatus);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"HolmesJJ":85}},{"path":"src/test/java/seedu/address/logic/parser/AddMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBER_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"zzybluebell"},"content":"public class AddMemberCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zzybluebell"},"content":"    private AddMemberCommandParser parser \u003d new AddMemberCommandParser(model, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"zzybluebell"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withCredit(\"0\").withPoint(\"0\")","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"zzybluebell"},"content":"                .withTags(VALID_TAG_FRIEND).withTransactions().withReservations().build();","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"zzybluebell"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"zzybluebell"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"zzybluebell"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"                + ADDRESS_DESC_BOB + ADDRESS_DESC_AMY + TAG_DESC_FRIEND, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"zzybluebell"},"content":"        Member expectedMemberMultipleTags \u003d new MemberBuilder(AMY).withCredit(\"0\").withPoint(\"0\")","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).withTransactions().withReservations().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddMemberCommand(expectedMemberMultipleTags));","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"zzybluebell"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withCredit(\"0\").withPoint(\"0\").withTags()","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"                .withTransactions().withReservations().build();","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"zzybluebell"},"content":"        assertParseSuccess(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"zzybluebell"},"content":"                + ADDRESS_DESC_AMY, new AddMemberCommand(expectedMember));","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + VALID_NAME_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_AMY + VALID_PHONE_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + VALID_EMAIL_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + VALID_ADDRESS_AMY,","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + VALID_NAME_AMY + VALID_PHONE_AMY + VALID_EMAIL_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"                + VALID_ADDRESS_AMY, expectedMessage);","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"        assertParseFailure(parser, MEMBER_DESC + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"zzybluebell"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zzybluebell":38,"-":86,"HolmesJJ":24}},{"path":"src/test/java/seedu/address/logic/parser/AddReservationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RESERVATION_DATE_TIME_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RESERVATION_REMARK_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESERVATION_DATE_TIME_DESC_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESERVATION_DATE_TIME_DESC_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESERVATION_DESC;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESERVATION_REMARK_DESC_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RESERVATION_REMARK_DESC_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_DATE_TIME_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_ID_200_AMY;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_REMARK_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"import seedu.address.logic.commands.AddReservationCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"mukundrs"},"content":"class AddReservationCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"mukundrs"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"mukundrs"},"content":"    private AddReservationCommandParser parser \u003d new AddReservationCommandParser(model, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"mukundrs"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"        Reservation expectedReservation \u003d new ReservationBuilder().withId(VALID_RESERVATION_ID_200_AMY)","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"                .withDateTime(VALID_RESERVATION_DATE_TIME_200)","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                .withRemark(VALID_RESERVATION_REMARK_200).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"mukundrs"},"content":"        Id expectedId \u003d new Id(VALID_ID_AMY);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + RESERVATION_DESC + RESERVATION_DATE_TIME_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                        + RESERVATION_REMARK_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                new AddReservationCommand(expectedReservation, expectedId));","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        // multiple dateTimes - last dateTime accepted","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, RESERVATION_DESC + RESERVATION_DATE_TIME_DESC_300","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                        + RESERVATION_DATE_TIME_DESC_200 + RESERVATION_REMARK_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                new AddReservationCommand(expectedReservation, expectedId));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, RESERVATION_DESC + RESERVATION_DATE_TIME_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                        + RESERVATION_REMARK_DESC_300 + RESERVATION_REMARK_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                new AddReservationCommand(expectedReservation, expectedId));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReservationCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        // missing id prefix","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, RESERVATION_DESC + RESERVATION_DATE_TIME_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"                + RESERVATION_REMARK_DESC_200, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        // invalid dateTime","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, RESERVATION_DESC + INVALID_RESERVATION_DATE_TIME_DESC","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                        + RESERVATION_REMARK_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"                DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        // invalid remark","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, RESERVATION_DESC + RESERVATION_DATE_TIME_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                        + INVALID_RESERVATION_REMARK_DESC + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"                Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + RESERVATION_DATE_TIME_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"                        + RESERVATION_REMARK_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReservationCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"stephanie-csy":3,"mukundrs":28,"HolmesJJ":56}},{"path":"src/test/java/seedu/address/logic/parser/AddTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Morrow1ndy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRANSACTION_BILLING_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRANSACTION_BILLING_DESC_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRANSACTION_BILLING_DESC_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRANSACTION_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_BILLING_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_ID_200_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_TIMESTAMP_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Morrow1ndy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Morrow1ndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.logic.commands.AddTransactionCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Morrow1ndy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.TransactionBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Morrow1ndy"},"content":"class AddTransactionCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Morrow1ndy"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Morrow1ndy"},"content":"    private AddTransactionCommandParser parser \u003d new AddTransactionCommandParser(model, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Morrow1ndy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Morrow1ndy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        Transaction expectedTransaction \u003d new TransactionBuilder().withId(VALID_TRANSACTION_ID_200_AMY)","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                .withTimestamp(VALID_TRANSACTION_TIMESTAMP_200).withBilling(VALID_TRANSACTION_BILLING_200).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Morrow1ndy"},"content":"        Id expectedId \u003d new Id(VALID_ID_AMY);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TRANSACTION_DESC + TRANSACTION_BILLING_DESC_200","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                + ID_DESC_AMY, new AddTransactionCommand(expectedTransaction, expectedId));","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        // multiple billings - last transaction accepted","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, TRANSACTION_DESC + TRANSACTION_BILLING_DESC_300","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                + TRANSACTION_BILLING_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                new AddTransactionCommand(expectedTransaction, expectedId));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        // missing id prefix","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, TRANSACTION_DESC + TRANSACTION_BILLING_DESC_200, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Morrow1ndy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Morrow1ndy"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Morrow1ndy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        // invalid billing","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, TRANSACTION_DESC + INVALID_TRANSACTION_BILLING_DESC + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                Billing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TRANSACTION_BILLING_DESC_200 + ID_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Morrow1ndy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Morrow1ndy"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Morrow1ndy":31,"HolmesJJ":37}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * outside of the DeleteMemberCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * same path through the DeleteMemberCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteMemberCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    private DeleteMemberCommandParser parser \u003d new DeleteMemberCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validArgs_returnsDeleteMemberCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"                + PREFIX_INDEX + \" 1\", new DeleteMemberCommand(INDEX_FIRST_MEMBER));","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d new Id(\"10001\");","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                + PREFIX_ID + \" \" + id.value, new DeleteMemberCommand(id));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":23,"HolmesJJ":18}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" * outside of the DeleteTransactionCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * same path through the DeleteTransactionCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteTransactionCommandParserTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private DeleteTransactionCommandParser parser \u003d new DeleteTransactionCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validArgs_returnsDeleteTransactionCommand() {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.member.Id memberId \u003d new seedu.address.model.member.Id(\"10001\");","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        seedu.address.model.transaction.Id transactionId \u003d new seedu.address.model.transaction.Id(\"100001\");","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"                + memberId.value + transactionId.value, new DeleteTransactionCommand(memberId, transactionId));","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"HolmesJJ":37}},{"path":"src/test/java/seedu/address/logic/parser/EditMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberCommandParserTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    private EditMemberCommandParser parser \u003d new EditMemberCommandParser();","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\",","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" -5\" + NAME_DESC_AMY,","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 0\" + NAME_DESC_AMY,","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_NAME_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_TAG_DESC,","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"                + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + PHONE_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Member} being edited,","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + TAG_EMPTY","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" 1\" + INVALID_NAME_DESC","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                        + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                + PHONE_DESC_BOB + TAG_DESC_HUSBAND + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"        userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"        userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"                + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased()","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"        userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_PHONE_DESC + ADDRESS_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"        String userInput \u003d \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":137,"HolmesJJ":95}},{"path":"src/test/java/seedu/address/logic/parser/EditTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRANSACTION_BILLING_DESC;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRANSACTION;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditTransactionCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class EditTransactionCommandParserTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private EditTransactionCommandParser parser \u003d new EditTransactionCommandParser(ExecutionStatus.TEST);","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        // no index specified","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        // no field specified","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \" 10001100001\",","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"                EditTransactionCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \" \" + PREFIX_TRANSACTION + \" \" + PREFIX_ID + \" 10001100001\"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                + INVALID_TRANSACTION_BILLING_DESC, Billing.MESSAGE_CONSTRAINTS); // invalid billing","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"HolmesJJ":50}},{"path":"src/test/java/seedu/address/logic/parser/EzFoodieParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASC;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.ExecutionStatus;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.LoginStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.AddMemberCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.LoginCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.LogoutCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.RegistrationDateContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"public class EzFoodieParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    private final EzFoodieParser parser \u003d new EzFoodieParser(model, ExecutionStatus.TEST);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_addMember() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"zzybluebell"},"content":"        Member member \u003d new MemberBuilder(AMY).withCredit(\"0\").withPoint(\"0\").withTransactions()","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"zzybluebell"},"content":"                .withReservations().build();","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"zzybluebell"},"content":"        AddMemberCommand command \u003d (AddMemberCommand) parser.parseCommand(MemberUtil.getAddCommand(member));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"zzybluebell"},"content":"        assertEquals(new AddMemberCommand(member), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_deleteMemberByIndex() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand command \u003d (DeleteMemberCommand) parser.parseCommand(DeleteMemberCommand.COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                + \" \" + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + INDEX_FIRST_MEMBER.getOneBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST_MEMBER), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_deleteMemberById() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        Id id \u003d new Id(\"10001\");","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        DeleteMemberCommand command \u003d (DeleteMemberCommand) parser.parseCommand(DeleteMemberCommand.COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"                + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \" \" + id.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new DeleteMemberCommand(id), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_sortAsc() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"                + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_ASC);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new SortCommand(new CreditSortComparator(SortStatus.ASC)), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_sortDesc() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        LoginStatus.setLoginStatus(LoginStatus.MANAGER);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"                + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new SortCommand(new CreditSortComparator(SortStatus.DESC)), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_editMember() throws Exception {","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(member).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        EditMemberCommand command \u003d (EditMemberCommand) parser.parseCommand(EditMemberCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"                + PREFIX_MEMBER + \" \" + PREFIX_INDEX + \" \" + INDEX_FIRST_MEMBER.getOneBased() + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"                + MemberUtil.getEditMemberDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new EditMemberCommand(INDEX_FIRST_MEMBER, descriptor), command);","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_login() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(parser.parseCommand(LoginCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"                + Password.DEFAULT_PLAINTEXT_PASSWORD) instanceof LoginCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_logout() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(parser.parseCommand(LogoutCommand.COMMAND_WORD) instanceof LogoutCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(parser.parseCommand(LogoutCommand.COMMAND_WORD + \" 3\") instanceof LogoutCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_findById() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"10001\", \"10002\", \"10003\");","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new FindCommand(new IdContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_findByName() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_NAME + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_findByPhone() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"87328807\", \"99272758\", \"62784325\");","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_PHONE + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new FindCommand(new PhoneContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_findByEmail() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"ben@gmail.com\", \"sunny@gmail.com\", \"jerry@gmail.com\");","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_EMAIL + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new FindCommand(new EmailContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"    public void parseCommand_findByRegistrationDate() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"2021-01-01\", \"2021-01-02\", \"2021-01-10\");","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" \" + PREFIX_DATE + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new FindCommand(new RegistrationDateContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER) instanceof ListCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" \" + PREFIX_MEMBER + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zzybluebell":10,"-":68,"HolmesJJ":127}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.IdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.RegistrationDateContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validIdArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(\"10001\", \"10002\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \" 10001 10002\",","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_ID + \" \\n 10001 \\n \\t 10002  \\t\",","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_NAME + \" Alice Bob\",","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"87328807\", \"99272758\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_PHONE + \" 87328807 99272758\",","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_PHONE","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"                + \" \\n 87328807 \\n \\t 99272758  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(\"ben@gmail.com\", \"sunny@gmail.com\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_EMAIL + \" ben@gmail.com sunny@gmail.com\",","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_EMAIL","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"                + \" \\n ben@gmail.com \\n \\t sunny@gmail.com  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validRegistrationDateArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(new RegistrationDateContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"                Arrays.asList(\"2021-01-01\", \"2021-01-02\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_DATE","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                + \" 2021-01-01 2021-01-02\", expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_DATE","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                + \" \\n 2021-01-01 \\n \\t 2021-01-02  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":29,"HolmesJJ":69}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER, new ListCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"HolmesJJ":25}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private static final String VALID_PHONE \u003d \"92345678\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":188,"HolmesJJ":8}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASC;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"                SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        public void parse_validSortCreditAscArgs_returnsSortCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"                new SortCommand(new CreditSortComparator(SortStatus.ASC));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_ASC,","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void parse_validSortCreditDescArgs_returnsSortCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        SortCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                new SortCommand(new CreditSortComparator(SortStatus.DESC));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_MEMBER + \" \" + PREFIX_CREDIT + \" \" + PREFIX_DESC,","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"HolmesJJ":44}},{"path":"src/test/java/seedu/address/model/EzFoodieTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"public class EzFoodieTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private final EzFoodie ezFoodie \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Collections.emptyList(), ezFoodie.getMemberList());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ezFoodie.resetData(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public void resetData_withValidReadOnlyEzFoodie_replacesData() {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie newData \u003d getTypicalEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.resetData(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(newData, ezFoodie);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public void resetData_withDuplicateMembers_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        // Two members with the same identity fields","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e newMembers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodieStub newData \u003d new EzFoodieStub(newMembers);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e ezFoodie.resetData(newData));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ezFoodie.hasMember(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_memberNotInEzFoodie_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(ezFoodie.hasMember(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_memberInEzFoodie_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.addMember(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ezFoodie.hasMember(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_memberWithSameIdentityFieldsInEzFoodie_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.addMember(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ezFoodie.hasMember(editedAlice));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public void getMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e ezFoodie.getMemberList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"     * A stub ReadOnlyEzFoodie whose members list can violate interface constraints.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"    private static class EzFoodieStub implements ReadOnlyEzFoodie {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        private final ObservableList\u003cMember\u003e members \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodieStub(Collection\u003cMember\u003e members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"            this.members.setAll(members);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"            return members;","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":63,"HolmesJJ":39}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.status.SortStatus;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.CreditSortComparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.EzFoodieBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(new EzFoodie(), new EzFoodie(modelManager.getEzFoodie()));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        userPrefs.setEzFoodieFilePath(Paths.get(\"ezfoodie/file/path\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        userPrefs.setEzFoodieFilePath(Paths.get(\"new/ezfoodie/file/path\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodieFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEzFoodieFilePath(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodieFilePath_validPath_setsEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        Path path \u003d Paths.get(\"ezfoodie/file/path\");","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        modelManager.setEzFoodieFilePath(path);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(path, modelManager.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMember(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_memberNotInEzFoodie_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(modelManager.hasMember(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    public void hasMember_memberInEzFoodie_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        modelManager.addMember(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(modelManager.hasMember(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    public void getUpdatedMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getUpdatedMemberList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        Account account \u003d new Account();","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie ezFoodie \u003d new EzFoodieBuilder().withMember(ALICE).withMember(BENSON).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie differentEzFoodie \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        modelManager \u003d new ModelManager(account, ezFoodie, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(account, ezFoodie, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        // different ezFoodie -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(account, differentEzFoodie, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        modelManager.updateFilteredMemberList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(account, ezFoodie, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        // different sortedList -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        modelManager.updateSortedMemberList(new CreditSortComparator(SortStatus.DESC));","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(account, ezFoodie, userPrefs)));","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        modelManager.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        differentUserPrefs.setEzFoodieFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(modelManager.equals(new ModelManager(account, ezFoodie, differentUserPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":99,"HolmesJJ":40}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public void setEzFoodieFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setEzFoodieFilePath(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":19,"HolmesJJ":2}},{"path":"src/test/java/seedu/address/model/member/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":35,"HolmesJJ":1}},{"path":"src/test/java/seedu/address/model/member/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":67,"HolmesJJ":1}},{"path":"src/test/java/seedu/address/model/member/MemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"public class MemberTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e member.getTags().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public void isSameMember() {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ALICE.isSameMember(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(ALICE.isSameMember(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        // different id, phone and email, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        // email differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withId(VALID_ID_BOB).withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB.toUpperCase()).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        Member aliceCopy \u003d new MemberBuilder(ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":60,"HolmesJJ":47}},{"path":"src/test/java/seedu/address/model/member/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").withPhone(\"62345678\")","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":65,"HolmesJJ":10}},{"path":"src/test/java/seedu/address/model/member/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"HolmesJJ":1}},{"path":"src/test/java/seedu/address/model/member/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // exactly 8 numbers","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"stephanie-csy":3,"-":36,"HolmesJJ":1}},{"path":"src/test/java/seedu/address/model/member/UniqueMemberListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.member;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"public class UniqueMemberListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private final UniqueMemberList uniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public void contains_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.contains(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public void contains_memberNotInList_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void contains_memberInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public void contains_memberWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(uniqueMemberList.contains(editedAlice));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public void add_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.add(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    public void add_duplicateMember_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.add(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_nullTargetMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(null, ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_nullEditedMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(ALICE, null));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_targetMemberNotInList_throwsMemberNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.setMember(ALICE, ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_editedMemberIsSameMember_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.setMember(ALICE, ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        expectedUniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_editedMemberHasSameIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.setMember(ALICE, editedAlice);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        expectedUniqueMemberList.add(editedAlice);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_editedMemberHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.setMember(ALICE, BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    public void setMember_editedMemberHasNonUniqueIdentity_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMember(ALICE, BOB));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    public void remove_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.remove(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"    public void remove_memberDoesNotExist_throwsMemberNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.remove(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"    public void remove_existingMember_removesMember() {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.remove(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers_nullUniqueMemberList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((UniqueMemberList) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers_uniqueMemberList_replacesOwnListWithProvidedUniqueMemberList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.setMembers(expectedUniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((List\u003cMember\u003e) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e memberList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        uniqueMemberList.setMembers(memberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"    public void setMembers_listWithDuplicateMembers_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cMember\u003e listWithDuplicateMembers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMembers(listWithDuplicateMembers));","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"            -\u003e uniqueMemberList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"HolmesJJ":170}},{"path":"src/test/java/seedu/address/model/reservation/ReservationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mukundrs"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"mukundrs"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"mukundrs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"mukundrs"},"content":"public class ReservationTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"mukundrs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"mukundrs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"mukundrs"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"mukundrs"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(invalidDateTime));","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"mukundrs"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"mukundrs"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"mukundrs"},"content":"        // null dateTime String","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"mukundrs"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"mukundrs"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"mukundrs":25}},{"path":"src/test/java/seedu/address/model/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.model.transaction;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class TransactionTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Billing(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public void constructor_invalidTransactionName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        String invalidTransactionAmount \u003d \"\";","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Billing(invalidTransactionAmount));","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public void isValidTransactionName() {","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        // null transaction amount","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e Billing.isValidBilling(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"HolmesJJ":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.storage.JsonAdaptedMember.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"public class JsonAdaptedMemberTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INVALID_ID \u003d \"3A001\";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INVALID_REGISTRATION_TIMESTAMP \u003d \"00001\u0026234\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INVALID_CREDIT \u003d \"*99\";","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"zzybluebell"},"content":"    private static final String INVALID_POINT \u003d \"*99\";","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    private static final String VALID_REGISTRATION_TIMESTAMP \u003d BENSON.getTimestamp().toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    private static final String VALID_CREDIT \u003d BENSON.getCredit().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"zzybluebell"},"content":"    private static final String VALID_POINT \u003d BENSON.getPoint().toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"stephanie-csy"},"content":"    private static final List\u003cJsonAdaptedTransaction\u003e VALID_TRANSACTIONS \u003d BENSON.getTransactions().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"            .map(JsonAdaptedTransaction::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"mukundrs"},"content":"    private static final List\u003cJsonAdaptedReservation\u003e VALID_RESERVATIONS \u003d BENSON.getReservations().stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"mukundrs"},"content":"            .map(JsonAdaptedReservation::new)","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"mukundrs"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_validMemberDetails_returnsMember() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(BENSON);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(BENSON, member.toModelType());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(INVALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(null, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_invalidTimestamp_throwsIllegalValueException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"zzybluebell"},"content":"                        INVALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"Morrow1ndy"},"content":"        String expectedMessage \u003d Timestamp.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_nullTimestamp_throwsIllegalValueException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"zzybluebell"},"content":"                        null, VALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"Morrow1ndy"},"content":"                MISSING_FIELD_MESSAGE_FORMAT, Timestamp.class.getSimpleName());","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_invalidCredit_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, INVALID_CREDIT, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d Credit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_nullCredit_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, null, VALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"                MISSING_FIELD_MESSAGE_FORMAT, Credit.class.getSimpleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"zzybluebell"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"zzybluebell"},"content":"    public void toModelType_invalidPoint_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"zzybluebell"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"zzybluebell"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, INVALID_POINT, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"zzybluebell"},"content":"        String expectedMessage \u003d Point.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"zzybluebell"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"zzybluebell"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"zzybluebell"},"content":"    public void toModelType_nullPoint_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"zzybluebell"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"zzybluebell"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, null, VALID_TRANSACTIONS,","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"zzybluebell"},"content":"                        VALID_RESERVATIONS, VALID_TAGS);","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"zzybluebell"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"zzybluebell"},"content":"                MISSING_FIELD_MESSAGE_FORMAT, Point.class.getSimpleName());","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"zzybluebell"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"                new JsonAdaptedMember(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"zzybluebell"},"content":"                        VALID_REGISTRATION_TIMESTAMP, VALID_CREDIT, VALID_POINT,","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"zzybluebell"},"content":"                        VALID_TRANSACTIONS, VALID_RESERVATIONS, invalidTags);","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Morrow1ndy":2,"stephanie-csy":3,"zzybluebell":56,"mukundrs":3,"-":73,"HolmesJJ":98}},{"path":"src/test/java/seedu/address/storage/JsonEzFoodieStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.HOON;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.IDA;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"public class JsonEzFoodieStorageTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonEzFoodieStorageTest\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    @TempDir","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public void readEzFoodie_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEzFoodie(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    private java.util.Optional\u003cReadOnlyEzFoodie\u003e readEzFoodie(String filePath) throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        return new JsonEzFoodieStorage(Paths.get(filePath)).readEzFoodie(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                : null;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        assertFalse(readEzFoodie(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEzFoodie(\"notJsonFormatEzFoodie.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public void readEzFoodie_invalidMemberEzFoodie_throwDataConversionException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEzFoodie(\"invalidMemberEzFoodie.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public void readEzFoodie_invalidAndValidMemberEzFoodie_throwDataConversionException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEzFoodie(\"invalidAndValidMemberEzFoodie.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public void readAndSaveEzFoodie_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEzFoodie.json\");","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie original \u003d getTypicalEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        JsonEzFoodieStorage jsonEzFoodieStorage \u003d new JsonEzFoodieStorage(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        jsonEzFoodieStorage.saveEzFoodie(original, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyEzFoodie readBack \u003d jsonEzFoodieStorage.readEzFoodie(filePath).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(original, new EzFoodie(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        original.addMember(HOON);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        original.removeMember(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        jsonEzFoodieStorage.saveEzFoodie(original, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        readBack \u003d jsonEzFoodieStorage.readEzFoodie(filePath).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(original, new EzFoodie(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        original.addMember(IDA);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        jsonEzFoodieStorage.saveEzFoodie(original); // file path not specified","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        readBack \u003d jsonEzFoodieStorage.readEzFoodie().get(); // file path not specified","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(original, new EzFoodie(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie_nullEzFoodie_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEzFoodie(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"     * Saves {@code ezFoodie} at the specified {@code filePath}.","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    private void saveEzFoodie(ReadOnlyEzFoodie ezFoodie, String filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"            new JsonEzFoodieStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"                    .saveEzFoodie(ezFoodie, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    public void saveEzFoodie_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEzFoodie(new EzFoodie(), null));","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"HolmesJJ":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableEzFoodieTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.testutil.TypicalMembers;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class JsonSerializableEzFoodieTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEzFoodieTest\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private static final Path TYPICAL_MEMBERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMembersEzFoodie.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private static final Path INVALID_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMemberEzFoodie.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private static final Path DUPLICATE_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMemberEzFoodie.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_typicalMembersFile_success() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        JsonSerializableEzFoodie dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEMBERS_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"                JsonSerializableEzFoodie.class).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie ezFoodieFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie typicalMembersEzFoodie \u003d TypicalMembers.getTypicalEzFoodie();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(ezFoodieFromFile, typicalMembersEzFoodie);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_invalidMemberFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        JsonSerializableEzFoodie dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEMBER_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                JsonSerializableEzFoodie.class).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public void toModelType_duplicateMembers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        JsonSerializableEzFoodie dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEMBER_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                JsonSerializableEzFoodie.class).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEzFoodie.MESSAGE_DUPLICATE_MEMBER,","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":27,"HolmesJJ":20}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        userPrefs.setEzFoodieFilePath(Paths.get(\"ezfoodie.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"HolmesJJ":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalAccount.getTypicalAccount;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalEzFoodie;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyAccount;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.ReadOnlyEzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        JsonAccountStorage accountStorage \u003d new JsonAccountStorage(getTempFilePath(\"a\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        JsonEzFoodieStorage ezFoodieStorage \u003d new JsonEzFoodieStorage(getTempFilePath(\"ef\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        storageManager \u003d new StorageManager(accountStorage, ezFoodieStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    public void ezFoodieReadSave() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"         * {@link JsonEzFoodieStorage} class.","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonEzFoodieStorageTest} class.","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie original \u003d getTypicalEzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        storageManager.saveEzFoodie(original);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyEzFoodie retrieved \u003d storageManager.readEzFoodie().get();","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(original, new EzFoodie(retrieved));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    public void getEzFoodieFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        assertNotNull(storageManager.getEzFoodieFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public void accountReadSave() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        /*","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"         * {@link JsonAccountStorage} class.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAccountStorageTest} class.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"         */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        Account original \u003d getTypicalAccount();","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        storageManager.saveAccount(original);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        ReadOnlyAccount retrieved \u003d storageManager.readAccount().get();","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(original, new Account(retrieved));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public void getAccountFilePath() {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        assertNotNull(storageManager.getAccountFilePath());","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":56,"HolmesJJ":34}},{"path":"src/test/java/seedu/address/testutil/AccountBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.account.Password;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building Account objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" *     {@code Account account \u003d new AccountBuilder().withPassword(\"123456\").build();}","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class AccountBuilder {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private Account account;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public AccountBuilder() {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        account \u003d new Account();","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public AccountBuilder(Account account) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        this.account \u003d account;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Adds a new {@code Member} to the {@code EzFoodie} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public AccountBuilder withPassword(Password password) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        account.setPassword(password);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public Account build() {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        return account;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"HolmesJJ":34}},{"path":"src/test/java/seedu/address/testutil/EditMemberDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building EditMemberDescriptor objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"public class EditMemberDescriptorBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private EditMemberDescriptor descriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder(EditMemberDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        this.descriptor \u003d new EditMemberDescriptor(descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an {@code EditMemberDescriptor} with fields containing {@code member}\u0027s details","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setName(member.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setPhone(member.getPhone());","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setEmail(member.getEmail());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setAddress(member.getAddress());","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setTags(member.getTags());","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Name} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Phone} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Email} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Address} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMemberDescriptor}","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     * that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public EditMemberDescriptor build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return descriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"HolmesJJ":87}},{"path":"src/test/java/seedu/address/testutil/EditTransactionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditTransactionCommand.EditTransactionDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building EditTransactionDescriptor objects.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class EditTransactionDescriptorBuilder {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private EditTransactionDescriptor descriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptorBuilder() {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditTransactionDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptorBuilder(EditTransactionDescriptor descriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        this.descriptor \u003d new EditTransactionDescriptor(descriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an {@code EditTransactionDescriptor} with fields containing {@code transaction}\u0027s details","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptorBuilder(Transaction transaction) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        descriptor \u003d new EditTransactionDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setTimestamp(transaction.getTimestamp());","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setBilling(transaction.getBilling());","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Timestamp} of the {@code EditTransactionDescriptor} that we are building.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptorBuilder withTimestamp(String timestamp) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setTimestamp(new Timestamp(timestamp));","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Billing} of the {@code EditTransactionDescriptor} that we are building.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptorBuilder withBilling(String billing) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        descriptor.setBilling(new Billing(billing));","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public EditTransactionDescriptor build() {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        return descriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"HolmesJJ":51}},{"path":"src/test/java/seedu/address/testutil/EzFoodieBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building EzFoodie objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" *     {@code EzFoodie ef \u003d new EzFoodieBuilder().withMember(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class EzFoodieBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private EzFoodie ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodieBuilder() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodieBuilder(EzFoodie ezFoodie) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        this.ezFoodie \u003d ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Adds a new {@code Member} to the {@code EzFoodie} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodieBuilder withMember(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        ezFoodie.addMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public EzFoodie build() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        return ezFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"HolmesJJ":34}},{"path":"src/test/java/seedu/address/testutil/MemberBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stephanie-csy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"stephanie-csy"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"stephanie-csy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Id;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"import seedu.address.model.member.Point;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"mukundrs"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"stephanie-csy"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":" * A utility class to help with building Member objects.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"stephanie-csy"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"stephanie-csy"},"content":"public class MemberBuilder {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_ID \u003d \"00101\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_TIMESTAMP \u003d \"1610236800000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_CREDIT \u003d \"200\";","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"    public static final String DEFAULT_POINT \u003d \"200\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"stephanie-csy"},"content":"    private Id id;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"stephanie-csy"},"content":"    private Name name;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"stephanie-csy"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"    private Email email;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"    private Address address;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Morrow1ndy"},"content":"    private Timestamp timestamp;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    private Credit credit;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"zzybluebell"},"content":"    private Point point;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    private List\u003cTransaction\u003e transactions;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"    private List\u003cReservation\u003e reservations;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"stephanie-csy"},"content":"     * Creates a {@code MemberBuilder} with the default details.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"stephanie-csy"},"content":"    public MemberBuilder() {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"stephanie-csy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"stephanie-csy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"stephanie-csy"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"stephanie-csy"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d new Timestamp(DEFAULT_TIMESTAMP);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        credit \u003d new Credit(DEFAULT_CREDIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"zzybluebell"},"content":"        point \u003d new Point(DEFAULT_POINT);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"stephanie-csy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"stephanie-csy"},"content":"        reservations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"stephanie-csy"},"content":"     * Initializes the MemberBuilder with the data of {@code memberToCopy}.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"stephanie-csy"},"content":"    public MemberBuilder(Member memberToCopy) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d memberToCopy.getId();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"stephanie-csy"},"content":"        name \u003d memberToCopy.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"stephanie-csy"},"content":"        phone \u003d memberToCopy.getPhone();","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"stephanie-csy"},"content":"        email \u003d memberToCopy.getEmail();","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"stephanie-csy"},"content":"        address \u003d memberToCopy.getAddress();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d memberToCopy.getTimestamp();","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        credit \u003d memberToCopy.getCredit();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"zzybluebell"},"content":"        point \u003d memberToCopy.getPoint();","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"stephanie-csy"},"content":"        tags \u003d new HashSet\u003c\u003e(memberToCopy.getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        transactions \u003d new ArrayList\u003c\u003e(memberToCopy.getTransactions());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"stephanie-csy"},"content":"        reservations \u003d new ArrayList\u003c\u003e(memberToCopy.getReservations());","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"stephanie-csy"},"content":"     * Sets the {@code Id} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"stephanie-csy"},"content":"    public MemberBuilder withId(String id) {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"stephanie-csy"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"stephanie-csy"},"content":"     * Sets the {@code Name} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"stephanie-csy"},"content":"    public MemberBuilder withName(String name) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"stephanie-csy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Phone} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Email} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withEmail(String email) {","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"stephanie-csy"},"content":"     * Sets the {@code Address} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"stephanie-csy"},"content":"    public MemberBuilder withAddress(String address) {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"stephanie-csy"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Timestamp} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withTimestamp(String timestamp) {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        this.timestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Credit} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withCredit(String credit) {","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"        this.credit \u003d new Credit(credit);","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"zzybluebell"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"zzybluebell"},"content":"     * Sets the {@code Point} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"zzybluebell"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"zzybluebell"},"content":"    public MemberBuilder withPoint(String point) {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"zzybluebell"},"content":"        this.point \u003d new Point(point);","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"zzybluebell"},"content":"        return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"zzybluebell"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"zzybluebell"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the {@code transactions} into a {@code List\u003cTransaction\u003e} and set it to the {@code Member}","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"     * that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withTransactions(Transaction ... transactions) {","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        this.transactions \u003d SampleDataUtil.getTransactionList(transactions);","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"mukundrs"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"     * Parses the {@code reservations} into a {@code List\u003cReservation\u003e} and set it to the {@code Member}","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"mukundrs"},"content":"     * that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"mukundrs"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"    public MemberBuilder withReservations(Reservation ... reservations) {","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"stephanie-csy"},"content":"        this.reservations \u003d SampleDataUtil.getReservationList(reservations);","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"mukundrs"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"mukundrs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"mukundrs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"stephanie-csy"},"content":"    public Member build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"zzybluebell"},"content":"        return new Member(id, name, phone, email, address, timestamp, credit, point, transactions, reservations, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"stephanie-csy"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Morrow1ndy":1,"stephanie-csy":97,"zzybluebell":14,"mukundrs":7,"HolmesJJ":56}},{"path":"src/test/java/seedu/address/testutil/MemberUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * A utility class for Member.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"public class MemberUtil {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an add command string for adding the {@code member}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public static String getAddCommand(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getMemberDetails(member);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the part of command string for the given {@code member}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static String getMemberDetails(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"zzybluebell"},"content":"        sb.append(PREFIX_MEMBER + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(PREFIX_NAME + \" \" + member.getName().fullName + \" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(PREFIX_PHONE + \" \" + member.getPhone().value + \" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(PREFIX_EMAIL + \" \" + member.getEmail().value + \" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        sb.append(PREFIX_ADDRESS + \" \" + member.getAddress().value + \" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        member.getTags().stream().forEach(","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            s -\u003e sb.append(PREFIX_TAG + \" \" + s.tagName + \" \")","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the part of command string for the given {@code EditMemberDescriptor}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public static String getEditMemberDescriptorDetails(EditMemberDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"zzybluebell":2,"-":44,"HolmesJJ":18}},{"path":"src/test/java/seedu/address/testutil/ReservationBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Id;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building Reservation objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class ReservationBuilder {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"stephanie-csy"},"content":"    public static final String DEFAULT_ID \u003d \"100001\";","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_DATE_TIME \u003d \"2099-12-31 10:00\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_REMARK \u003d \"3 people\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private Id id;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private DateTime dateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private Remark remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code ReservationBuilder} with the default details.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationBuilder() {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATE_TIME);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * Initializes the ReservationBuilder with the data of {@code reservationToCopy}.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationBuilder(Reservation reservationToCopy) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"stephanie-csy"},"content":"        id \u003d reservationToCopy.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        dateTime \u003d reservationToCopy.getDateTime();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        remark \u003d reservationToCopy.getRemark();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"stephanie-csy"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"stephanie-csy"},"content":"     * Sets the {@code ReservationId} of the {@code Reservation} that we are building.","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"stephanie-csy"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"stephanie-csy"},"content":"    public ReservationBuilder withId(String id) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"stephanie-csy"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"stephanie-csy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"stephanie-csy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code DateTime} of the {@code Reservation} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationBuilder withDateTime(String dateTime) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Remark} of the {@code Reservation} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public ReservationBuilder withRemark(String remark) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public Reservation build() {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"stephanie-csy"},"content":"        return new Reservation(id, dateTime, remark);","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"stephanie-csy":10,"HolmesJJ":57}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the middle index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        return Index.fromOneBased(model.getUpdatedMemberList().size() / 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the last index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        return Index.fromOneBased(model.getUpdatedMemberList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the member in the {@code model}\u0027s member list at {@code index}.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public static Member getMember(Model model, Index index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        return model.getUpdatedMemberList().get(index.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"HolmesJJ":8}},{"path":"src/test/java/seedu/address/testutil/TransactionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Id;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * A utility class to help with building Transaction objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class TransactionBuilder {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_ID \u003d \"000101\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_TIMESTAMP \u003d \"1611136800000\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public static final String DEFAULT_BILLING \u003d \"345.67\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private Id id;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private Timestamp timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private Billing billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Creates a {@code TransactionBuilder} with the default details.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionBuilder() {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d new Timestamp(DEFAULT_TIMESTAMP);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        billing \u003d new Billing(DEFAULT_BILLING);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * Initializes the TransactionBuilder with the data of {@code transactionToCopy}.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionBuilder(Transaction transactionToCopy) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        id \u003d transactionToCopy.getId();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        timestamp \u003d transactionToCopy.getTimestamp();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        billing \u003d transactionToCopy.getBilling();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Id} of the {@code Transaction} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionBuilder withId(String id) {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Timestamp} of the {@code Transaction} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionBuilder withTimestamp(String timestamp) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        this.timestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * Sets the {@code Billing} of the {@code Transaction} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public TransactionBuilder withBilling(String billing) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        this.billing \u003d new Billing(billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    public Transaction build() {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        return new Transaction(id, timestamp, billing);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"HolmesJJ":67}},{"path":"src/test/java/seedu/address/testutil/TypicalAccount.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Account;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * A utility class containing an account object to be used in tests.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class TypicalAccount {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private TypicalAccount() {} // prevents instantiation","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an {@code Account}.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * @throws ParseException if the typical password is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public static Account getTypicalAccount() throws ParseException {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        return new AccountBuilder().withPassword(ParserUtil.parsePassword(\"654321\")).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"HolmesJJ":21}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    public static final Index INDEX_FIRST_MEMBER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    public static final Index INDEX_SECOND_MEMBER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    public static final Index INDEX_THIRD_MEMBER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    public static final Index INDEX_FIRST_TRANSACTION \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":9,"HolmesJJ":5}},{"path":"src/test/java/seedu/address/testutil/TypicalMembers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CREDIT_AMY;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CREDIT_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINT_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"zzybluebell"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POINT_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REGISTRATION_TIMESTAMP_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REGISTRATION_TIMESTAMP_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_DATE_TIME_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_DATE_TIME_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_ID_200_AMY;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_ID_200_BOB;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"stephanie-csy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_ID_300_BOB;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_REMARK_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RESERVATION_REMARK_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_BILLING_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_BILLING_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_ID_200_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_ID_200_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_ID_300_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_TIMESTAMP_200;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRANSACTION_TIMESTAMP_300;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.EzFoodie;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.Timestamp;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.member.Member;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.DateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Billing;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"import seedu.address.model.transaction.Transaction;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":" * A utility class containing a list of {@code Member} objects to be used in tests.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"public class TypicalMembers {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member ALICE \u003d new MemberBuilder().withId(\"00001\").withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"zzybluebell"},"content":"            .withPhone(\"94351253\").withTimestamp(\"1609459200000\").withCredit(\"610\").withPoint(\"610\")","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            .withTransactions(","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                    new Transaction(new seedu.address.model.transaction.Id(\"000001\"), new Timestamp(\"1611100800000\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                            new Billing(\"567.54\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                    new Transaction(new seedu.address.model.transaction.Id(\"000002\"), new Timestamp(\"1611187200000\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                            new Billing(\"43.34\"))","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            ).withReservations(","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"stephanie-csy"},"content":"                    new Reservation(","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                            new seedu.address.model.reservation.Id(\"000001\"), new DateTime(\"2021-01-20 00:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                            new Remark(\"3 people\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"stephanie-csy"},"content":"                    new Reservation(","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"                            new seedu.address.model.reservation.Id(\"000002\"), new DateTime(\"2021-01-21 00:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"                            new Remark(\"1 people\"))","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            ).withTags(\"friends\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member BENSON \u003d new MemberBuilder().withId(\"00002\").withName(\"Benson Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"zzybluebell"},"content":"            .withPhone(\"98765432\").withTimestamp(\"1609462800000\").withCredit(\"645\").withPoint(\"645\")","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"            .withTransactions(new Transaction(new seedu.address.model.transaction.Id(\"000001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                    new Timestamp(\"1611104400000\"), new Billing(\"645.39\")))","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            .withReservations(new Reservation(new seedu.address.model.reservation.Id(\"000001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"stephanie-csy"},"content":"                    new DateTime(\"2021-01-20 01:00\"), new Remark(\"4 people\")))","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member CARL \u003d new MemberBuilder().withId(\"00003\").withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609466400000\").withCredit(\"272\").withPoint(\"272\")","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"            .withTransactions(new Transaction(new seedu.address.model.transaction.Id(\"000001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"                    new Timestamp(\"1611108000000\"), new Billing(\"272.57\")))","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"            .withReservations(new Reservation(new seedu.address.model.reservation.Id(\"000001\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"                    new DateTime(\"2021-01-20 02:00\"), new Remark(\"2 people\"))).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member DANIEL \u003d new MemberBuilder().withId(\"00004\").withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609470000000\").withCredit(\"0\").withPoint(\"0\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member ELLE \u003d new MemberBuilder().withId(\"00005\").withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"stephanie-csy"},"content":"            .withPhone(\"94821224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609473600000\").withCredit(\"0\").withPoint(\"0\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member FIONA \u003d new MemberBuilder().withId(\"00006\").withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"stephanie-csy"},"content":"            .withPhone(\"94824427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609477200000\").withCredit(\"0\").withPoint(\"0\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member GEORGE \u003d new MemberBuilder().withId(\"00007\").withName(\"George Best\")","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"stephanie-csy"},"content":"            .withPhone(\"94821442\").withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609480800000\").withCredit(\"0\").withPoint(\"0\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member HOON \u003d new MemberBuilder().withId(\"00008\").withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"stephanie-csy"},"content":"            .withPhone(\"84824241\").withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609484400000\").withCredit(\"0\").withPoint(\"0\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member IDA \u003d new MemberBuilder().withId(\"00009\").withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"stephanie-csy"},"content":"            .withPhone(\"84821314\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(\"1609488000000\").withCredit(\"0\").withPoint(\"0\").build();","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"    // Manually added - Member\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member AMY \u003d new MemberBuilder().withId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(VALID_REGISTRATION_TIMESTAMP_AMY).withCredit(VALID_CREDIT_AMY).withPoint(VALID_POINT_AMY)","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"            .withTransactions(new Transaction(new seedu.address.model.transaction.Id(VALID_TRANSACTION_ID_200_AMY),","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"                    new Timestamp(VALID_TRANSACTION_TIMESTAMP_200),","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"                    new Billing(VALID_TRANSACTION_BILLING_200)))","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"            .withReservations(new Reservation(new seedu.address.model.reservation.Id(VALID_RESERVATION_ID_200_AMY),","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"stephanie-csy"},"content":"                    new DateTime(VALID_RESERVATION_DATE_TIME_200),","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"                    new Remark(VALID_RESERVATION_REMARK_200)))","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"    public static final Member BOB \u003d new MemberBuilder().withId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"zzybluebell"},"content":"            .withTimestamp(VALID_REGISTRATION_TIMESTAMP_BOB).withCredit(VALID_CREDIT_BOB).withPoint(VALID_POINT_BOB)","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"            .withTransactions(","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                    new Transaction(new seedu.address.model.transaction.Id(VALID_TRANSACTION_ID_200_BOB),","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"                            new Timestamp(VALID_TRANSACTION_TIMESTAMP_200), new Billing(VALID_TRANSACTION_BILLING_200)),","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"                    new Transaction(new seedu.address.model.transaction.Id(VALID_TRANSACTION_ID_300_BOB),","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"                            new Timestamp(VALID_TRANSACTION_TIMESTAMP_300), new Billing(VALID_TRANSACTION_BILLING_300)))","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            .withReservations(","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"                    new Reservation(new seedu.address.model.reservation.Id(VALID_RESERVATION_ID_200_BOB),","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"stephanie-csy"},"content":"                            new DateTime(VALID_RESERVATION_DATE_TIME_200),","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"                            new Remark(VALID_RESERVATION_REMARK_200)),","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                    new Reservation(new seedu.address.model.reservation.Id(VALID_RESERVATION_ID_300_BOB),","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"stephanie-csy"},"content":"                            new DateTime(VALID_RESERVATION_DATE_TIME_300),","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"                            new Remark(VALID_RESERVATION_REMARK_300)))","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"    private TypicalMembers() {} // prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"     * Returns an {@code EzFoodie} with all the typical members.","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"    public static EzFoodie getTypicalEzFoodie() {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        EzFoodie ef \u003d new EzFoodie();","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"            ef.addMember(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        return ef;","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"    public static List\u003cMember\u003e getTypicalMembers() {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"stephanie-csy":13,"zzybluebell":13,"-":37,"HolmesJJ":89}}]
