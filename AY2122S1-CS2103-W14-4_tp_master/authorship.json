[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-W14-4/tp/actions)","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"* tApp is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI).\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  * for busy and forgetful TAs to help keep track of their tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"  * keep track of student participation and attendance","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"* The project simulates an ongoing software project for a desktop application (called _tApp_) used for managing TA tasks and student progress.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"* It is named `tApp` because it is created to be an app for TAs to use.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"* For the detailed documentation of this project, see the **[tApp Product Website](https://ay2122s1-cs2103-w14-4.github.io/tp/)**.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"wanninglim":1,"-":5,"tzejit":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"### Tze Jit","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"\u003cimg src\u003d\"images/tzejit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"[[github](https://github.com/tzejit)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"* Role: Team lead","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"### Lim Wan Ning","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"\u003cimg src\u003d\"images/wanninglim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"[[github](http://github.com/wanninglim)]","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"[[portfolio](team/wanninglim.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"### Ngai Win Lynn","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"\u003cimg src\u003d\"images/weenleen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"[[github](http://github.com/weenleen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"* Role: Testing","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"### Raveen Prabhu","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"\u003cimg src\u003d\"images/itsraveen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"[[github](http://github.com/itsraveen)]","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"* Role: Code quality","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"### Yim Jaewon","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"\u003cimg src\u003d\"images/somekoreanboi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"[[github](http://github.com/somekoreanboi)]","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"weenleen":5,"itsraveen":5,"wanninglim":5,"somekoreanboi":5,"-":35,"tzejit":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"* Format of this DG is based on [AB3 DG](https://se-education.org/addressbook-level3/DeveloperGuide.html)","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"weenleen"},"content":"This product is for CS2103/T TAs who are:","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"weenleen"},"content":"* Familiar with command line and code ","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"weenleen"},"content":"* Worried about using too many applications to manage his students\u0027 projects and grades. ","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"weenleen"},"content":"* Able to tolerate a steep learning curve ","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"weenleen"},"content":"* Disorganized, forgetful ","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"weenleen"},"content":"* Busy with other school projects and modules","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"weenleen"},"content":"**Value proposition**: ","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"weenleen"},"content":"TAs are required to access different platforms (LumiNUS, GitHub \u0026 CS2103/T website) and manage multiple groups and students.","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"weenleen"},"content":"This application aims to integrate different tools into a centralised platform that can improve a TA’s efficiency. It helps to ensure instructors complete all tasks on the relevant platforms by stipulated deadlines.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                      | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"wanninglim"},"content":"| -------- | ------------------- | ---------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add a task with time                                 | be reminded of when certain tasks are due                              |","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | delete tasks                                         | not be cluttered with completed/wrong tasks                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | mark students\u0027 attendance                            | keep track of who is present                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | mark tasks as complete                               | know which tasks have already been done                                |","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | view my todo list                                    | know what tasks I have to do                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | view my student list                                 | know what students I have                                              |","lastModifiedDate":"2021-09-26"},{"lineNumber":287,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add a student contact                                | add my student into the list                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | delete a student contact                             | remove my student if he quits the course                               |","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | store my data in a file                              | easily export data from the application                                |","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add different links for each student/group contact   | easily access their Github, email etc                                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | record participation during tutorials                | accurately award participation marks to students                       |","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add descriptions to the tasks                        | see the extra detail pertaining to the task                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | set my current directory to either students or tasks | add students/tasks more easily                                         |","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | access the ‘help’ page with all available commands   | refer to instructions when I forget how to use tApp                    |","lastModifiedDate":"2021-09-26"},{"lineNumber":295,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | allocate students to different groups                | track their progress based on their groups                             |","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | import data from CSV files                           | get started with the app quickly                                       |","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | edit tasks                                           | correct any errors I made without deleting and creating a new task     |","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"wanninglim"},"content":"| `* *`    | new user            | search for a student                                 | quickly access all information related to the student                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | purge all current data                               | get rid of sample data I used for exploring the app                    |","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | sort groups \u0026 students by their tP / iP progress     | see who needs help                                                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"itsraveen"},"content":"| `* *`    | expert user         | sort tasks by earliest deadline                      | know what tasks need to be completed urgently                          |","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | specify default tasks to add when adding students    | I do not need to manually add the same tasks                           |","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | create tags to be added to tasks                     | easily access the links related to the task                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | tag students to specific tasks                       | keep track of students related to a task                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | create events as a type of task                      | keep track of tasks that occur at a specified time                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"itsraveen"},"content":"| `* *`    | expert user         | view the changes I made to my todo list              | recover tasks that are accidentally deleted                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | set automated reminders upon startup                 | not forget any task                                                    |","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"itsraveen"},"content":"| `*`      | expert user         | create command line shortcuts to access tasks        | easily access data and save time                                       |","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | set recurring tasks                                  | not create tasks that I have to complete regularly                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | customise the order of the menu                      | easily access the features I use most                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | broadcasts task to a certain group                   | efficiently add new module wide tasks                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | assign priority levels for tasks                     | what tasks require my earliest attention                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | string multiple commands into a single line          | manage my tasks more efficiently                                       |","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | view both my students’ tasks and my own tasks        | be informed of the week’s progress                                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":315,"author":{"gitId":"itsraveen"},"content":"| `*`      | expert user         | create custom commands                               | make managing tasks more convenient, and more tailored to my needs     |","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | filter the CS2103/T textbook                         | refresh my memory on concepts I forgot                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"tzejit"},"content":"(For all use cases below, the **System** is `tApp` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"tzejit"},"content":"**Use case: UC1 - Set current directory**","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"tzejit"},"content":"1.  User requests to go back to the welcome page to choose either students or tasks directory again. ","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates into the welcome page and displays the exit confirm message.","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"tzejit"},"content":"* 1a.  The user hasn’t entered either the student or task management directory.","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"tzejit"},"content":"**Use case: UC2 - View student list/Enter student directory**","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"tzejit"},"content":"1.  User requests to navigate to the student directory (UC1)","lastModifiedDate":"2021-09-26"},{"lineNumber":345,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates into the student directory","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"tzejit"},"content":"3.  tApp displays the list of student contacts","lastModifiedDate":"2021-09-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"tzejit"},"content":"* 1a. User is already in the student directory.","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"tzejit"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"tzejit"},"content":"**Use case: UC3 - Add a student contact**","lastModifiedDate":"2021-09-26"},{"lineNumber":361,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":362,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"tzejit"},"content":"1.  User requests to enter student directory (UC1)","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates to student directory","lastModifiedDate":"2021-09-26"},{"lineNumber":366,"author":{"gitId":"tzejit"},"content":"3.  User requests to add a student contact","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"tzejit"},"content":"4.  tApp adds the student","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":372,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"tzejit"},"content":"* 3a. No name is specified.","lastModifiedDate":"2021-09-26"},{"lineNumber":374,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":378,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":379,"author":{"gitId":"tzejit"},"content":"**Use case: UC4 - Mark student as present**","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":381,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":382,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":383,"author":{"gitId":"tzejit"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-09-26"},{"lineNumber":384,"author":{"gitId":"tzejit"},"content":"2.  tApp shows a list of persons","lastModifiedDate":"2021-09-26"},{"lineNumber":385,"author":{"gitId":"tzejit"},"content":"3.  User requests to mark a specific person as present in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":386,"author":{"gitId":"tzejit"},"content":"4.  tApp marks the person as present","lastModifiedDate":"2021-09-26"},{"lineNumber":387,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":388,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":389,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":390,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":391,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":392,"author":{"gitId":"tzejit"},"content":"* 2a. The student list is empty. ","lastModifiedDate":"2021-09-26"},{"lineNumber":393,"author":{"gitId":"tzejit"},"content":"    ","lastModifiedDate":"2021-09-26"},{"lineNumber":394,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":395,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":396,"author":{"gitId":"tzejit"},"content":"* 2b. User requests to mark a specific person as absent in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":397,"author":{"gitId":"tzejit"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":398,"author":{"gitId":"tzejit"},"content":"    * 2b1. tApp marks the person as absent.","lastModifiedDate":"2021-09-26"},{"lineNumber":399,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":400,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":401,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"tzejit"},"content":"**Use case: UC5 - Delete a student contact**","lastModifiedDate":"2021-09-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":410,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":412,"author":{"gitId":"tzejit"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-09-26"},{"lineNumber":413,"author":{"gitId":"tzejit"},"content":"2.  tApp shows a list of persons","lastModifiedDate":"2021-09-26"},{"lineNumber":414,"author":{"gitId":"tzejit"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":415,"author":{"gitId":"tzejit"},"content":"4.  tApp deletes the person","lastModifiedDate":"2021-09-26"},{"lineNumber":416,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":417,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":418,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":419,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":420,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":421,"author":{"gitId":"tzejit"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":422,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":423,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":424,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":425,"author":{"gitId":"tzejit"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":426,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":427,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":428,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":429,"author":{"gitId":"tzejit"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":432,"author":{"gitId":"somekoreanboi"},"content":"**Use case: UC6 - View task list**","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view the list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"somekoreanboi"},"content":"    * 2a1. tApp displays message that there are no tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"somekoreanboi"},"content":"**Use case: UC7 - Add task with time**","lastModifiedDate":"2021-09-29"},{"lineNumber":450,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to create a task with the specified deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp creates the task and stores it in the task list","lastModifiedDate":"2021-09-29"},{"lineNumber":455,"author":{"gitId":"somekoreanboi"},"content":"3.  tApp displays the task that was just created","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":458,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":459,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":460,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":461,"author":{"gitId":"somekoreanboi"},"content":"* 1a. The task list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":463,"author":{"gitId":"somekoreanboi"},"content":"    * 1a1. tApp displays an error message stating that the task name is invalid","lastModifiedDate":"2021-09-29"},{"lineNumber":464,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":465,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"somekoreanboi"},"content":"* 1b. The task list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":468,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"somekoreanboi"},"content":"    * 1b1. tApp displays an error message requesting the user to follow the correct format","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":472,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"somekoreanboi"},"content":"**Use case: UC8 - Delete a task**","lastModifiedDate":"2021-09-29"},{"lineNumber":474,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":475,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":476,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":477,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view their list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":478,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":479,"author":{"gitId":"somekoreanboi"},"content":"3.  User requests to delete a specific task from the list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":480,"author":{"gitId":"somekoreanboi"},"content":"4.  tApp deletes the task","lastModifiedDate":"2021-09-29"},{"lineNumber":481,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":482,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":483,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":484,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":485,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":486,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":487,"author":{"gitId":"somekoreanboi"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":488,"author":{"gitId":"somekoreanboi"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":489,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":490,"author":{"gitId":"somekoreanboi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":491,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":492,"author":{"gitId":"somekoreanboi"},"content":"    * 2a1. tApp shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":493,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":494,"author":{"gitId":"somekoreanboi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":495,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":496,"author":{"gitId":"somekoreanboi"},"content":"**Use case: UC9 - Mark a task as done**","lastModifiedDate":"2021-09-29"},{"lineNumber":497,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":498,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":499,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":500,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view their list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":501,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":502,"author":{"gitId":"somekoreanboi"},"content":"3.  User requests to mark a specific task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":503,"author":{"gitId":"somekoreanboi"},"content":"4.  tApp marks the task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":504,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":505,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":506,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":507,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":508,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":509,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":510,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":511,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":512,"author":{"gitId":"somekoreanboi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":513,"author":{"gitId":"somekoreanboi"},"content":"  ","lastModifiedDate":"2021-09-29"},{"lineNumber":514,"author":{"gitId":"somekoreanboi"},"content":"    * 3a1.  tApp shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":515,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":516,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":517,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"weenleen"},"content":"* Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-01"},{"lineNumber":520,"author":{"gitId":"weenleen"},"content":"* Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-01"},{"lineNumber":521,"author":{"gitId":"weenleen"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-01"},{"lineNumber":522,"author":{"gitId":"weenleen"},"content":"* Commands used should be intuitive, and should not exceed 80 characters. ","lastModifiedDate":"2021-10-01"},{"lineNumber":523,"author":{"gitId":"weenleen"},"content":"* System should respond almost immediately upon entering a command. ","lastModifiedDate":"2021-10-01"},{"lineNumber":524,"author":{"gitId":"weenleen"},"content":"* Error messages shown should inform the user of what is wrong and what the correct command syntax should be.","lastModifiedDate":"2021-10-01"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"weenleen"},"content":"* **Student contact**: A student entry with the corresponding student’s name, tutorial attendance, and tutorial participation.","lastModifiedDate":"2021-09-27"},{"lineNumber":531,"author":{"gitId":"weenleen"},"content":"* **Task**: An entry with a textual description of a piece of work to do, and a time that specifies the date that piece of work should be completed by ","lastModifiedDate":"2021-09-27"},{"lineNumber":532,"author":{"gitId":"weenleen"},"content":"* **Directory**: The list commands entered will be applied to (either student or task)","lastModifiedDate":"2021-09-27"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"weenleen":22,"itsraveen":19,"wanninglim":19,"somekoreanboi":86,"-":360,"tzejit":79}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"tApp is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI). If you are a TA that is looking for an app that integrates different tools into a centralised platform and tracks your TA tasks, tApp is the app for you.","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"1. Download the latest `tApp.jar` from [here](https://github.com/AY2122S1-CS2103-W14-4/tp/releases).","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your tApp.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"   * **`students`** : Lists all students.","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"   * **`add`**`Tom Lim` : Adds a student named `Tom Lim` to the student list.","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"  e.g. in `add NAME`, `NAME` is a parameter which can be used as `add John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"  e.g. if the command specifies `n/NAME s/STUDENT_NUMBER`, `s/STUDENT_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"somekoreanboi"},"content":"### Lists all students: `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"Shows a list of all students inputted into tApp together with their attendance and participation scores for tutorials.","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"Format: `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"* `students` returns a list of all students with their information and attendance scores","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"somekoreanboi"},"content":"### Add a student : `add`","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"Adds a student to the student list.","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"somekoreanboi"},"content":"Format: `add NAME`","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"somekoreanboi"},"content":"* `add Tom Lim` adds Tom Lim to the list and displays a confirmation output","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"somekoreanboi"},"content":"### Listing the task list : `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"Displays all the tasks currently in the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"somekoreanboi"},"content":"Format: `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"somekoreanboi"},"content":"### Adding a task with a date: `addTask n/TASK_NAME by/DATE`","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"somekoreanboi"},"content":"Adds a task with the given name and a specified deadline.","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"somekoreanboi"},"content":"Format: `addTask n/TASK_NAME by/DATE`","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"somekoreanboi"},"content":"Format: `addTask n/TASK_NAME by/DATE`","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"somekoreanboi"},"content":"* Adds a task with the specified `TASK_NAME`","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"somekoreanboi"},"content":"* The task has the deadline `DATE`","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"somekoreanboi"},"content":"* The deadline must be in the format `YYYY-MM-dd`","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"somekoreanboi"},"content":"* `add n/grade scripts by/2021-09-23` creates the task \"grade scripts\", which is to be completed by the given date.","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"somekoreanboi"},"content":"* `add n/tutorial preparation by/2021-10-04` creates the task \"tutorial preparation\", which is to be completed by the given date.","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"somekoreanboi"},"content":"### Marking a student as present: `mark`","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"somekoreanboi"},"content":"Marks the specified student in the student list as present or absent.","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"somekoreanboi"},"content":"Format: `mark INDEX /wWEEK NUMBER`","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"somekoreanboi"},"content":"* Marks the person as present in the specified `INDEX`.","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"somekoreanboi"},"content":"* If the student at the specified `INDEX` is marked as present, the command toggles the attendance to absent.","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"somekoreanboi"},"content":"* `students` followed by `mark 1 /w1` marks the 1st person in the students list as present in week 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"somekoreanboi"},"content":"* Another `mark 1 /w1` instance will mark the 1st person in the student list as absent in week 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"somekoreanboi"},"content":"`\u003e mark 1 /w1`","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"somekoreanboi"},"content":"    \u003e Kho Tze Jit is marked as present for week 1!","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"somekoreanboi"},"content":"`\u003e mark 1 /w1`","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"somekoreanboi"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"somekoreanboi"},"content":"    \u003e Kho Tze Jit is marked as absent for week 1!","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"somekoreanboi"},"content":"### Deleting a student contact: `delete INDEX`","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"somekoreanboi"},"content":"Deletes the specified student from the student list.","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"somekoreanboi"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"somekoreanboi"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"somekoreanboi"},"content":"* `students` followed by `delete 1` removes the 1st person in the students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"somekoreanboi"},"content":"`\u003e delete 1`","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"somekoreanboi"},"content":"    \u003e Kho Tze Jit is removed from the student list!","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"somekoreanboi"},"content":"### Deleting a task: `deleteTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"somekoreanboi"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"somekoreanboi"},"content":"Format: `deleteTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"somekoreanboi"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"somekoreanboi"},"content":"* `deleteTask 1` removes the 1st task in the task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"somekoreanboi"},"content":"`\u003e deleteTask 1`","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"somekoreanboi"},"content":"    \u003e Studying is removed from the student list!","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"somekoreanboi"},"content":"### Marking a task as done: : `doneTask`","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"somekoreanboi"},"content":"Mark the specified task from the list as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"somekoreanboi"},"content":"Format: `doneTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"somekoreanboi"},"content":"* Mark the task as done at the specified `INDEX`.","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"somekoreanboi"},"content":"* The index refers to the index number shown in the task list.","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"somekoreanboi"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"somekoreanboi"},"content":"* `doneTask 2` marks the 2nd task in the task list as completed.","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"somekoreanboi"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"somekoreanboi"},"content":"Exits the program.","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"somekoreanboi"},"content":"Format: `exit`","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"somekoreanboi"},"content":"### Saving the data","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"somekoreanboi"},"content":"tApp data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"wanninglim"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"wanninglim"},"content":"### Viewing help : `help` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"wanninglim"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"wanninglim"},"content":"Format: `help`","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"somekoreanboi"},"content":"### Editing a person : `edit` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"wanninglim"},"content":"Edits an existing person in the students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"wanninglim"},"content":"Format: `edit INDEX [n/NAME] [s/STUDENT_NUMBER] [e/EMAIL] [g/GITHUB_LINK] [t/TAG]…​`","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"somekoreanboi"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"wanninglim"},"content":"*  `edit 1 s/A0221111L e/johndoe@example.com` Edits the student number and email address of the 1st person to be `A0221111L` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"somekoreanboi"},"content":"### Locating persons by name: `find` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-02"},{"lineNumber":241,"author":{"gitId":"somekoreanboi"},"content":"  ","lastModifiedDate":"2021-10-02"},{"lineNumber":242,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":243,"author":{"gitId":"somekoreanboi"},"content":"### Clearing all entries from task list : `clear` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":245,"author":{"gitId":"somekoreanboi"},"content":"Clears all entries from the task list.","lastModifiedDate":"2021-10-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":249,"author":{"gitId":"somekoreanboi"},"content":"### Editing the data file `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":251,"author":{"gitId":"wanninglim"},"content":"tApp data are saved as a JSON file `[JAR file location]/data/tApp.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-02"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-02"},{"lineNumber":254,"author":{"gitId":"somekoreanboi"},"content":"If your changes to the data file makes its format invalid, tApp will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-10-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-10-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":263,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":267,"author":{"gitId":"wanninglim"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous tApp home folder.","lastModifiedDate":"2021-10-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-10-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":275,"author":{"gitId":"wanninglim"},"content":"**List Students** | `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":276,"author":{"gitId":"wanninglim"},"content":"**List Tasks** | `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":277,"author":{"gitId":"wanninglim"},"content":"**Add Student** | `add n/NAME s/STUDENT_NUMBER e/EMAIL g/GITHUB_LINK [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho s/A0221111L e/jamesho@example.com g/https://github.com/james t/W14-4`","lastModifiedDate":"2021-10-02"},{"lineNumber":278,"author":{"gitId":"somekoreanboi"},"content":"**Add Task** | `addTask n/TASK_NAME by/DATE [t/TAG]…​` \u003cbr\u003e e.g., `addTask n/study by/2021-10-31 t/W14-4`","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"somekoreanboi"},"content":"**DoneTask** | `doneTask INDEX` \u003cbr\u003e e.g., `doneTask 1`","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-02"},{"lineNumber":282,"author":{"gitId":"somekoreanboi"},"content":"**Delete Task** | `deleteTask INDEX`\u003cbr\u003e e.g., `deleteTask 3`","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"wanninglim"},"content":"**Edit** | `edit INDEX [n/NAME] [s/STUDENT_NUMBER] [e/EMAIL] [g/GITHUB_LINK] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-10-02"},{"lineNumber":284,"author":{"gitId":"somekoreanboi"},"content":"**Edit Task** | `edit INDEX [n/TASK_NAME] [by/DATE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/study by/2012-10-31 t/W14-4`","lastModifiedDate":"2021-10-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-10-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"wanninglim":19,"somekoreanboi":137,"-":130}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"wanninglim"},"content":"    content: \"tApp\";","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"wanninglim":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"title: tApp","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-W14-4/tp/branch/master/graph/badge.svg?token\u003d4CJCMBYU5I)](https://codecov.io/gh/AY2122S1-CS2103-W14-4/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"**tApp is a desktop application for tutors to manage your students.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"* If you are interested in using tApp, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"* If you are interested about developing tApp, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanninglim":4,"-":15}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"itsraveen":1,"-":11,"tzejit":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model.DisplayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    DisplayType getDisplayType();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weenleen":3,"wanninglim":2,"-":48,"tzejit":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model.DisplayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"    public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        return model.getDisplayType();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weenleen":4,"wanninglim":2,"-":80,"tzejit":6}},{"path":"src/main/java/seedu/address/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Adds a student to the student list in tApp.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"addStudent\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the tApp student list. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"STUDENTNUMBER \"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"A0123456B \"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the tApp student list\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public final Student toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    public AddStudentCommand(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"                || (other instanceof AddStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":44,"tzejit":20}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the address book. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"Tutorial Prep \"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"2021-09-12\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"            + PREFIX_TAG + \"W14-04\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the tApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":55,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/commands/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"    public static final String COMMAND_WORD \u003d \"/back\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You exited the current directory! \"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"            + \"Please enter either \u0027students\u0027 or \u0027tasks\u0027 to enter a directory.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"somekoreanboi":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    public DeleteStudentCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteStudentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":4,"-":40,"tzejit":9}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":50,"weenleen":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"A0000000B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        StudentNumber updatedStudentNumber \u003d editStudentDescriptor.getStudentNumber()","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"                .orElse(studentToEdit.getStudentNumber());","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        return new Student(updatedName, updatedEmail, updatedStudentNumber, updatedTags);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        private StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"            setStudentNumber(toCopy.studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"            return CollectionUtil.isAnyNonNull(name, email, studentNumber, tags);","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"        public void setStudentNumber(StudentNumber studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"            this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"        public Optional\u003cStudentNumber\u003e getStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"            return Optional.ofNullable(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 getStudentNumber().equals(e.getStudentNumber())","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":157,"tzejit":54}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":37,"tzejit":5}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" * Lists all students in the address book to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"tzejit":4}},{"path":"src/main/java/seedu/address/logic/commands/ListStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"public class ListStudentCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"students\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tzejit":22}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"    public static final String COMMAND_WORD \u003d \"tasks\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":20}},{"path":"src/main/java/seedu/address/logic/commands/MarkStudentAttCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" * Marks the attendance (present/absent) of an existing student in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the attendance of the student identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student who is absent will change his attendance to present.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student who is present will change his attendance to absent.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"            + \" [\" + PREFIX_WEEK + \"WEEK]\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"            + PREFIX_WEEK + \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_MARK_STUDENT_SUCCESS \u003d \"Student: %1$s is marked as %2$s for week %3$s!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    private final Index index;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    private final int week;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * @param index of the student in the filtered student list to mark attendance","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentAttCommand(Index index, int week) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        this.week \u003d week;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        Student studentToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"        model.markStudentAttendance(studentToUpdate, week);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String type \u003d model.getStudentAttendance(studentToUpdate, week);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"                studentToUpdate.getName(), type, week + 1));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"        if (!(other instanceof MarkStudentAttCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand e \u003d (MarkStudentAttCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":81}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class MarkTaskDoneCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"doneTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            + \": Mark the task identified by the index number used in the displayed task list as done.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_MARK_TASK_DONE_SUCCESS \u003d \"Task Completed: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    public MarkTaskDoneCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        Task taskToMarkCompeleted \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        model.completeTask(taskToMarkCompeleted);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkCompeleted));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof MarkTaskDoneCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 targetIndex.equals(((MarkTaskDoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":51}},{"path":"src/main/java/seedu/address/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * and returns an AddStudentCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER, PREFIX_TAG);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER)","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        StudentNumber studentNumber \u003d ParserUtil.parseStudentNumber(argMultimap.getValue(PREFIX_STUDENTNUMBER).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new Student(name, email, studentNumber, tagList);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return new AddStudentCommand(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":40,"tzejit":17}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_TAG);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DEADLINE)","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        Task task \u003d new Task(name, deadline, tagList);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.BackCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.ListStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"        case BackCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"            return new BackCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"            return new DeleteStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        case MarkStudentAttCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentAttCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        case ListStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            return new ListStudentCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        case MarkTaskDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"            return new MarkTaskDoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weenleen":8,"itsraveen":6,"wanninglim":5,"somekoreanboi":8,"-":71,"tzejit":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_STUDENTNUMBER \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weenleen":1,"wanninglim":1,"-":13,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"            return new DeleteStudentCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wanninglim":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommandParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":5,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER, PREFIX_TAG);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTNUMBER).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setStudentNumber(ParserUtil.parseStudentNumber(argMultimap","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"                    .getValue(PREFIX_STUDENTNUMBER).get()));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":67,"tzejit":12}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":32,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/parser/MarkStudentAttCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new MarkStudentAttCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandParser implements Parser\u003cMarkStudentAttCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkStudentAttCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"     * and returns a MarkStudentAttCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentAttCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEEK);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"        Index index;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"                    MarkStudentAttCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"            int week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentAttCommand(index, week);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"                MarkStudentAttCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":43}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"public class MarkTaskDoneCommandParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public MarkTaskDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            return new MarkTaskDoneCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskDoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"     * trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"    public static int parseWeek(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        if (!Attendance.isValidWeek(Integer.parseInt(oneBasedIndex))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(String.format(Attendance.MESSAGE_CONSTRAINTS, Attendance.NUMBER_OF_WEEKS));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        return Integer.parseInt(trimmedIndex) - 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS + \" HUH:\" + trimmedDeadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String studentNumber} into an {@code StudentNumber}.","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"    public static StudentNumber parseStudentNumber(String studentNumber) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        String trimmedStudentNumber \u003d studentNumber.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        if (!StudentNumber.isValidNumber(trimmedStudentNumber)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        return new StudentNumber(trimmedStudentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weenleen":17,"wanninglim":15,"-":105,"tzejit":18}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of the student list with {@code tasks}.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    //// task-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"     * Returns true if a task {@code task} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"        tasks.add(t);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"    public void markTaskComplete(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"        target.markTaskComplete();","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"     * @param s","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        students.add(s);","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"     * address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"weenleen"},"content":"               + tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students)","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks));","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"        return Objects.hash(students, tasks);","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weenleen":37,"itsraveen":2,"-":111,"tzejit":35}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    enum DisplayType {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        STUDENTS, TASKS","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    };","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    DisplayType getDisplayType();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"     * Retrieve the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"    String getStudentAttendance(Student target, int week);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"     * Marks the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"    void markStudentAttendance(Student target, int week);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"     * Marks the given task as completed.","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"    void completeTask(Task target);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"     * Adds the given task.","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} with {@code editedTask}.","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"weenleen"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"weenleen"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"weenleen"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weenleen":21,"itsraveen":3,"wanninglim":14,"-":88,"tzejit":23}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.STUDENTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    private DisplayType displayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        displayType \u003d STUDENTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"    public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        return displayType;","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"    public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"        Student newPerson \u003d target;","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"        newPerson.getAttendance().toggleAttendance(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"        addressBook.setStudent(target, newPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"    public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"        return target.getAttendance().checkPresent(week) \u003d\u003d 1 ? \"present\" : \"absent\";","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"     * Checks if a task exists","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"     * @param task task to check","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"     * @return true if task exists, false otherwise","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"weenleen"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"weenleen"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"    public void addTask(Task student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"        addressBook.addTask(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"itsraveen"},"content":"    public void completeTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"itsraveen"},"content":"        requireAllNonNull(target, target);","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"itsraveen"},"content":"        TaskName name \u003d target.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"itsraveen"},"content":"        Deadline deadline \u003d target.getDeadline();","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"itsraveen"},"content":"        Set\u003cTag\u003e tags \u003d target.getTags();","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"itsraveen"},"content":"        Task newTask \u003d new Task(name, deadline, tags);","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"itsraveen"},"content":"        newTask.markTaskComplete();","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"itsraveen"},"content":"        addressBook.setTask(target, newTask);","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"        displayType \u003d STUDENTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"weenleen"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"weenleen"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"weenleen"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"        displayType \u003d TASKS;","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"weenleen"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"itsraveen":12,"weenleen":24,"wanninglim":28,"-":148,"tzejit":29}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weenleen":6,"-":13,"tzejit":4}},{"path":"src/main/java/seedu/address/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s attendance in tApp.","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Attendance {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"            \"Weeks should be between 1 and %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final int NUMBER_OF_WEEKS \u003d 13;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    public final ArrayList\u003cInteger\u003e attendanceList;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * Constructs an {@code Attendance}.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public Attendance() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        attendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_WEEKS; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            attendanceList.add(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"     * Constructs an existing {@code Attendance}.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public Attendance(ArrayList\u003cInteger\u003e attendanceList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        this.attendanceList \u003d attendanceList;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"     * Toggles attendance from 0 to 1, or 1 to 0","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * for the {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"     * @param week attendance for the week","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    public void toggleAttendance(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        int isPresent \u003d attendanceList.get(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        if (isPresent \u003d\u003d 1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            attendanceList.set(week, 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"            attendanceList.set(week, 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"     * Checks if a student is present during the specified {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"     * @param week week to be checked.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"     * @return int specifying if student was present.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    public int checkPresent(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        int isPresent \u003d attendanceList.get(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"        return isPresent;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"     * Returns true if a given string is a valid week.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"    public static boolean isValidWeek(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        return week \u003c\u003d NUMBER_OF_WEEKS \u0026\u0026 week \u003e 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"                || (other instanceof Attendance // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 attendanceList.equals(((Attendance) other).attendanceList)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        return attendanceList.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wanninglim":49,"tzejit":31}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"tzejit":2}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s name in tApp.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"tzejit":2}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":26,"tzejit":5}},{"path":"src/main/java/seedu/address/model/student/Participation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"public class Participation {","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    public final ArrayList\u003cInteger\u003e value;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code Participation}.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    public Participation() {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"        value \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"        for (int i \u003d 0; i \u003c 13; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"            value.add(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"                || (other instanceof Participation // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 value.equals(((Participation) other).value)); // state check","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"tzejit":31}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class Student {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private final StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private final Attendance attendance;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private final Participation participation;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"     * Constructor for a new Person object","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public Student(Name name, Email email, StudentNumber studentNumber, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name, email, studentNumber, tags);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        this.attendance \u003d new Attendance();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        this.participation \u003d new Participation();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"     * Constructor for a re-stored Person object","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public Student(Name name, Email email, StudentNumber studentNumber, Set\u003cTag\u003e tags, Attendance attendance) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name, email, studentNumber, tags, attendance);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        this.participation \u003d new Participation();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    public StudentNumber getStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        return studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        return attendance;","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public Participation getParticipation() {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        return participation;","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getStudentNumber().equals((getStudentNumber()))","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"        return Objects.hash(name, email, tags, attendance, studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"                .append(\"; Student Number: \")","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"                .append(getStudentNumber());","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":11,"-":86,"tzejit":43}},{"path":"src/main/java/seedu/address/model/student/StudentNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s Student Number in the tApp.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNumber(String)}","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"public class StudentNumber {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            \"Student number should start and end with a letter and contain 7 numbers\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * The first and last character of the number must be an alphabet,","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * and it must contain 7 numbers in between.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{7}[a-zA-Z]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public final String studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"     * @param studentNumber A valid name.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public StudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidNumber(studentNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber.toUpperCase();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidNumber(String test) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        return studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                || (other instanceof StudentNumber // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 studentNumber.equals(((StudentNumber) other).studentNumber)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        return studentNumber.hashCode();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tzejit":57}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"                    return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":137}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" * same identity).","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":6}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"public class Deadline {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Deadlines should be in the format yyyy-MM-dd\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    private final String value;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * @param deadline A valid deadline date.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        this.value \u003d deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"            this.deadline \u003d LocalDate.parse(value, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"            checkArgument(false, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"     * @param test The given string.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"     * @return The validity of the string as a deadline.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"            LocalDate.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        return deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"        return deadline.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":68}},{"path":"src/main/java/seedu/address/model/task/NameContainsTestKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"public class NameContainsTestKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public NameContainsTestKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().taskName, keyword));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof NameContainsTestKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 keywords.equals(((NameContainsTestKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":31}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"public class Task {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    private final TaskName name;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"     * @param deadline A valid Deadline.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"    public Task(TaskName name, Deadline deadline, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    public TaskName getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        return deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    public String getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        return this.isDone ? \"Completed\" : \"Pending\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    public boolean checkIsDone() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"        return isDone;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"    public void markTaskComplete() {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both Tasks have the same name.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"     * This defines a weaker notion of equality between two Task.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"        return Objects.hash(name, deadline, tags, isDone);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"                .append(getDeadline())","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"                .append(getStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":88,"itsraveen":33}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Basically a copy of Name from the student package","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"public class TaskName {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"    public final String taskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code TaskName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    public TaskName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        taskName \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        return taskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 taskName.equals(((TaskName) other).taskName)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        return taskName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":56,"tzejit":1}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":126}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":7}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":4}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), new StudentNumber(\"A0123436B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"                    getTagSet(\"friends\"), getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"), new StudentNumber(\"A0123456A\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"                    getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"                    getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"                    new StudentNumber(\"A0123450B\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"                    getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"David Li\"), new Email(\"lidavid@example.com\"), new StudentNumber(\"A0123956B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"                    getTagSet(\"family\"), getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Email(\"irfan@example.com\"), new StudentNumber(\"A0823456B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"                    getTagSet(\"classmates\"), getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Email(\"royb@example.com\"), new StudentNumber(\"A1123456B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                    getTagSet(\"colleagues\"), getAttendanceList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"     * Returns a attendance list containing the list of integers given.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"    public static Attendance getAttendanceList(Integer... integers) {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        return new Attendance(new ArrayList\u003c\u003e(Arrays.asList(integers)));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"wanninglim":13,"-":33,"tzejit":19}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Participation;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private final String studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    private final ArrayList\u003cInteger\u003e attendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"    private Participation participation;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"studentNumber\") String studentNumber,","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"                              @JsonProperty(\"attendance\") ArrayList\u003cInteger\u003e attendance) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        this.attendance.addAll(attendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d source.getStudentNumber().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"        participation \u003d source.getParticipation();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        attendance.addAll(source.getAttendance().attendanceList);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        final ArrayList\u003cInteger\u003e studentAttendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        studentAttendance.addAll(attendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        if (studentNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"                    StudentNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"        if (!StudentNumber.isValidNumber(studentNumber)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        final StudentNumber modelStudentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"        final Attendance modelAttendance \u003d new Attendance(studentAttendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        return new Student(modelName, modelEmail, modelStudentNumber, modelTags, modelAttendance);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanninglim":9,"somekoreanboi":9,"-":63,"tzejit":30}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    private final String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    private final String deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private final String status;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"                           @JsonProperty(\"status\") String status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        status \u003d source.getStatus();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"        if (!TaskName.isValidName(name)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"        final TaskName modelName \u003d new TaskName(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        return new Task(modelName, modelDeadline, modelTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":79,"itsraveen":5,"tzejit":2}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students and tasks.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":13,"-":48,"tzejit":12}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.STUDENTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    void updateInnerParts() {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        if (logic.getDisplayType().equals(STUDENTS)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"            studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"            studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        } else if (logic.getDisplayType().equals(TASKS)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"            taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"            studentListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        return studentListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"            updateInnerParts();","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wanninglim":2,"-":190,"tzejit":19}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    public final Student student;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private Label studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    private Label attendance;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    private Label participation;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        studentNumber.setText(student.getStudentNumber().toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        attendance.setText(student.getAttendance().attendanceList.toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        participation.setText(student.getParticipation().value.toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wanninglim":1,"-":57,"tzejit":23}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":49}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    public final Task task;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private Label name;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    private Label deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private Label status;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        name.setText(task.getName().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        deadline.setText(task.getDeadline().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        status.setText(task.getStatus());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"-":56,"tzejit":19}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tzejit":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"tzejit":2}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"studentNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentNumber\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Attendance\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"attendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$attendance\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Participation\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"participation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$participation\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":34,"tzejit":13}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"tzejit":1}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tzejit":43}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"-":7,"tzejit":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Valid Student\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Student With Invalid Email Field\",","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hansexample.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"  \"tasks\" : [ ]","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":2,"wanninglim":6,"-":3,"tzejit":3}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"  \"tasks\" : [ ]","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":2,"wanninglim":3,"-":2,"tzejit":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\": \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\": \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"  \"tasks\" : [ ]","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":2,"wanninglim":5,"-":6,"tzejit":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"  \"tasks\" : [ ]","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":2,"wanninglim":3,"-":3,"tzejit":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalStudentsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"_comment\": \"AddressBook save file which contains the same Student values as in TypicalStudents#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"  \"tasks\" : [ ]","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":2,"wanninglim":14,"-":22,"tzejit":9}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"tzejit":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        String addCommand \u003d AddStudentCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":148,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) for {@code AddStudentCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(new AddStudentCommand(validStudent), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(new AddStudentCommand(studentInList), model, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":33,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/AddStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        CommandResult commandResult \u003d new AddStudentCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        assertEquals(String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"                AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addStudentCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"weenleen"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"itsraveen"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"        private final Student student;","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"weenleen":33,"itsraveen":5,"wanninglim":11,"-":146,"tzejit":51}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        AddTaskCommandTest.ModelStubAcceptingTaskAdded modelStub \u003d new AddTaskCommandTest.ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        AddTaskCommandTest.ModelStub modelStub \u003d new AddTaskCommandTest.ModelStubWithTask(validTask);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"                AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        Task alice \u003d new TaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"        Task bob \u003d new TaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        AddTaskCommand addAliceCommand \u003d new AddTaskCommand(alice);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        AddTaskCommand addBobCommand \u003d new AddTaskCommand(bob);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"        AddTaskCommand addAliceCommandCopy \u003d new AddTaskCommand(alice);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"weenleen"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"weenleen"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"weenleen"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"weenleen"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"weenleen"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"weenleen"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"weenleen"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"weenleen"},"content":"    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"weenleen"},"content":"        private final Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"weenleen"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"weenleen"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"weenleen"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"weenleen"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"weenleen"},"content":"    private class ModelStubAcceptingTaskAdded extends AddTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"weenleen"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"weenleen"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"weenleen"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"weenleen"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weenleen":245,"wanninglim":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":31,"tzejit":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.NameContainsTestKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_STUDENTNUMBER_AMY \u003d \"A1112223B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_STUDENTNUMBER_BOB \u003d \"C1102923T\";","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public static final String STUDENTNUMBER_DESC_AMY \u003d \" \" + PREFIX_STUDENTNUMBER + VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public static final String STUDENTNUMBER_DESC_BOB \u003d \" \" + PREFIX_STUDENTNUMBER + VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    public static final String VALID_WEEK \u003d \" \" + PREFIX_WEEK + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_STUDENTNUMBER_DESC \u003d \" \" + PREFIX_STUDENTNUMBER + \"A1233222\";","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    // missing final character","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"                .withStudentNumber(VALID_STUDENTNUMBER_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"                .withStudentNumber(VALID_STUDENTNUMBER_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"    public static void assertTaskCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003cTask\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"itsraveen"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"itsraveen"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"itsraveen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"itsraveen"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"itsraveen"},"content":"        final String[] splitName \u003d task.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"itsraveen"},"content":"        model.updateFilteredTaskList(new NameContainsTestKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"itsraveen"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"itsraveen":27,"wanninglim":2,"-":102,"tzejit":26}},{"path":"src/test/java/seedu/address/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wanninglim":5,"-":75,"tzejit":29}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":40,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":113,"tzejit":59}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":43,"tzejit":8}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wanninglim":3,"-":67,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":35,"tzejit":4}},{"path":"src/test/java/seedu/address/logic/commands/MarkStudentAttCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkStudentAttCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_ATTENDANCE_PRESENT_EXPECTED \u003d { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_ATTENDANCE_ABSENT_EXPECTED \u003d { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    private static final int FIRST_WEEK \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentPresentUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"present\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"present\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(INDEX_FIRST_STUDENT, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentAbsentUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"absent\";","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"absent\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(INDEX_FIRST_STUDENT, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentPresentFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"present\";","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"present\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(INDEX_FIRST_STUDENT, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentAbsentFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"absent\";","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"absent\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(INDEX_FIRST_STUDENT, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(outOfBoundIndex, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentAttCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"     * Mark attendance of filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(outOfBoundIndex, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentAttCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"        final MarkStudentAttCommand standardCommand \u003d new MarkStudentAttCommand(INDEX_FIRST_STUDENT, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"wanninglim":173}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskDoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":" * {@code MarkTaskDoneCommand}.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"public class MarkTaskDoneCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        Task taskToMarkAsDone \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MarkTaskDoneCommand.MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        expectedModel.completeTask(taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(markTaskDoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(markTaskDoneCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        Task taskToMarkAsDone \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MarkTaskDoneCommand.MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        expectedModel.completeTask(taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(markTaskDoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(markTaskDoneCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markFirstTaskDoneCommand \u003d new MarkTaskDoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markSecondTaskDoneCommand \u003d new MarkTaskDoneCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        assertTrue(markFirstTaskDoneCommand.equals(markFirstTaskDoneCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        MarkTaskDoneCommand markFirstTaskDoneCommandCopy \u003d new MarkTaskDoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"        assertTrue(markFirstTaskDoneCommand.equals(markFirstTaskDoneCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"        assertFalse(markFirstTaskDoneCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"        assertFalse(markFirstTaskDoneCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"        assertFalse(markFirstTaskDoneCommand.equals(markSecondTaskDoneCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"itsraveen":114}},{"path":"src/test/java/seedu/address/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTNUMBER_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    private AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"                + STUDENTNUMBER_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + STUDENTNUMBER_DESC_AMY,","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"                new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_EMAIL_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        // missing studentNumber prefix","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_STUDENTNUMBER_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_EMAIL_BOB + VALID_STUDENTNUMBER_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_EMAIL_DESC + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        // invalid studentNumber","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_STUDENTNUMBER_DESC","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":73,"tzejit":47}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand command \u003d (AddStudentCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        assertEquals(new AddStudentCommand(student), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_deleteStudent() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"                DeleteStudentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertEquals(new DeleteStudentCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        EditCommand temp \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertEquals(temp, command);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_markStudentAttendance() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"        int validWeek \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand command \u003d (MarkStudentAttCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"                MarkStudentAttCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"                        + PREFIX_WEEK + validWeek);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"        assertEquals(new MarkStudentAttCommand(INDEX_FIRST_STUDENT, validWeek), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wanninglim":14,"-":81,"tzejit":17}},{"path":"src/test/java/seedu/address/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    private DeleteStudentCommandParser parser \u003d new DeleteStudentCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, \"1\", new DeleteStudentCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wanninglim":7,"-":24,"tzejit":2}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_FRIEND + EMAIL_DESC_AMY + TAG_DESC_FRIEND + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EMAIL_DESC + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":142,"tzejit":34}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":33,"tzejit":1}},{"path":"src/test/java/seedu/address/logic/parser/MarkStudentAttCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" * outside of the MarkStudentAttCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" * same path through the MarkStudentAttCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"    private MarkStudentAttCommandParser parser \u003d new MarkStudentAttCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"    public void parse_validArgs_returnsMarkStudentAttCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"                new MarkStudentAttCommand(INDEX_FIRST_STUDENT, 1));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkStudentAttCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"wanninglim":39}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_STUDENTNUMBER \u003d \"a91023b\";","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_STUDENTNUMBER \u003d \"A0123456A\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentNumber((String) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentNumber(INVALID_STUDENTNUMBER));","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_validValueWithoutWhitespace_returnsStudentNumber() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(VALID_STUDENTNUMBER));","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_validValueWithWhitespace_returnsTrimmedStudentNumber() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"        String studentNumberWithWhitespace \u003d WHITESPACE + VALID_STUDENTNUMBER + WHITESPACE;","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(studentNumberWithWhitespace));","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":151,"tzejit":19}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"            return students;","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"            return tasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"weenleen":6,"-":71,"tzejit":31}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":116,"tzejit":16}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":67,"tzejit":1}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\")","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":64,"tzejit":11}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"tzejit":1}},{"path":"src/test/java/seedu/address/model/student/StudentNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class StudentNumberTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentNumber(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public void constructor_invalidStudentNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        String invalidStudentNumber \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentNumber(invalidStudentNumber));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void isValidStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        // null student number","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentNumber.isValidNumber(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        // blank student number","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        // missing parts","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"0123456A\")); // missing starting character","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456\")); // missing ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A012345A\")); // missing number","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        // invalid parts","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"@1234567B\")); // invalid character","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A01234_56B\")); // underscore in student number","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0 123456B\")); // spaces in student number","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\" A0123456A\")); // leading space","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456A \")); // trailing space","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"AA0123456A\")); // double upper case character at the front","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456AA\")); // double upper case character at the back","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"aA0123456A\")); // double lower case character at the front","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456Aa\")); // double lower case character at the back","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        // valid Number","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"a0123456A\")); // lower case starting character","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"A0123456a\")); // lower case ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"a0123456a\")); // lower case starting and ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tzejit":54}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        ;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        // different student number -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentNumber(VALID_STUDENTNUMBER_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":57,"tzejit":29}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_STUDENTNUMBER \u003d \"123\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_STUDENTNUMBER \u003d BENSON.getStudentNumber().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    private static final ArrayList\u003cInteger\u003e VALID_ATTENDANCE \u003d BENSON.getAttendance().attendanceList;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_EMAIL, VALID_STUDENTNUMBER, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_EMAIL, VALID_STUDENTNUMBER,","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"                VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_EMAIL, VALID_STUDENTNUMBER, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_STUDENTNUMBER, VALID_TAGS,","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"                VALID_ATTENDANCE);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, INVALID_STUDENTNUMBER, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d StudentNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    public void toModelType_nullStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"                VALID_ATTENDANCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentNumber.class.getSimpleName());","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_STUDENTNUMBER, invalidTags, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanninglim":3,"-":52,"tzejit":41}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"somekoreanboi"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"somekoreanboi"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"    private void assertEquals(AddressBook original, AddressBook addressBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"somekoreanboi":9,"-":99,"tzejit":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":34,"tzejit":13}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"somekoreanboi":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"tzejit":5}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private EditCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.descriptor \u003d new EditCommand.EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        descriptor.setStudentNumber(student.getStudentNumber());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code StudentNumber} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        descriptor.setStudentNumber(new StudentNumber(studentNumber));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public EditCommand.EditStudentDescriptor build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        return descriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":79}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_STUDENTNUMBER \u003d \"A0123456B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private Name name;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private Email email;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    private Attendance attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d new StudentNumber(DEFAULT_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        attendance \u003d new Attendance();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d studentToCopy.getStudentNumber();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"        attendance \u003d new Attendance(new ArrayList\u003c\u003e(studentToCopy.getAttendance().attendanceList));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code StudentNumber} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"wanninglim"},"content":"    public StudentBuilder withAttendance(Integer... integers) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"        this.attendance \u003d SampleDataUtil.getAttendanceList(integers);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    public Student build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        return new Student(name, email, studentNumber, tags, attendance);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":16,"tzejit":80}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"public class StudentUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        return AddStudentCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        sb.append(PREFIX_STUDENTNUMBER + student.getStudentNumber().toString() + \" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        descriptor.getStudentNumber().ifPresent(studentNumber -\u003e sb.append(PREFIX_STUDENTNUMBER)","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                .append(studentNumber.toString()).append(\" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":41,"tzejit":19}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Do CS2103 tP\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    private TaskName taskName;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private Deadline taskDeadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(DEFAULT_TASK_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"        this.taskDeadline \u003d new Deadline(DEFAULT_TASK_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        this.taskDeadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d taskToCopy.checkIsDone();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"    public TaskBuilder withDeadline(String date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        this.taskDeadline \u003d new Deadline(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    public Task build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"        return new Task(taskName, taskDeadline, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":73}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"tzejit":8}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"itsraveen":4,"-":9,"tzejit":3}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withEmail(\"johnd@example.com\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withEmail(\"werner@example.com\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\")","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withEmail(\"anna@example.com\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"stefan@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"hans@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            .withEmail(VALID_EMAIL_AMY).withStudentNumber(VALID_STUDENTNUMBER_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"            .withEmail(VALID_EMAIL_BOB).withStudentNumber(VALID_STUDENTNUMBER_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":36,"tzejit":34}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final Task TUTORIAL \u003d new TaskBuilder().withName(\"Do Tutorial\").withDeadline(\"2000-02-02\")","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"work\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final Task MEETING \u003d new TaskBuilder().withName(\"Prepare for meeting\").withDeadline(\"2010-02-02\")","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"work\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    public static final Task DINNER \u003d new TaskBuilder().withName(\"Buy Dinner\").withDeadline(\"2021-10-12\")","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"personal\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    public static final Task FRIEND_BIRTHDAY \u003d new TaskBuilder().withName(\"Plan Birthday\").withDeadline(\"2021-10-20\")","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    public static final Task EXERCISE \u003d new TaskBuilder().withName(\"Run\").withDeadline(\"2000-02-02\")","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    private TypicalTasks() {}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public static AddressBook getTypicalAddressBookWithTasks() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        return ab;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TUTORIAL, MEETING, DINNER, FRIEND_BIRTHDAY, EXERCISE));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":42}}]
